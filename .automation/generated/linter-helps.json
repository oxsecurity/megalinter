{
    "actionlint": [
        "Usage: actionlint [FLAGS] [FILES...] [-]",
        "",
        "  actionlint is a linter for GitHub Actions workflow files.",
        "",
        "  To check all YAML files in current repository, just run actionlint without",
        "  arguments. It automatically finds the nearest '.github/workflows' directory:",
        "",
        "    $ actionlint",
        "",
        "  To check specific files, pass the file paths as arguments:",
        "",
        "    $ actionlint file1.yaml file2.yaml",
        "",
        "  To check content which is not saved in file yet (e.g. output from some",
        "  command), pass - argument. It reads stdin and checks it as workflow file:",
        "",
        "    $ actionlint -",
        "",
        "  To serialize errors into JSON, use -format option. It allows to format error",
        "  messages flexibly with Go template syntax.",
        "",
        "    $ actionlint -format '{{json .}}'",
        "",
        "Documents:",
        "",
        "  - List of checks: https://github.com/rhysd/actionlint/tree/v1.7.7/docs/checks.md",
        "  - Usage:          https://github.com/rhysd/actionlint/tree/v1.7.7/docs/usage.md",
        "  - Configuration:  https://github.com/rhysd/actionlint/tree/v1.7.7/docs/config.md",
        "",
        "Flags:",
        "  -color",
        "      Always enable colorful output. This is useful to force colorful outputs",
        "  -config-file string",
        "      File path to config file",
        "  -debug",
        "      Enable debug output (for development)",
        "  -format string",
        "      Custom template to format error messages in Go template syntax. See the usage documentation for more details",
        "  -ignore value",
        "      Regular expression matching to error messages you want to ignore. This flag is repeatable",
        "  -init-config",
        "      Generate default config file at .github/actionlint.yaml in current project",
        "  -no-color",
        "      Disable colorful output",
        "  -oneline",
        "      Use one line per one error. Useful for reading error messages from programs",
        "  -pyflakes string",
        "      Command name or file path of \"pyflakes\" external command. If empty, pyflakes integration will be disabled (default \"pyflakes\")",
        "  -shellcheck string",
        "      Command name or file path of \"shellcheck\" external command. If empty, shellcheck integration will be disabled (default \"shellcheck\")",
        "  -stdin-filename string",
        "      File name when reading input from stdin (default \"<stdin>\")",
        "  -verbose",
        "      Enable verbose output",
        "  -version",
        "      Show version and how this binary was installed"
    ],
    "ansible-lint": [
        "WARNING: PATH altered to expand ~ in it. Read https://stackoverflow.com/a/44704799/99834 and correct your system configuration.",
        "usage: ansible-lint [-h] [-P | -L | -T]",
        "                    [-f {brief,full,md,json,codeclimate,quiet,pep8,sarif}]",
        "                    [--sarif-file SARIF_FILE] [-q]",
        "                    [--profile {min,basic,moderate,safety,shared,production}]",
        "                    [-p] [--project-dir PROJECT_DIR] [-r RULESDIR] [-R] [-s]",
        "                    [--fix [WRITE_LIST]] [--show-relpath] [-t TAGS] [-v]",
        "                    [-x SKIP_LIST] [--generate-ignore] [-w WARN_LIST]",
        "                    [--enable-list ENABLE_LIST] [--nocolor] [--force-color]",
        "                    [--exclude EXCLUDE_PATHS [EXCLUDE_PATHS ...]]",
        "                    [-c CONFIG_FILE] [-i IGNORE_FILE] [--offline] [--version]",
        "                    [lintables ...]",
        "",
        "positional arguments:",
        "  lintables             One or more files or paths. When missing it will enable auto-detection mode.",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -P, --list-profiles   List all profiles.",
        "  -L, --list-rules      List all the rules.",
        "  -T, --list-tags       List all the tags and the rules they cover.",
        "  -f {brief,full,md,json,codeclimate,quiet,pep8,sarif}, --format {brief,full,md,json,codeclimate,quiet,pep8,sarif}",
        "                        stdout formatting, json being an alias for codeclimate. (default: None)",
        "  --sarif-file SARIF_FILE",
        "                        SARIF output file",
        "  -q                    quieter, reduce verbosity, can be specified twice.",
        "  --profile {min,basic,moderate,safety,shared,production}",
        "                        Specify which rules profile to be used.",
        "  -p, --parseable       parseable output, same as '-f pep8'",
        "  --project-dir PROJECT_DIR",
        "                        Location of project/repository, autodetected based on location of configuration file.",
        "  -r RULESDIR, --rules-dir RULESDIR",
        "                        Specify custom rule directories. Add -R to keep using embedded rules from /venvs/ansible-lint/lib/python3.12/site-packages/ansiblelint/rules",
        "  -R                    Keep default rules when using -r",
        "  -s, --strict          Return non-zero exit code on warnings as well as errors",
        "  --fix [WRITE_LIST]    Allow ansible-lint to perform auto-fixes, including YAML reformatting. You can limit the effective rule transforms (the 'write_list') by passing a keywords 'all' or 'none' or a comma separated list of rule ids or rule tags. YAML reformatting happens whenever '--fix' or '--fix=' is used. '--fix' and '--fix=all' are equivalent: they allow all transforms to run. Presence of --fix in command overrides config file value.",
        "  --show-relpath        Display path relative to CWD",
        "  -t TAGS, --tags TAGS  only check rules whose id/tags match these values",
        "  -v                    Increase verbosity level (-vv for more)",
        "  -x SKIP_LIST, --skip-list SKIP_LIST",
        "                        only check rules whose id/tags do not match these values.             e.g: --skip-list=name,run-once",
        "  --generate-ignore     Generate a text file '.ansible-lint-ignore' that ignores all found violations. Each line contains filename and rule id separated by a space.",
        "  -w WARN_LIST, --warn-list WARN_LIST",
        "                        only warn about these rules, unless overridden in config file. Current version default value is: experimental, jinja[spacing], fqcn[deep]",
        "  --enable-list ENABLE_LIST",
        "                        activate optional rules by their tag name",
        "  --nocolor             disable colored output, same as NO_COLOR=1",
        "  --force-color         Force colored output, same as FORCE_COLOR=1",
        "  --exclude EXCLUDE_PATHS [EXCLUDE_PATHS ...]",
        "                        path to directories or files to skip. This option is repeatable.",
        "  -c CONFIG_FILE, --config-file CONFIG_FILE",
        "                        Specify configuration file to use. By default it will look for '.ansible-lint', '.ansible-lint.yml', '.ansible-lint.yaml', '.config/ansible-lint.yml', or '.config/ansible-lint.yaml'",
        "  -i IGNORE_FILE, --ignore-file IGNORE_FILE",
        "                        Specify ignore file to use. By default it will look for '.ansible-lint-ignore' or '.config/ansible-lint-ignore.txt'",
        "  --offline             Disable installation of requirements.yml and schema refreshing",
        "  --version",
        "",
        "The following environment variables are also recognized but there is no guarantee that they will work in future versions:",
        "",
        "ANSIBLE_LINT_CUSTOM_RULESDIR: Used for adding another folder into the lookup path for new rules.",
        "",
        "ANSIBLE_LINT_IGNORE_FILE: Define it to override the name of the default ignore file `.ansible-lint-ignore`",
        "",
        "ANSIBLE_LINT_WRITE_TMP: Tells linter to dump fixes into different temp files instead of overriding original. Used internally for testing.",
        "",
        "ANSIBLE_LINT_SKIP_SCHEMA_UPDATE: Tells ansible-lint to skip schema refresh.",
        "",
        "ANSIBLE_LINT_NODEPS: Avoids installing content dependencies and avoids performing checks that would fail when modules are not installed. Far less violations will be reported."
    ],
    "arm-ttk": [
        "",
        "cmdlet Import-Module at command pipeline position 1",
        "Supply values for the following parameters:",
        "Name[0]:",
        "Import-Module: Cannot process command because of one or more missing mandatory parameters: Name.",
        "Test-AzTemplate: ",
        "Line |",
        "   2 |  $TAZ_V = (Test-AzTemplate -help);",
        "     |            ~~~~~~~~~~~~~~~",
        "     | The term 'Test-AzTemplate' is not recognized as a name of a cmdlet, function, script file, or executable program.",
        "Check the spelling of the name, or if a path was included, verify that the path is correct and try again."
    ],
    "bandit": [
        "usage: bandit [-h] [-r] [-a {file,vuln}] [-n CONTEXT_LINES] [-c CONFIG_FILE]",
        "              [-p PROFILE] [-t TESTS] [-s SKIPS]",
        "              [-l | --severity-level {all,low,medium,high}]",
        "              [-i | --confidence-level {all,low,medium,high}]",
        "              [-f {csv,custom,html,json,sarif,sarif,screen,txt,xml,yaml}]",
        "              [--msg-template MSG_TEMPLATE] [-o [OUTPUT_FILE]] [-v] [-d] [-q]",
        "              [--ignore-nosec] [-x EXCLUDED_PATHS] [-b BASELINE]",
        "              [--ini INI_PATH] [--exit-zero] [--version]",
        "              [targets ...]",
        "",
        "Bandit - a Python source code security analyzer",
        "",
        "positional arguments:",
        "  targets               source file(s) or directory(s) to be tested",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -r, --recursive       find and process files in subdirectories",
        "  -a {file,vuln}, --aggregate {file,vuln}",
        "                        aggregate output by vulnerability (default) or by",
        "                        filename",
        "  -n CONTEXT_LINES, --number CONTEXT_LINES",
        "                        maximum number of code lines to output for each issue",
        "  -c CONFIG_FILE, --configfile CONFIG_FILE",
        "                        optional config file to use for selecting plugins and",
        "                        overriding defaults",
        "  -p PROFILE, --profile PROFILE",
        "                        profile to use (defaults to executing all tests)",
        "  -t TESTS, --tests TESTS",
        "                        comma-separated list of test IDs to run",
        "  -s SKIPS, --skip SKIPS",
        "                        comma-separated list of test IDs to skip",
        "  -l, --level           report only issues of a given severity level or higher",
        "                        (-l for LOW, -ll for MEDIUM, -lll for HIGH)",
        "  --severity-level {all,low,medium,high}",
        "                        report only issues of a given severity level or",
        "                        higher. \"all\" and \"low\" are likely to produce the same",
        "                        results, but it is possible for rules to be undefined",
        "                        which will not be listed in \"low\".",
        "  -i, --confidence      report only issues of a given confidence level or",
        "                        higher (-i for LOW, -ii for MEDIUM, -iii for HIGH)",
        "  --confidence-level {all,low,medium,high}",
        "                        report only issues of a given confidence level or",
        "                        higher. \"all\" and \"low\" are likely to produce the same",
        "                        results, but it is possible for rules to be undefined",
        "                        which will not be listed in \"low\".",
        "  -f {csv,custom,html,json,sarif,sarif,screen,txt,xml,yaml}, --format {csv,custom,html,json,sarif,sarif,screen,txt,xml,yaml}",
        "                        specify output format",
        "  --msg-template MSG_TEMPLATE",
        "                        specify output message template (only usable with",
        "                        --format custom), see CUSTOM FORMAT section for list",
        "                        of available values",
        "  -o [OUTPUT_FILE], --output [OUTPUT_FILE]",
        "                        write report to filename",
        "  -v, --verbose         output extra information like excluded and included",
        "                        files",
        "  -d, --debug           turn on debug mode",
        "  -q, --quiet, --silent",
        "                        only show output in the case of an error",
        "  --ignore-nosec        do not skip lines with # nosec comments",
        "  -x EXCLUDED_PATHS, --exclude EXCLUDED_PATHS",
        "                        comma-separated list of paths (glob patterns",
        "                        supported) to exclude from scan (note that these are",
        "                        in addition to the excluded paths provided in the",
        "                        config file) (default:",
        "                        .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg)",
        "  -b BASELINE, --baseline BASELINE",
        "                        path of a baseline report to compare against (only",
        "                        JSON-formatted files are accepted)",
        "  --ini INI_PATH        path to a .bandit file that supplies command line",
        "                        arguments",
        "  --exit-zero           exit with 0, even with results found",
        "  --version             show program's version number and exit",
        "",
        "CUSTOM FORMATTING",
        "-----------------",
        "",
        "Available tags:",
        "",
        "    {abspath}, {relpath}, {line}, {col}, {test_id},",
        "    {severity}, {msg}, {confidence}, {range}",
        "",
        "Example usage:",
        "",
        "    Default template:",
        "    bandit -r examples/ --format custom --msg-template \\",
        "    \"{abspath}:{line}: {test_id}[bandit]: {severity}: {msg}\"",
        "",
        "    Provides same output as:",
        "    bandit -r examples/ --format custom",
        "",
        "    Tags can also be formatted in python string.format() style:",
        "    bandit -r examples/ --format custom --msg-template \\",
        "    \"{relpath:20.20s}: {line:03}: {test_id:^8}: DEFECT: {msg:>20}\"",
        "",
        "    See python documentation for more information about formatting style:",
        "    https://docs.python.org/3/library/string.html",
        "",
        "The following tests were discovered and loaded:",
        "-----------------------------------------------",
        "  B101  assert_used",
        "  B102  exec_used",
        "  B103  set_bad_file_permissions",
        "  B104  hardcoded_bind_all_interfaces",
        "  B105  hardcoded_password_string",
        "  B106  hardcoded_password_funcarg",
        "  B107  hardcoded_password_default",
        "  B108  hardcoded_tmp_directory",
        "  B110  try_except_pass",
        "  B112  try_except_continue",
        "  B113  request_without_timeout",
        "  B201  flask_debug_true",
        "  B202  tarfile_unsafe_members",
        "  B301  pickle",
        "  B302  marshal",
        "  B303  md5",
        "  B304  ciphers",
        "  B305  cipher_modes",
        "  B306  mktemp_q",
        "  B307  eval",
        "  B308  mark_safe",
        "  B310  urllib_urlopen",
        "  B311  random",
        "  B312  telnetlib",
        "  B313  xml_bad_cElementTree",
        "  B314  xml_bad_ElementTree",
        "  B315  xml_bad_expatreader",
        "  B316  xml_bad_expatbuilder",
        "  B317  xml_bad_sax",
        "  B318  xml_bad_minidom",
        "  B319  xml_bad_pulldom",
        "  B321  ftplib",
        "  B323  unverified_context",
        "  B324  hashlib_insecure_functions",
        "  B401  import_telnetlib",
        "  B402  import_ftplib",
        "  B403  import_pickle",
        "  B404  import_subprocess",
        "  B405  import_xml_etree",
        "  B406  import_xml_sax",
        "  B407  import_xml_expat",
        "  B408  import_xml_minidom",
        "  B409  import_xml_pulldom",
        "  B411  import_xmlrpclib",
        "  B412  import_httpoxy",
        "  B413  import_pycrypto",
        "  B415  import_pyghmi",
        "  B501  request_with_no_cert_validation",
        "  B502  ssl_with_bad_version",
        "  B503  ssl_with_bad_defaults",
        "  B504  ssl_with_no_version",
        "  B505  weak_cryptographic_key",
        "  B506  yaml_load",
        "  B507  ssh_no_host_key_verification",
        "  B508  snmp_insecure_version",
        "  B509  snmp_weak_cryptography",
        "  B601  paramiko_calls",
        "  B602  subprocess_popen_with_shell_equals_true",
        "  B603  subprocess_without_shell_equals_true",
        "  B604  any_other_function_with_shell_equals_true",
        "  B605  start_process_with_a_shell",
        "  B606  start_process_with_no_shell",
        "  B607  start_process_with_partial_path",
        "  B608  hardcoded_sql_expressions",
        "  B609  linux_commands_wildcard_injection",
        "  B610  django_extra_used",
        "  B611  django_rawsql_used",
        "  B612  logging_config_insecure_listen",
        "  B613  trojansource",
        "  B614  pytorch_load",
        "  B701  jinja2_autoescape_false",
        "  B702  use_of_mako_templates",
        "  B703  django_mark_safe",
        "  B704  markupsafe_markup_xss"
    ],
    "bash-exec": [
        "GNU bash, version 5.2.37(1)-release-(x86_64-alpine-linux-musl)",
        "Usage:  bash [GNU long option] [option] ...",
        "  bash [GNU long option] [option] script-file ...",
        "GNU long options:",
        "  --debug",
        "  --debugger",
        "  --dump-po-strings",
        "  --dump-strings",
        "  --help",
        "  --init-file",
        "  --login",
        "  --noediting",
        "  --noprofile",
        "  --norc",
        "  --posix",
        "  --pretty-print",
        "  --rcfile",
        "  --restricted",
        "  --verbose",
        "  --version",
        "Shell options:",
        "  -ilrsD or -c command or -O shopt_option    (invocation only)",
        "  -abefhkmnptuvxBCEHPT or -o option",
        "Type `bash -c \"help set\"' for more information about shell options.",
        "Type `bash -c help' for more information about shell builtin commands.",
        "Use the `bashbug' command to report bugs.",
        "",
        "bash home page: <http://www.gnu.org/software/bash>",
        "General help using GNU software: <http://www.gnu.org/gethelp/>"
    ],
    "bicep_linter": [
        "Bicep CLI version 0.33.93 (7a77c7f2a5)",
        "",
        "Usage:",
        "  bicep build [options] <file>",
        "    Builds a .bicep file.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "    Options:",
        "      --outdir <dir>                 Saves the output at the specified directory.",
        "      --outfile <file>               Saves the output as the specified file path.",
        "      --stdout                       Prints the output to stdout.",
        "      --no-restore                   Builds the bicep file without restoring external modules.",
        "      --diagnostics-format <format>  Sets the format with which diagnostics are displayed. Valid values are ( Default | Sarif ).",
        "",
        "    Examples:",
        "      bicep build file.bicep",
        "      bicep build file.bicep --stdout",
        "      bicep build file.bicep --outdir dir1",
        "      bicep build file.bicep --outfile file.json",
        "      bicep build file.bicep --no-restore",
        "      bicep build file.bicep --diagnostics-format sarif",
        "",
        "  bicep format [options] <file>",
        "    Formats a .bicep file.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "    Options:",
        "      --outdir <dir>        Saves the output at the specified directory.",
        "      --outfile <file>      Saves the output as the specified file path.",
        "      --stdout              Prints the output to stdout.",
        "      --newline             Set newline char. Valid values are ( Auto | LF | CRLF | CR ).",
        "      --indent-kind          Set indentation kind. Valid values are ( Space | Tab ).",
        "      --indent-size          Number of spaces to indent with (Only valid with --indentKind set to Space).",
        "      --insert-final-newline  Insert a final newline.",
        "",
        "    Examples:",
        "      bicep format file.bicep",
        "      bicep format file.bicep --stdout",
        "      bicep format file.bicep --outdir dir1",
        "      bicep format file.bicep --outfile file.json",
        "      bicep format file.bicep --indent-kind Tab",
        "",
        "  bicep decompile [options] <file>",
        "    Attempts to decompile a template .json file to .bicep.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "    Options:",
        "      --outdir <dir>    Saves the output at the specified directory.",
        "      --outfile <file>  Saves the output as the specified file path.",
        "      --stdout          Prints the output to stdout.",
        "      --force           Allows overwriting the output file if it exists (applies only to 'bicep decompile' or 'bicep decompile-params').",
        "",
        "    Examples:",
        "      bicep decompile file.json",
        "      bicep decompile file.json --stdout",
        "      bicep decompile file.json --outdir dir1",
        "      bicep decompile file.json --force",
        "      bicep decompile file.json --outfile file.bicep",
        "",
        "  bicep lint [options] <file>",
        "    Lints a .bicep file.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "    Options:",
        "      --no-restore                   Skips restoring external modules.",
        "      --diagnostics-format <format>  Sets the format with which diagnostics are displayed. Valid values are ( Default | Sarif ).",
        "",
        "    Examples:",
        "      bicep lint file.bicep",
        "      bicep lint file.bicep --no-restore",
        "      bicep lint file.bicep --diagnostics-format sarif",
        "",
        "  bicep decompile-params [options] <file>",
        "    Attempts to decompile a parameters .json file to .bicepparam.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "    Options:",
        "      --outdir <dir>    Saves the output at the specified directory.",
        "      --outfile <file>  Saves the output as the specified file path.",
        "      --stdout          Prints the output to stdout.",
        "      --force           Allows overwriting the output file if it exists (applies only to 'bicep decompile' or 'bicep decompile-params').",
        "      --bicep-file      Path to the bicep template file that will be referenced in the using declaration",
        "",
        "    Examples:",
        "      bicep decompile-params file.json",
        "      bicep decompile-params file.json --bicep-file ./dir/main.bicep",
        "      bicep decompile-params file.json --stdout",
        "      bicep decompile-params file.json --outdir dir1",
        "      bicep decompile-params file.json --force",
        "      bicep decompile-params file.json --outfile file.bicepparam",
        "",
        "  bicep generate-params [options] <file>",
        "    Builds parameters file from the given bicep file, updates if there is an existing parameters file.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "    Options:",
        "      --no-restore      Generates the parameters file without restoring external modules.",
        "      --outdir <dir>    Saves the output at the specified directory.",
        "      --outfile <file>  Saves the output as the specified file path.",
        "      --stdout          Prints the output to stdout.",
        "      --output-format   Selects the output format {json, bicepparam}",
        "      --include-params  Selects which parameters to include into output {requiredonly, all}",
        "",
        "    Examples:",
        "      bicep generate-params file.bicep",
        "      bicep generate-params file.bicep --no-restore",
        "      bicep generate-params file.bicep --stdout",
        "      bicep generate-params file.bicep --outdir dir1",
        "      bicep generate-params file.bicep --outfile file.parameters.json",
        "      bicep generate-params file.bicep --output-format bicepparam --include-params all",
        "",
        "  bicep publish <file> --target <ref>",
        "    Publishes the .bicep file to the module registry.",
        "",
        "    Arguments:",
        "      <file>        The input file (can be a Bicep file or an ARM template file)",
        "      <ref>         The module reference",
        "",
        "    Options:",
        "      --documentation-uri  Module documentation uri",
        "      --with-source       [Experimental] Publish source code with the module",
        "      --force             Overwrite existing published module or file",
        "",
        "    Examples:",
        "      bicep publish file.bicep --target br:example.azurecr.io/hello/world:v1",
        "      bicep publish file.bicep --target br:example.azurecr.io/hello/world:v1 --force",
        "      bicep publish file.bicep --target br:example.azurecr.io/hello/world:v1 --documentation-uri https://github.com/hello-world/README.md --with-source",
        "      bicep publish file.json --target br:example.azurecr.io/hello/world:v1 --documentation-uri https://github.com/hello-world/README.md",
        "",
        "  bicep restore <file>",
        "    Restores external modules from the specified Bicep file to the local module cache.",
        "",
        "    Arguments:",
        "      <file>        The input file",
        "",
        "  bicep [options]",
        "    Options:",
        "      --version              -v   Shows bicep version information",
        "      --help                 -h   Shows this usage information",
        "      --license                   Prints license information",
        "      --third-party-notices       Prints third-party notices",
        "",
        "  bicep build-params <file>",
        "    Builds a .json file from a .bicepparam file.",
        "",
        "    Arguments:",
        "      <file>        The input Bicepparam file",
        "",
        "    Options:",
        "      --bicep-file <file>            Verifies if the specified bicep file path matches the one provided in the params file using declaration",
        "      --outdir <dir>                 Saves the output of building the parameter file only (.bicepparam) as json to the specified directory.",
        "      --outfile <file>               Saves the output of building the parameter file only (.bicepparam) as json to the specified file path.",
        "      --stdout                       Prints the output of building both the parameter file (.bicepparam) and the template it points to (.bicep) as json to stdout.",
        "      --no-restore                   Builds the bicep file (referenced in using declaration) without restoring external modules.",
        "      --diagnostics-format <format>  Sets the format with which diagnostics are displayed. Valid values are ( Default | Sarif ).",
        "",
        "    Examples:",
        "      bicep build-params params.bicepparam",
        "      bicep build-params params.bicepparam --stdout",
        "      bicep build-params params.bicepparam --outdir dir1",
        "      bicep build-params params.bicepparam --outfile otherParams.json",
        "      bicep build-params params.bicepparam --no-restore",
        "      bicep build-params params.bicepparam --diagnostics-format sarif",
        "",
        "  bicep jsonrpc [options]",
        "    Runs a JSONRPC server for interacting with Bicep programmatically.",
        "",
        "    Options:",
        "      --pipe <name>   Runs the JSONRPC server using a named pipe.",
        "      --socket <dir>  Runs the JSONRPC server on a specific port.",
        "      --stdio         Runs the JSONRPC server over stdin/stdout.",
        "",
        "    Examples:",
        "      bicep jsonrpc --pipe /path/to/pipe.sock",
        "      bicep jsonrpc --stdio",
        ""
    ],
    "black": [
        "Usage: black [OPTIONS] SRC ...",
        "",
        "  The uncompromising code formatter.",
        "",
        "Options:",
        "  -c, --code TEXT                 Format the code passed in as a string.",
        "  -l, --line-length INTEGER       How many characters per line to allow.",
        "                                  [default: 88]",
        "  -t, --target-version [py33|py34|py35|py36|py37|py38|py39|py310|py311|py312|py313]",
        "                                  Python versions that should be supported by",
        "                                  Black's output. You should include all",
        "                                  versions that your code supports. By",
        "                                  default, Black will infer target versions",
        "                                  from the project metadata in pyproject.toml.",
        "                                  If this does not yield conclusive results,",
        "                                  Black will use per-file auto-detection.",
        "  --pyi                           Format all input files like typing stubs",
        "                                  regardless of file extension. This is useful",
        "                                  when piping source on standard input.",
        "  --ipynb                         Format all input files like Jupyter",
        "                                  Notebooks regardless of file extension. This",
        "                                  is useful when piping source on standard",
        "                                  input.",
        "  --python-cell-magics TEXT       When processing Jupyter Notebooks, add the",
        "                                  given magic to the list of known python-",
        "                                  magics (capture, prun, pypy, python,",
        "                                  python3, time, timeit). Useful for",
        "                                  formatting cells with custom python magics.",
        "  -x, --skip-source-first-line    Skip the first line of the source code.",
        "  -S, --skip-string-normalization",
        "                                  Don't normalize string quotes or prefixes.",
        "  -C, --skip-magic-trailing-comma",
        "                                  Don't use trailing commas as a reason to",
        "                                  split lines.",
        "  --preview                       Enable potentially disruptive style changes",
        "                                  that may be added to Black's main",
        "                                  functionality in the next major release.",
        "  --unstable                      Enable potentially disruptive style changes",
        "                                  that have known bugs or are not currently",
        "                                  expected to make it into the stable style",
        "                                  Black's next major release. Implies",
        "                                  --preview.",
        "  --enable-unstable-feature [string_processing|hug_parens_with_braces_and_square_brackets|wrap_long_dict_values_in_parens|multiline_string_handling|always_one_newline_after_import]",
        "                                  Enable specific features included in the",
        "                                  `--unstable` style. Requires `--preview`. No",
        "                                  compatibility guarantees are provided on the",
        "                                  behavior or existence of any unstable",
        "                                  features.",
        "  --check                         Don't write the files back, just return the",
        "                                  status. Return code 0 means nothing would",
        "                                  change. Return code 1 means some files would",
        "                                  be reformatted. Return code 123 means there",
        "                                  was an internal error.",
        "  --diff                          Don't write the files back, just output a",
        "                                  diff to indicate what changes Black would've",
        "                                  made. They are printed to stdout so",
        "                                  capturing them is simple.",
        "  --color / --no-color            Show (or do not show) colored diff. Only",
        "                                  applies when --diff is given.",
        "  --line-ranges START-END         When specified, Black will try its best to",
        "                                  only format these lines. This option can be",
        "                                  specified multiple times, and a union of the",
        "                                  lines will be formatted. Each range must be",
        "                                  specified as two integers connected by a",
        "                                  `-`: `<START>-<END>`. The `<START>` and",
        "                                  `<END>` integer indices are 1-based and",
        "                                  inclusive on both ends.",
        "  --fast / --safe                 By default, Black performs an AST safety",
        "                                  check after formatting your code. The --fast",
        "                                  flag turns off this check and the --safe",
        "                                  flag explicitly enables it. [default:",
        "                                  --safe]",
        "  --required-version TEXT         Require a specific version of Black to be",
        "                                  running. This is useful for ensuring that",
        "                                  all contributors to your project are using",
        "                                  the same version, because different versions",
        "                                  of Black may format code a little",
        "                                  differently. This option can be set in a",
        "                                  configuration file for consistent results",
        "                                  across environments.",
        "  --exclude TEXT                  A regular expression that matches files and",
        "                                  directories that should be excluded on",
        "                                  recursive searches. An empty value means no",
        "                                  paths are excluded. Use forward slashes for",
        "                                  directories on all platforms (Windows, too).",
        "                                  By default, Black also ignores all paths",
        "                                  listed in .gitignore. Changing this value",
        "                                  will override all default exclusions.",
        "                                  [default: /(\\.direnv|\\.eggs|\\.git|\\.hg|\\.ipy",
        "                                  nb_checkpoints|\\.mypy_cache|\\.nox|\\.pytest_c",
        "                                  ache|\\.ruff_cache|\\.tox|\\.svn|\\.venv|\\.vscod",
        "                                  e|__pypackages__|_build|buck-",
        "                                  out|build|dist|venv)/]",
        "  --extend-exclude TEXT           Like --exclude, but adds additional files",
        "                                  and directories on top of the default values",
        "                                  instead of overriding them.",
        "  --force-exclude TEXT            Like --exclude, but files and directories",
        "                                  matching this regex will be excluded even",
        "                                  when they are passed explicitly as",
        "                                  arguments. This is useful when invoking",
        "                                  Black programmatically on changed files,",
        "                                  such as in a pre-commit hook or editor",
        "                                  plugin.",
        "  --stdin-filename TEXT           The name of the file when passing it through",
        "                                  stdin. Useful to make sure Black will",
        "                                  respect the --force-exclude option on some",
        "                                  editors that rely on using stdin.",
        "  --include TEXT                  A regular expression that matches files and",
        "                                  directories that should be included on",
        "                                  recursive searches. An empty value means all",
        "                                  files are included regardless of the name.",
        "                                  Use forward slashes for directories on all",
        "                                  platforms (Windows, too). Overrides all",
        "                                  exclusions, including from .gitignore and",
        "                                  command line options.  [default:",
        "                                  (\\.pyi?|\\.ipynb)$]",
        "  -W, --workers INTEGER RANGE     When Black formats multiple files, it may",
        "                                  use a process pool to speed up formatting.",
        "                                  This option controls the number of parallel",
        "                                  workers. This can also be specified via the",
        "                                  BLACK_NUM_WORKERS environment variable.",
        "                                  Defaults to the number of CPUs in the",
        "                                  system.  [x>=1]",
        "  -q, --quiet                     Stop emitting all non-critical output. Error",
        "                                  messages will still be emitted (which can",
        "                                  silenced by 2>/dev/null).",
        "  -v, --verbose                   Emit messages about files that were not",
        "                                  changed or were ignored due to exclusion",
        "                                  patterns. If Black is using a configuration",
        "                                  file, a message detailing which one it is",
        "                                  using will be emitted.",
        "  --version                       Show the version and exit.",
        "  --config FILE                   Read configuration options from a",
        "                                  configuration file.",
        "  -h, --help                      Show this message and exit."
    ],
    "cfn-lint": [
        "usage:",
        "Basic: cfn-lint test.yaml",
        "Ignore a rule: cfn-lint -i E3012 -- test.yaml",
        "Configure a rule: cfn-lint -x E3012:strict=true -t test.yaml",
        "Lint all yaml files in a folder: cfn-lint dir/**/*.yaml",
        "",
        "CloudFormation Linter",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "",
        "Standard:",
        "  TEMPLATE              The CloudFormation template to be linted",
        "  -t TEMPLATE [TEMPLATE ...], --template TEMPLATE [TEMPLATE ...]",
        "                        The CloudFormation template to be linted",
        "  -b, --ignore-bad-template",
        "                        Ignore failures with Bad template",
        "  --ignore-templates IGNORE_TEMPLATES [IGNORE_TEMPLATES ...]",
        "                        Ignore templates",
        "  -f {quiet,parseable,json,junit,pretty,sarif}, --format {quiet,parseable,json,junit,pretty,sarif}",
        "                        Output Format",
        "  -l, --list-rules      list all the rules",
        "  -r REGIONS [REGIONS ...], --regions REGIONS [REGIONS ...]",
        "                        list the regions to validate against.",
        "  -i IGNORE_CHECKS [IGNORE_CHECKS ...], --ignore-checks IGNORE_CHECKS [IGNORE_CHECKS ...]",
        "                        only check rules whose id do not match these values",
        "  -c INCLUDE_CHECKS [INCLUDE_CHECKS ...], --include-checks INCLUDE_CHECKS [INCLUDE_CHECKS ...]",
        "                        include rules whose id match these values",
        "  -m MANDATORY_CHECKS [MANDATORY_CHECKS ...], --mandatory-checks MANDATORY_CHECKS [MANDATORY_CHECKS ...]",
        "                        always check rules whose id match these values,",
        "                        regardless of template exclusions",
        "  -e, --include-experimental",
        "                        Include experimental rules",
        "  -x CONFIGURE_RULES [CONFIGURE_RULES ...], --configure-rule CONFIGURE_RULES [CONFIGURE_RULES ...]",
        "                        Provide configuration for a rule. Format",
        "                        RuleId:key=value. Example: E3012:strict=true",
        "  --config-file CONFIG_FILE",
        "                        Specify the cfnlintrc file to use",
        "  -z CUSTOM_RULES, --custom-rules CUSTOM_RULES",
        "                        Allows specification of a custom rule file.",
        "  -v, --version         Version of cfn-lint",
        "  --output-file OUTPUT_FILE",
        "                        Writes the output to the specified file, ideal for",
        "                        producing reports",
        "  --merge-configs       Merges lists between configuration layers",
        "  --non-zero-exit-code {informational,warning,error,none}",
        "                        Exit code will be non zero from the specified rule",
        "                        class and higher",
        "",
        "Advanced / Debugging:",
        "  -D, --debug           Enable debug logging",
        "  -I, --info            Enable information logging",
        "  -a APPEND_RULES [APPEND_RULES ...], --append-rules APPEND_RULES [APPEND_RULES ...]",
        "                        specify one or more rules directories using one or",
        "                        more --append-rules arguments.",
        "  -o OVERRIDE_SPEC, --override-spec OVERRIDE_SPEC",
        "                        A CloudFormation Spec override file that allows",
        "                        customization",
        "  -g, --build-graph     Creates a file in the same directory as the template",
        "                        that models the template's resources in DOT format",
        "  -s REGISTRY_SCHEMAS [REGISTRY_SCHEMAS ...], --registry-schemas REGISTRY_SCHEMAS [REGISTRY_SCHEMAS ...]",
        "                        one or more directories of CloudFormation Registry",
        "                        Schemas",
        "  -u, --update-specs    Update the CloudFormation Specs",
        "  -p, --patch-specs     Patch the CloudFormation Specs in place"
    ],
    "checkmake": [
        "checkmake.",
        "",
        "  Usage:",
        "  checkmake [options] <makefile>",
        "  checkmake -h | --help",
        "  checkmake --version",
        "  checkmake --list-rules",
        "",
        "  Options:",
        "  -h --help               Show this screen.",
        "  --version               Show version.",
        "  --debug                 Enable debug mode",
        "  --config=<configPath>   Configuration file to read",
        "  --format=<format>       Output format as a Golang text/template template",
        "  --list-rules            List registered rules"
    ],
    "checkov": [
        "usage: checkov [-h] [-v] [--support] [-d DIRECTORY] [--add-check]",
        "               [-f FILE [FILE ...]] [--skip-path SKIP_PATH]",
        "               [--external-checks-dir EXTERNAL_CHECKS_DIR]",
        "               [--external-checks-git EXTERNAL_CHECKS_GIT] [-l]",
        "               [-o {cli,csv,cyclonedx,cyclonedx_json,json,junitxml,github_failed_only,gitlab_sast,sarif,spdx}]",
        "               [--output-file-path OUTPUT_FILE_PATH] [--output-bc-ids]",
        "               [--include-all-checkov-policies] [--quiet] [--compact]",
        "               [--framework FRAMEWORK [FRAMEWORK ...]]",
        "               [--skip-framework SKIP_FRAMEWORK [SKIP_FRAMEWORK ...]]",
        "               [-c CHECK] [--skip-check SKIP_CHECK]",
        "               [--run-all-external-checks] [-s] [--soft-fail-on SOFT_FAIL_ON]",
        "               [--hard-fail-on HARD_FAIL_ON] [--bc-api-key BC_API_KEY]",
        "               [--prisma-api-url PRISMA_API_URL] [--skip-results-upload]",
        "               [--docker-image DOCKER_IMAGE]",
        "               [--dockerfile-path DOCKERFILE_PATH] [--repo-id REPO_ID]",
        "               [-b BRANCH] [--skip-download] [--use-enforcement-rules]",
        "               [--download-external-modules DOWNLOAD_EXTERNAL_MODULES]",
        "               [--var-file VAR_FILE]",
        "               [--external-modules-download-path EXTERNAL_MODULES_DOWNLOAD_PATH]",
        "               [--evaluate-variables EVALUATE_VARIABLES] [-ca CA_CERTIFICATE]",
        "               [--no-cert-verify]",
        "               [--repo-root-for-plan-enrichment REPO_ROOT_FOR_PLAN_ENRICHMENT]",
        "               [--config-file CONFIG_FILE] [--create-config CREATE_CONFIG]",
        "               [--show-config] [--create-baseline] [--baseline BASELINE]",
        "               [--output-baseline-as-skipped]",
        "               [--skip-cve-package SKIP_CVE_PACKAGE]",
        "               [--policy-metadata-filter POLICY_METADATA_FILTER]",
        "               [--policy-metadata-filter-exception POLICY_METADATA_FILTER_EXCEPTION]",
        "               [--secrets-scan-file-type SECRETS_SCAN_FILE_TYPE]",
        "               [--enable-secret-scan-all-files]",
        "               [--block-list-secret-scan BLOCK_LIST_SECRET_SCAN]",
        "               [--summary-position {top,bottom}]",
        "               [--skip-resources-without-violations] [--deep-analysis]",
        "               [--no-fail-on-crash] [--mask MASK] [--scan-secrets-history]",
        "               [--secrets-history-timeout SECRETS_HISTORY_TIMEOUT]",
        "               [--openai-api-key OPENAI_API_KEY]",
        "               [--custom-tool-name CUSTOM_TOOL_NAME]",
        "",
        "Infrastructure as code static analysis",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -v, --version         version",
        "  --support             Enable debug logs and upload the logs to the server.",
        "                        Requires a Bridgecrew or Prisma Cloud API key.",
        "  -d DIRECTORY, --directory DIRECTORY",
        "                        IaC root directory (can not be used together with",
        "                        --file).",
        "  --add-check           Generate a new check via CLI prompt",
        "  -f FILE [FILE ...], --file FILE [FILE ...]",
        "                        File to scan (can not be used together with",
        "                        --directory). With this option, Checkov will attempt",
        "                        to filter the runners based on the file type. For",
        "                        example, if you specify a \".tf\" file, only the",
        "                        terraform and secrets frameworks will be included. You",
        "                        can further limit this (e.g., skip secrets) by using",
        "                        the --skip-framework argument.",
        "  --skip-path SKIP_PATH",
        "                        Path (file or directory) to skip, using regular",
        "                        expression logic, relative to current working",
        "                        directory. Word boundaries are not implicit; i.e.,",
        "                        specifying \"dir1\" will skip any directory or",
        "                        subdirectory named \"dir1\". Ignored with -f. Can be",
        "                        specified multiple times.",
        "  --external-checks-dir EXTERNAL_CHECKS_DIR",
        "                        Directory for custom checks to be loaded. Can be",
        "                        repeated. Note that this will run Python code from the",
        "                        specified directory, so only use this option with",
        "                        trusted directories.",
        "  --external-checks-git EXTERNAL_CHECKS_GIT",
        "                        GitHub url of external checks to be added. You can",
        "                        specify a subdirectory after a double-slash //.It is",
        "                        ossible to use ?ref=tags/tagName or",
        "                        ?ref=heads/branchName or ?ref=commit_id and cannot be",
        "                        used together with --external-checks-dir. Note that",
        "                        this will run Python code from the specified",
        "                        directory, so only use this option with trusted",
        "                        repositories.",
        "  -l, --list            List checks",
        "  -o {cli,csv,cyclonedx,cyclonedx_json,json,junitxml,github_failed_only,gitlab_sast,sarif,spdx}, --output {cli,csv,cyclonedx,cyclonedx_json,json,junitxml,github_failed_only,gitlab_sast,sarif,spdx}",
        "                        Report output format. Add multiple outputs by using",
        "                        the flag multiple times (-o sarif -o cli)",
        "  --output-file-path OUTPUT_FILE_PATH",
        "                        Name of the output folder to save the chosen output",
        "                        formats. Advanced usage: By using -o cli -o junitxml",
        "                        --output-file-path console,results.xml the CLI output",
        "                        will be printed to the console and the JunitXML output",
        "                        to the file results.xml.",
        "  --output-bc-ids       Print Bridgecrew platform IDs (BC...) instead of",
        "                        Checkov IDs (CKV...), if the check exists in the",
        "                        platform",
        "  --include-all-checkov-policies",
        "                        When running with an API key, Checkov will omit any",
        "                        policies that do not exist in Prisma Cloud platform,",
        "                        except for local custom policies loaded with the",
        "                        --external-check flags. Use this key to include",
        "                        policies that only exist in Checkov in the scan. Note",
        "                        that this will make the local CLI results different",
        "                        from the results you see in the platform. Has no",
        "                        effect if you are not using an API key. Use the",
        "                        --check option to explicitly include checks by ID even",
        "                        if they are not in the platform, without using this",
        "                        flag.",
        "  --quiet               in case of CLI output, display only failed checks.",
        "                        Also disables progress bars",
        "  --compact             in case of CLI output, do not display code blocks",
        "  --framework FRAMEWORK [FRAMEWORK ...]",
        "                        Filter scan to run only on specific infrastructure as",
        "                        code frameworks. Defaults to all frameworks. If you",
        "                        explicitly include 'all' as a value, then all other",
        "                        values are ignored. Enter as a comma-separated list or",
        "                        repeat the flag multiple times. For example,",
        "                        --framework terraform,sca_package or --framework",
        "                        terraform --framework sca_package. Possible values:",
        "                        all, ansible, argo_workflows, arm, azure_pipelines,",
        "                        bicep, bitbucket_pipelines, cdk, circleci_pipelines,",
        "                        cloudformation, dockerfile, github_configuration,",
        "                        github_actions, gitlab_configuration, gitlab_ci,",
        "                        bitbucket_configuration, helm, json, yaml, kubernetes,",
        "                        kustomize, openapi, sca_package, sca_image, secrets,",
        "                        serverless, terraform, terraform_json, terraform_plan,",
        "                        sast, sast_python, sast_java, sast_javascript,",
        "                        sast_typescript, sast_golang, 3d_policy [env var:",
        "                        CKV_FRAMEWORK]",
        "  --skip-framework SKIP_FRAMEWORK [SKIP_FRAMEWORK ...]",
        "                        Filter scan to skip specific infrastructure as code",
        "                        frameworks. This will be included automatically for",
        "                        some frameworks if system dependencies are missing.",
        "                        Enter as a comma-separated list or repeat the flag",
        "                        multiple times. For example, --skip-framework",
        "                        terraform,sca_package or --skip-framework terraform",
        "                        --skip-framework sca_package. Cannot include values",
        "                        that are also included in --framework. Possible",
        "                        values: ansible, argo_workflows, arm, azure_pipelines,",
        "                        bicep, bitbucket_pipelines, cdk, circleci_pipelines,",
        "                        cloudformation, dockerfile, github_configuration,",
        "                        github_actions, gitlab_configuration, gitlab_ci,",
        "                        bitbucket_configuration, helm, json, yaml, kubernetes,",
        "                        kustomize, openapi, sca_package, sca_image, secrets,",
        "                        serverless, terraform, terraform_json, terraform_plan,",
        "                        sast, sast_python, sast_java, sast_javascript,",
        "                        sast_typescript, sast_golang, 3d_policy",
        "  -c CHECK, --check CHECK",
        "                        Checks to run; any other checks will be skipped. Enter",
        "                        one or more items separated by commas. Each item may",
        "                        be either a Checkov check ID (CKV_AWS_123), a BC check",
        "                        ID (BC_AWS_GENERAL_123), or a severity (LOW, MEDIUM,",
        "                        HIGH, CRITICAL). If you use a severity, then all",
        "                        checks equal to or above the lowest severity in the",
        "                        list will be included. This option can be combined",
        "                        with --skip-check. If it is, then the logic is to",
        "                        first take all checks that match this list, and then",
        "                        remove all checks that match the skip list. For",
        "                        example, if you use --check CKV_123 and --skip-check",
        "                        LOW, then CKV_123 will not run if it is a LOW",
        "                        severity. Similarly, if you use --check CKV_789",
        "                        --skip-check MEDIUM, then CKV_789 will run if it is a",
        "                        HIGH severity. If you use a check ID here along with",
        "                        an API key, and the check is not part of the BC / PC",
        "                        platform, then the check will still be run (see",
        "                        --include-all-checkov-policies for more info). [env",
        "                        var: CKV_CHECK]",
        "  --skip-check SKIP_CHECK",
        "                        Checks to skip; any other checks will not be run.",
        "                        Enter one or more items separated by commas. Each item",
        "                        may be either a Checkov check ID (CKV_AWS_123), a BC",
        "                        check ID (BC_AWS_GENERAL_123), or a severity (LOW,",
        "                        MEDIUM, HIGH, CRITICAL). If you use a severity, then",
        "                        all checks equal to or below the highest severity in",
        "                        the list will be skipped. This option can be combined",
        "                        with --check. If it is, priority is given to checks",
        "                        explicitly listed by ID or wildcard over checks listed",
        "                        by severity. For example, if you use --skip-check",
        "                        CKV_123 and --check HIGH, then CKV_123 will be skipped",
        "                        even if it is a HIGH severity. In the case of a tie",
        "                        (e.g., --check MEDIUM and --skip-check HIGH for a",
        "                        medium severity check), then the check will be",
        "                        skipped. [env var: CKV_SKIP_CHECK]",
        "  --run-all-external-checks",
        "                        Run all external checks (loaded via --external-checks",
        "                        options) even if the checks are not present in the",
        "                        --check list. This allows you to always ensure that",
        "                        new checks present in the external source are used. If",
        "                        an external check is included in --skip-check, it will",
        "                        still be skipped.",
        "  -s, --soft-fail       Runs checks but always returns a 0 exit code. Using",
        "                        either --soft-fail-on and / or --hard-fail-on",
        "                        overrides this option, except for the case when a",
        "                        result does not match either of the soft fail or hard",
        "                        fail criteria, in which case this flag determines the",
        "                        result.",
        "  --soft-fail-on SOFT_FAIL_ON",
        "                        Exits with a 0 exit code if only the specified items",
        "                        fail. Enter one or more items separated by commas.",
        "                        Each item may be either a Checkov check ID",
        "                        (CKV_AWS_123), a BC check ID (BC_AWS_GENERAL_123), or",
        "                        a severity (LOW, MEDIUM, HIGH, CRITICAL). If you use a",
        "                        severity, then any severity equal to or less than the",
        "                        highest severity in the list will result in a soft",
        "                        fail. This option may be used with --hard-fail-on,",
        "                        using the same priority logic described in --check and",
        "                        --skip-check options above, with --hard-fail-on taking",
        "                        precedence in a tie. If a given result does not meet",
        "                        the --soft-fail-on nor the --hard-fail-on criteria,",
        "                        then the default is to hard fail",
        "  --hard-fail-on HARD_FAIL_ON",
        "                        Exits with a non-zero exit code for specified checks.",
        "                        Enter one or more items separated by commas. Each item",
        "                        may be either a Checkov check ID (CKV_AWS_123), a BC",
        "                        check ID (BC_AWS_GENERAL_123), or a severity (LOW,",
        "                        MEDIUM, HIGH, CRITICAL). If you use a severity, then",
        "                        any severity equal to or greater than the lowest",
        "                        severity in the list will result in a hard fail. This",
        "                        option can be used with --soft-fail-on, using the same",
        "                        priority logic described in --check and --skip-check",
        "                        options above, with --hard-fail-on taking precedence",
        "                        in a tie.",
        "  --bc-api-key BC_API_KEY",
        "                        Bridgecrew API key or Prisma Cloud Access Key (see",
        "                        --prisma-api-url) [env var: BC_API_KEY]",
        "  --prisma-api-url PRISMA_API_URL",
        "                        The Prisma Cloud API URL (see:",
        "                        https://prisma.pan.dev/api/cloud/api-urls). Requires",
        "                        --bc-api-key to be a Prisma Cloud Access Key in the",
        "                        following format: <access_key_id>::<secret_key> [env",
        "                        var: PRISMA_API_URL]",
        "  --skip-results-upload",
        "                        Do not upload scan results to the platform to view in",
        "                        the console. Results are only available locally. If",
        "                        you use the --support flag, logs will still get",
        "                        uploaded.",
        "  --docker-image DOCKER_IMAGE, --image DOCKER_IMAGE",
        "                        Scan docker images by name or ID. Only works with",
        "                        --bc-api-key flag",
        "  --dockerfile-path DOCKERFILE_PATH",
        "                        Path to the Dockerfile of the scanned docker image",
        "  --repo-id REPO_ID     Identity string of the repository, with form",
        "                        <repo_owner>/<repo_name>. Required when using the",
        "                        platform integration (API key).",
        "  -b BRANCH, --branch BRANCH",
        "                        Selected branch of the persisted repository. Only has",
        "                        effect when using the --bc-api-key flag",
        "  --skip-download       Do not download any data from Prisma Cloud. This will",
        "                        omit doc links, severities, etc., as well as custom",
        "                        policies and suppressions if using an API token. Note:",
        "                        it will prevent BC platform IDs from being available",
        "                        in Checkov.",
        "  --use-enforcement-rules",
        "                        Use the Enforcement rules configured in the platform",
        "                        for hard / soft fail logic. With this option, the",
        "                        enforcement rule matching this repo, or the default",
        "                        rule if there is no match, will determine this",
        "                        behavior: any check with a severity below the selected",
        "                        rule's soft-fail threshold will be skipped; any check",
        "                        with a severity equal to or greater than the rule's",
        "                        hard-fail threshold will be part of the hard-fail",
        "                        list, and any check in between will be part of the",
        "                        soft-fail list. For example, if the given enforcement",
        "                        rule has a hard-fail value of HIGH and a soft-fail",
        "                        value of MEDIUM,this is the equivalent of using the",
        "                        flags `--skip-check LOW --hard-fail-on HIGH`. You can",
        "                        use --check, --skip-check, --soft-fail, --soft-fail-",
        "                        on, or --hard-fail-on to override portions of an",
        "                        enforcement rule. Note, however, that the logic of",
        "                        applying the --check list and then the --skip-check",
        "                        list (as described above under --check) still applies",
        "                        here. Requires a BC or PC platform API key.",
        "  --download-external-modules DOWNLOAD_EXTERNAL_MODULES",
        "                        download external terraform modules from public git",
        "                        repositories and terraform registry [env var:",
        "                        DOWNLOAD_EXTERNAL_MODULES]",
        "  --var-file VAR_FILE   Variable files to load in addition to the default",
        "                        files (see https://www.terraform.io/docs/language/valu",
        "                        es/variables.html#variable-definitions-tfvars-",
        "                        files).Currently only supported for source Terraform",
        "                        (.tf file), and Helm chart scans.Requires using",
        "                        --directory, not --file. [env var: CKV_VAR_FILE]",
        "  --external-modules-download-path EXTERNAL_MODULES_DOWNLOAD_PATH",
        "                        set the path for the download external terraform",
        "                        modules [env var: EXTERNAL_MODULES_DIR]",
        "  --evaluate-variables EVALUATE_VARIABLES",
        "                        evaluate the values of variables and locals [env var:",
        "                        CKV_EVAL_VARS]",
        "  -ca CA_CERTIFICATE, --ca-certificate CA_CERTIFICATE",
        "                        Custom CA certificate (bundle) file [env var:",
        "                        BC_CA_BUNDLE]",
        "  --no-cert-verify      Skip SSL certificate verification. Use this to bypass",
        "                        errors related to SSL certificates. Warning: this",
        "                        should only be used for testing purposes. Skipping",
        "                        certificate verification is dangerous as invalid and",
        "                        falsified certificates cannot be detected.",
        "  --repo-root-for-plan-enrichment REPO_ROOT_FOR_PLAN_ENRICHMENT",
        "                        Directory containing the hcl code used to generate a",
        "                        given plan file. Use with -f.",
        "  --config-file CONFIG_FILE",
        "                        path to the Checkov configuration YAML file",
        "  --create-config CREATE_CONFIG",
        "                        takes the current command line args and writes them",
        "                        out to a config file at the given path",
        "  --show-config         prints all args and config settings and where they",
        "                        came from (eg. commandline, config file, environment",
        "                        variable or default)",
        "  --create-baseline     Alongside outputting the findings, save all results to",
        "                        .checkov.baseline file so future runs will not re-flag",
        "                        the same noise. Works only with `--directory` flag",
        "  --baseline BASELINE   Use a .checkov.baseline file to compare current",
        "                        results with a known baseline. Report will include",
        "                        only failed checks that are new with respect to the",
        "                        provided baseline",
        "  --output-baseline-as-skipped",
        "                        output checks that are skipped due to baseline file",
        "                        presence",
        "  --skip-cve-package SKIP_CVE_PACKAGE",
        "                        filter scan to run on all packages but a specific",
        "                        package identifier (denylist), You can specify this",
        "                        argument multiple times to skip multiple packages",
        "  --policy-metadata-filter POLICY_METADATA_FILTER",
        "                        comma separated key:value string to filter policies",
        "                        based on Prisma Cloud policy metadata. When used with",
        "                        --policy-metadata-filter-exception, the exceptions",
        "                        override any policies selected asa result of the",
        "                        --policy-metadata-filter flag.See https://prisma.pan.d",
        "                        ev/api/cloud/cspm/policy#operation/get-policy-filters-",
        "                        and-options for information on allowed filters.",
        "                        Example:",
        "                        policy.label=label1,policy.label=label2,cloud.type=aws",
        "                        [env var: CKV_POLICY_METADATA_FILTER]",
        "  --policy-metadata-filter-exception POLICY_METADATA_FILTER_EXCEPTION",
        "                        comma separated key:value string to exclude filtered",
        "                        policies based on Prisma Cloud policy metadata. When",
        "                        used with --policy-metadata-filter, the exceptions",
        "                        override any policies selected asa result of the",
        "                        --policy-metadata-filter flag.See https://prisma.pan.d",
        "                        ev/api/cloud/cspm/policy#operation/get-policy-filters-",
        "                        and-options for information on allowed filters.",
        "                        Example:",
        "                        policy.label=label1,policy.label=label2,cloud.type=aws",
        "                        [env var: CKV_POLICY_METADATA_FILTER_EXCEPTION]",
        "  --secrets-scan-file-type SECRETS_SCAN_FILE_TYPE",
        "                        not in use [env var: CKV_SECRETS_SCAN_FILE_TYPE]",
        "  --enable-secret-scan-all-files",
        "                        enable secret scan for all files [env var:",
        "                        CKV_SECRETS_SCAN_ENABLE_ALL]",
        "  --block-list-secret-scan BLOCK_LIST_SECRET_SCAN",
        "                        List of files to filter out from the secret scanner",
        "                        [env var: CKV_SECRETS_SCAN_BLOCK_LIST]",
        "  --summary-position {top,bottom}",
        "                        Chose whether the summary will be appended on top",
        "                        (before the checks results) or on bottom (after check",
        "                        results), default is on top.",
        "  --skip-resources-without-violations",
        "                        exclude extra resources (resources without violations)",
        "                        from report output [env var:",
        "                        CKV_SKIP_RESOURCES_WITHOUT_VIOLATIONS]",
        "  --deep-analysis       Combine the TF Plan and TF graphs to make connections",
        "                        not available in either",
        "  --no-fail-on-crash    Return exit code 0 instead of 2 [env var:",
        "                        CKV_NO_FAIL_ON_CRASH]",
        "  --mask MASK           List of <resource_type>:<variable> OR <variable> only.",
        "                        Each entry in the list will be used formasking the",
        "                        desired attribute for resource (or for all resources,",
        "                        if no resource given).Notice: one entry can contain",
        "                        several variables, seperated with a comma. For",
        "                        example:<resource_type>:<variable1>,<variable2> OR",
        "                        <variable1>,<variable2>",
        "  --scan-secrets-history",
        "                        will scan the history of commits for secrets",
        "  --secrets-history-timeout SECRETS_HISTORY_TIMEOUT",
        "                        maximum time to stop the scan",
        "  --openai-api-key OPENAI_API_KEY",
        "                        Add an OpenAI API key to enhance finding guidelines by",
        "                        sending violated policies and resource code to OpenAI",
        "                        to request remediation guidance. This will use your",
        "                        OpenAI credits. Set your number of findings that will",
        "                        receive enhanced guidelines using",
        "                        CKV_OPENAI_MAX_FINDINGS [env var: CKV_OPENAI_API_KEY]",
        "  --custom-tool-name CUSTOM_TOOL_NAME",
        "                        Add a tool name if you want your output to be tagged",
        "                        with a specific tool name,this is useful when",
        "                        integrating with other tools such as uploading SARIF",
        "                        files to github code scanning",
        "",
        "Args that start with '--' can also be set in a config file (/.checkov.yaml or",
        "/.checkov.yml or /root/.checkov.yaml or /root/.checkov.yml or specified via",
        "--config-file). The config file uses YAML syntax and must represent a YAML",
        "'mapping' (for details, see http://learn.getgrav.org/advanced/yaml). In",
        "general, command-line values override environment variables which override",
        "config file values which override defaults."
    ],
    "checkstyle": [
        "Usage: java [options] <mainclass> [args...]",
        "           (to execute a class)",
        "   or  java [options] -jar <jarfile> [args...]",
        "           (to execute a jar file)",
        "   or  java [options] -m <module>[/<mainclass>] [args...]",
        "       java [options] --module <module>[/<mainclass>] [args...]",
        "           (to execute the main class in a module)",
        "   or  java [options] <sourcefile> [args]",
        "           (to execute a single source-file program)",
        "",
        " Arguments following the main class, source file, -jar <jarfile>,",
        " -m or --module <module>/<mainclass> are passed as the arguments to",
        " main class.",
        "",
        " where options include:",
        "",
        "    -cp <class search path of directories and zip/jar files>",
        "    -classpath <class search path of directories and zip/jar files>",
        "    --class-path <class search path of directories and zip/jar files>",
        "                  A : separated list of directories, JAR archives,",
        "                  and ZIP archives to search for class files.",
        "    -p <module path>",
        "    --module-path <module path>...",
        "                  A : separated list of elements, each element is a file path",
        "                  to a module or a directory containing modules. Each module is either",
        "                  a modular JAR or an exploded-module directory.",
        "    --upgrade-module-path <module path>...",
        "                  A : separated list of elements, each element is a file path",
        "                  to a module or a directory containing modules to replace",
        "                  upgradeable modules in the runtime image. Each module is either",
        "                  a modular JAR or an exploded-module directory.",
        "    --add-modules <module name>[,<module name>...]",
        "                  root modules to resolve in addition to the initial module.",
        "                  <module name> can also be ALL-DEFAULT, ALL-SYSTEM,",
        "                  ALL-MODULE-PATH.",
        "    --enable-native-access <module name>[,<module name>...]",
        "                  modules that are permitted to perform restricted native operations.",
        "                  <module name> can also be ALL-UNNAMED.",
        "    --list-modules",
        "                  list observable modules and exit",
        "    -d <module name>",
        "    --describe-module <module name>",
        "                  describe a module and exit",
        "    --dry-run     create VM and load main class but do not execute main method.",
        "                  The --dry-run option may be useful for validating the",
        "                  command-line options such as the module system configuration.",
        "    --validate-modules",
        "                  validate all modules and exit",
        "                  The --validate-modules option may be useful for finding",
        "                  conflicts and other errors with modules on the module path.",
        "    -D<name>=<value>",
        "                  set a system property",
        "    -verbose:[class|module|gc|jni]",
        "                  enable verbose output for the given subsystem",
        "    -version      print product version to the error stream and exit",
        "    --version     print product version to the output stream and exit",
        "    -showversion  print product version to the error stream and continue",
        "    --show-version",
        "                  print product version to the output stream and continue",
        "    --show-module-resolution",
        "                  show module resolution output during startup",
        "    -? -h -help",
        "                  print this help message to the error stream",
        "    --help        print this help message to the output stream",
        "    -X            print help on extra options to the error stream",
        "    --help-extra  print help on extra options to the output stream",
        "    -ea[:<packagename>...|:<classname>]",
        "    -enableassertions[:<packagename>...|:<classname>]",
        "                  enable assertions with specified granularity",
        "    -da[:<packagename>...|:<classname>]",
        "    -disableassertions[:<packagename>...|:<classname>]",
        "                  disable assertions with specified granularity",
        "    -esa | -enablesystemassertions",
        "                  enable system assertions",
        "    -dsa | -disablesystemassertions",
        "                  disable system assertions",
        "    -agentlib:<libname>[=<options>]",
        "                  load native agent library <libname>, e.g. -agentlib:jdwp",
        "                  see also -agentlib:jdwp=help",
        "    -agentpath:<pathname>[=<options>]",
        "                  load native agent library by full pathname",
        "    -javaagent:<jarpath>[=<options>]",
        "                  load Java programming language agent, see java.lang.instrument",
        "    -splash:<imagepath>",
        "                  show splash screen with specified image",
        "                  HiDPI scaled images are automatically supported and used",
        "                  if available. The unscaled image filename, e.g. image.ext,",
        "                  should always be passed as the argument to the -splash option.",
        "                  The most appropriate scaled image provided will be picked up",
        "                  automatically.",
        "                  See the SplashScreen API documentation for more information",
        "    @argument files",
        "                  one or more argument files containing options",
        "    --disable-@files",
        "                  prevent further argument file expansion",
        "    --enable-preview",
        "                  allow classes to depend on preview features of this release",
        "To specify an argument for a long option, you can use --<name>=<value> or",
        "--<name> <value>.",
        ""
    ],
    "chktex": [
        "ChkTeX v1.7.8 - Copyright 1995-96 Jens T. Berger Thielemann.",
        "Compiled with POSIX extended regex support.",
        "ChkTeX comes with ABSOLUTELY NO WARRANTY; details on this and",
        "distribution conditions in the GNU General Public License file.",
        "Type \"ChkTeX -h\" for help, \"ChkTeX -i\" for distribution info.",
        "Author: Jens Berger.",
        "Bug reports: https://savannah.nongnu.org/bugs/?group=chktex",
        "             or darthandrus@gmail.com",
        "Press Ctrl-D to terminate stdin input.",
        "",
        "",
        "                         Usage of ChkTeX v1.7.8",
        "                         ~~~~~~~~~~~~~~~~~~~~~~",
        "",
        "                               Template",
        "                               ~~~~~~~~",
        "chktex [-hiqrW] [-v[0-...]] [-l <rcfile>] [-[wemn] <[1-42]|all>]",
        "       [-d[0-...]] [-p <name>] [-o <outfile>] [-[btxgI][0|1]]",
        "       file1 file2 ...",
        "",
        "----------------------------------------------------------------------",
        "                       Description of options:",
        "                       ~~~~~~~~~~~~~~~~~~~~~~~",
        "Misc. options",
        "~~~~~~~~~~~~~",
        "    -h  --help      : This text.",
        "    -i  --license   : Show distribution information",
        "    -l  --localrc   : Read local .chktexrc formatted file.",
        "    -d  --debug     : Debug information. A bit field with 5 bits.",
        "                      Each bit shows a different type of information.",
        "    -r  --reset     : Reset settings to default.",
        "    -S  --set       : Read it's argument as if from chktexrc.",
        "                      e.g., -S TabSize=8 will override the TabSize.",
        "",
        "Muting warning messages:",
        "~~~~~~~~~~~~~~~~~~~~~~~~",
        "    -w  --warnon    : Makes msg # given a warning and turns it on.",
        "    -e  --erroron   : Makes msg # given an error and turns it on.",
        "    -m  --msgon     : Makes msg # given a message and turns it on.",
        "    -n  --nowarn    : Mutes msg # given.",
        "    -L  --nolinesupp: Disables per-line and per-file suppressions.",
        "",
        "Output control flags:",
        "~~~~~~~~~~~~~~~~~~~~~",
        "    -v  --verbosity : How errors are displayed.",
        "                      Default 1, 0=Less, 2=Fancy, 3=lacheck.",
        "    -V  --pipeverb  : How errors are displayed when stdout != tty.",
        "                      Defaults to the same as -v.",
        "    -s  --splitchar : String used to split fields when doing -v0",
        "    -o  --output    : Redirect error report to a file.",
        "    -q  --quiet     : Shuts up about version information.",
        "    -p  --pseudoname: Input file-name when reporting.",
        "    -f  --format    : Format to use for output",
        "",
        "Boolean switches (1 -> enables / 0 -> disables):",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "    -b  --backup    : Backup output file.",
        "    -x  --wipeverb  : Ignore contents of `\\verb' commands.",
        "    -g  --globalrc  : Read global .chktexrc file.",
        "    -I  --inputfiles: Execute \\input statements.",
        "    -H  --headererr : Show errors found before \\begin{document}",
        "",
        "Miscellaneous switches:",
        "~~~~~~~~~~~~~~~~~~~~~~~",
        "    -W  --version   : Version information",
        "",
        "----------------------------------------------------------------------",
        "If no LaTeX files are specified on the command line, we will read from",
        "stdin.   For explanation of warning/error messages, please consult the",
        "main documentation ChkTeX.dvi, ChkTeX.ps or ChkTeX.pdf:",
        "  http://www.nongnu.org/chktex/ChkTeX.pdf",
        "",
        "Any of the above arguments can be made permanent by setting them in the",
        "chktexrc file (~/.chktexrc)."
    ],
    "clang-format": [
        "OVERVIEW: A tool to format C/C++/Java/JavaScript/JSON/Objective-C/Protobuf/C# code.",
        "",
        "If no arguments are specified, it formats the code from standard input",
        "and writes the result to the standard output.",
        "If <file>s are given, it reformats the files. If -i is specified",
        "together with <file>s, the files are edited in-place. Otherwise, the",
        "result is written to the standard output.",
        "",
        "USAGE: clang-format [options] [@<file>] [<file> ...]",
        "",
        "OPTIONS:",
        "",
        "Clang-format options:",
        "",
        "  --Werror                       - If set, changes formatting warnings to errors",
        "  --Wno-error=<value>            - If set don't error out on the specified warning type.",
        "    =unknown                     -   If set, unknown format options are only warned about.",
        "                                     This can be used to enable formatting, even if the",
        "                                     configuration contains unknown (newer) options.",
        "                                     Use with caution, as this might lead to dramatically",
        "                                     differing format depending on an option being",
        "                                     supported or not.",
        "  --assume-filename=<string>     - Set filename used to determine the language and to find",
        "                                   .clang-format file.",
        "                                   Only used when reading from stdin.",
        "                                   If this is not passed, the .clang-format file is searched",
        "                                   relative to the current working directory when reading stdin.",
        "                                   Unrecognized filenames are treated as C++.",
        "                                   supported:",
        "                                     CSharp: .cs",
        "                                     Java: .java",
        "                                     JavaScript: .mjs .js .ts",
        "                                     Json: .json",
        "                                     Objective-C: .m .mm",
        "                                     Proto: .proto .protodevel",
        "                                     TableGen: .td",
        "                                     TextProto: .txtpb .textpb .pb.txt .textproto .asciipb",
        "                                     Verilog: .sv .svh .v .vh",
        "  --cursor=<uint>                - The position of the cursor when invoking",
        "                                   clang-format from an editor integration",
        "  --dry-run                      - If set, do not actually make the formatting changes",
        "  --dump-config                  - Dump configuration options to stdout and exit.",
        "                                   Can be used with -style option.",
        "  --fail-on-incomplete-format    - If set, fail with exit code 1 on incomplete format.",
        "  --fallback-style=<string>      - The name of the predefined style used as a",
        "                                   fallback in case clang-format is invoked with",
        "                                   -style=file, but can not find the .clang-format",
        "                                   file to use. Defaults to 'LLVM'.",
        "                                   Use -fallback-style=none to skip formatting.",
        "  --ferror-limit=<uint>          - Set the maximum number of clang-format errors to emit",
        "                                   before stopping (0 = no limit).",
        "                                   Used only with --dry-run or -n",
        "  --files=<filename>             - A file containing a list of files to process, one per line.",
        "  -i                             - Inplace edit <file>s, if specified.",
        "  --length=<uint>                - Format a range of this length (in bytes).",
        "                                   Multiple ranges can be formatted by specifying",
        "                                   several -offset and -length pairs.",
        "                                   When only a single -offset is specified without",
        "                                   -length, clang-format will format up to the end",
        "                                   of the file.",
        "                                   Can only be used with one input file.",
        "  --lines=<string>               - <start line>:<end line> - format a range of",
        "                                   lines (both 1-based).",
        "                                   Multiple ranges can be formatted by specifying",
        "                                   several -lines arguments.",
        "                                   Can't be used with -offset and -length.",
        "                                   Can only be used with one input file.",
        "  -n                             - Alias for --dry-run",
        "  --offset=<uint>                - Format a range starting at this byte offset.",
        "                                   Multiple ranges can be formatted by specifying",
        "                                   several -offset and -length pairs.",
        "                                   Can only be used with one input file.",
        "  --output-replacements-xml      - Output replacements as XML.",
        "  --qualifier-alignment=<string> - If set, overrides the qualifier alignment style",
        "                                   determined by the QualifierAlignment style flag",
        "  --sort-includes                - If set, overrides the include sorting behavior",
        "                                   determined by the SortIncludes style flag",
        "  --style=<string>               - Set coding style. <string> can be:",
        "                                   1. A preset: LLVM, GNU, Google, Chromium, Microsoft,",
        "                                      Mozilla, WebKit.",
        "                                   2. 'file' to load style configuration from a",
        "                                      .clang-format file in one of the parent directories",
        "                                      of the source file (for stdin, see --assume-filename).",
        "                                      If no .clang-format file is found, falls back to",
        "                                      --fallback-style.",
        "                                      --style=file is the default.",
        "                                   3. 'file:<format_file_path>' to explicitly specify",
        "                                      the configuration file.",
        "                                   4. \"{key: value, ...}\" to set specific parameters, e.g.:",
        "                                      --style=\"{BasedOnStyle: llvm, IndentWidth: 8}\"",
        "  --verbose                      - If set, shows the list of processed files",
        "",
        "Generic Options:",
        "",
        "  --help                         - Display available options (--help-hidden for more)",
        "  --help-list                    - Display list of available options (--help-list-hidden for more)",
        "  --version                      - Display the version of this program"
    ],
    "clippy": [
        "Checks a package to catch common mistakes and improve your Rust code.",
        "",
        "Usage:",
        "    cargo clippy [OPTIONS] [--] [<ARGS>...]",
        "",
        "Common options:",
        "    --no-deps                Run Clippy only on the given crate, without linting the dependencies",
        "    --fix                    Automatically apply lint suggestions. This flag implies --no-deps and --all-targets",
        "    -h, --help               Print this message",
        "    -V, --version            Print version info and exit",
        "    --explain [LINT]         Print the documentation for a given lint",
        "",
        "See all options with cargo check --help.",
        "",
        "Allowing / Denying lints",
        "",
        "To allow or deny a lint from the command line you can use cargo clippy -- with:",
        "",
        "    -W / --warn [LINT]       Set lint warnings",
        "    -A / --allow [LINT]      Set lint allowed",
        "    -D / --deny [LINT]       Set lint denied",
        "    -F / --forbid [LINT]     Set lint forbidden",
        "",
        "You can use tool lints to allow or deny lints from your code, e.g.:",
        "",
        "    #[allow(clippy::needless_lifetimes)]",
        "",
        "Manifest Options:",
        "    --manifest-path <PATH>  Path to Cargo.toml",
        "    --frozen                Require Cargo.lock and cache are up to date",
        "    --locked                Require Cargo.lock is up to date",
        "    --offline               Run without accessing the network",
        ""
    ],
    "clj-kondo": [
        "clj-kondo v2025.02.20",
        "",
        "Options:",
        "",
        "  --lint <file>: a file can either be a normal file, directory or classpath. In the",
        "    case of a directory or classpath, only .clj, .cljs and .cljc will be",
        "    processed. Use - as filename for reading from stdin.",
        "",
        "  --lang <lang>: if lang cannot be derived from the file extension this option will be",
        "    used. Supported values: clj, cljs, cljc.",
        "",
        "  --filename <file>: in case stdin is used for linting, use this to set the",
        "    reported filename.",
        "",
        "  --cache-dir: when this option is provided, the cache will be resolved to this",
        "    directory. If --cache is false, this option will be ignored.",
        "",
        "  --cache: if false, won't use cache. Otherwise, will try to resolve cache",
        "  using `--cache-dir`. If `--cache-dir` is not set, cache is resolved using the",
        "  nearest `.clj-kondo` directory in the current and parent directories.",
        "",
        "  --config <config>: extra config that is merged. May be a file or an EDN expression. See https://github.com/clj-kondo/clj-kondo/blob/master/doc/config.md.",
        "",
        "  --config-dir <config-dir>: use this config directory instead of auto-detected",
        "    .clj-kondo dir.",
        "",
        "  --parallel: lint sources in parallel.",
        "",
        "  --dependencies: don't report any findings. Useful for populating cache while linting dependencies.",
        "",
        "  --copy-configs: copy configs from dependencies while linting.",
        "",
        "  --skip-lint: skip lint/analysis, still check for other tasks like copy-configs.",
        "",
        "  --fail-level <level>: minimum severity for exit with error code.  Supported values:",
        "    warning, error.  The default level if unspecified is warning.",
        "",
        "  --report-level <level>: minimum severity for which to report.  Supported values:",
        "    info, warning, error.  The default level if unspecified is info.",
        "",
        "  --debug: print debug information.",
        ""
    ],
    "cljstyle": [
        "Usage: cljstyle [options] <command> [args...]",
        "",
        "Commands:",
        "    find      Find files which would be processed.",
        "    check     Check source files and print a diff for errors.",
        "    fix       Edit source files to fix formatting errors.",
        "    pipe      Fixes formatting errors from stdin and pipes the results to stdout.",
        "    config    Show config used for a given path.",
        "    migrate   Migrate legacy configuration files.",
        "    version   Print program version information.",
        "",
        "Options:",
        "      --ignore PATTERN       Ignore files matching the given pattern. May be set multiple times.",
        "      --timeout SEC     300  Maximum time to allow the process to run for.",
        "      --timeout-trace        Dump thread stack traces when the tool times out.",
        "      --stats FILE           Write formatting stats to the named file. The extension controls the format and may be either 'edn' or 'tsv'.",
        "      --report               Print stats report at the end of a run.",
        "      --report-timing        Print detailed rule timings at the end of a run.",
        "      --no-color             Don't output ANSI color codes.",
        "  -v, --verbose              Print detailed debugging output.",
        "  -h, --help                 Show help and usage information."
    ],
    "coffeelint": [
        "Usage: coffeelint [options] source [...]",
        "",
        "Options:",
        "  -f, --file          Specify a custom configuration file.",
        "      --rules         Specify a custom rule or directory of rules.",
        "      --makeconfig    Prints a default config file                     [boolean]",
        "      --trimconfig    Compares your config with the default and prints a minimal",
        "                      configuration                                    [boolean]",
        "      --noconfig      Ignores any config file.                         [boolean]",
        "  -h, --help          Show help                                        [boolean]",
        "  -v, --version       Show version number                              [boolean]",
        "  -r                  (not used, but left for backward compatibility)  [boolean]",
        "      --reporter      built in reporter (default, csv, jslint, checkstyle, raw),",
        "                      or module, or path to reporter file.",
        "      --csv           [deprecated] use --reporter csv                  [boolean]",
        "      --jslint        [deprecated] use --reporter jslint               [boolean]",
        "      --nocolor       [deprecated] use --color=never                   [boolean]",
        "      --checkstyle    [deprecated] use --reporter checkstyle           [boolean]",
        "      --color=<when>  When to colorize the output. <when> can be one of always,",
        "                      never , or auto.",
        "  -s, --stdin         Lint the source from stdin                       [boolean]",
        "  -q, --quiet         Only print errors.                               [boolean]",
        "      --literate      Used with --stdin to process as Literate CoffeeScript",
        "                                                                       [boolean]",
        "  -c, --cache         Cache linting results                            [boolean]",
        "      --ext           Specify an additional file extension, separated by comma."
    ],
    "cpplint": [
        "",
        "Syntax: cpplint.py [--verbose=#] [--output=emacs|eclipse|vs7|junit|sed|gsed]",
        "                   [--filter=-x,+y,...]",
        "                   [--counting=total|toplevel|detailed] [--root=subdir]",
        "                   [--repository=path]",
        "                   [--linelength=digits] [--headers=x,y,...]",
        "                   [--recursive]",
        "                   [--exclude=path]",
        "                   [--extensions=hpp,cpp,...]",
        "                   [--includeorder=default|standardcfirst]",
        "                   [--config=filename]",
        "                   [--quiet]",
        "                   [--version]",
        "        <file> [file] ...",
        "",
        "  Style checker for C/C++ source files.",
        "  This is a fork of the Google style checker with minor extensions.",
        "",
        "  The style guidelines this tries to follow are those in",
        "    https://google.github.io/styleguide/cppguide.html",
        "",
        "  Every problem is given a confidence score from 1-5, with 5 meaning we are",
        "  certain of the problem, and 1 meaning it could be a legitimate construct.",
        "  This will miss some errors, and is not a substitute for a code review.",
        "",
        "  To suppress false-positive errors of certain categories, add a",
        "  'NOLINT(category[, category...])' comment to the line.  NOLINT or NOLINT(*)",
        "  suppresses errors of all categories on that line. To suppress categories",
        "  on the next line use NOLINTNEXTLINE instead of NOLINT. To suppress errors in",
        "  a block of code 'NOLINTBEGIN(category[, category...])' comment to a line at",
        "  the start of the block and to end the block add a comment with 'NOLINTEND'.",
        "  NOLINT blocks are inclusive so any statements on the same line as a BEGIN",
        "  or END will have the error suppression applied.",
        "",
        "  The files passed in will be linted; at least one file must be provided.",
        "  Default linted extensions are ['c', 'c++', 'cc', 'cpp', 'cu', 'cuh', 'cxx', 'h', 'h++', 'hh', 'hpp', 'hxx'].",
        "  Other file types will be ignored.",
        "  Change the extensions with the --extensions flag.",
        "",
        "  Flags:",
        "",
        "    output=emacs|eclipse|vs7|junit|sed|gsed",
        "      By default, the output is formatted to ease emacs parsing.  Visual Studio",
        "      compatible output (vs7) may also be used.  Further support exists for",
        "      eclipse (eclipse), and JUnit (junit). XML parsers such as those used",
        "      in Jenkins and Bamboo may also be used.",
        "      The sed format outputs sed commands that should fix some of the errors.",
        "      Note that this requires gnu sed. If that is installed as gsed on your",
        "      system (common e.g. on macOS with homebrew) you can use the gsed output",
        "      format. Sed commands are written to stdout, not stderr, so you should be",
        "      able to pipe output straight to a shell to run the fixes.",
        "",
        "    verbose=#",
        "      Specify a number 0-5 to restrict errors to certain verbosity levels.",
        "      Errors with lower verbosity levels have lower confidence and are more",
        "      likely to be false positives.",
        "",
        "    quiet",
        "      Don't print anything if no errors are found.",
        "",
        "    filter=-x,+y,...",
        "      Specify a comma-separated list of category-filters to apply: only",
        "      error messages whose category names pass the filters will be printed.",
        "      (Category names are printed with the message and look like",
        "      \"[whitespace/indent]\".)  Filters are evaluated left to right.",
        "      \"-FOO\" means \"do not print categories that start with FOO\".",
        "      \"+FOO\" means \"do print categories that start with FOO\".",
        "",
        "      Examples: --filter=-whitespace,+whitespace/braces",
        "                --filter=-whitespace,-runtime/printf,+runtime/printf_format",
        "                --filter=-,+build/include_what_you_use",
        "",
        "      To see a list of all the categories used in cpplint, pass no arg:",
        "         --filter=",
        "",
        "      Filters can directly be limited to files and also line numbers. The",
        "      syntax is category:file:line , where line is optional. The filter limitation",
        "      works for both + and - and can be combined with ordinary filters:",
        "",
        "      Examples: --filter=-whitespace:foo.h,+whitespace/braces:foo.h",
        "                --filter=-whitespace,-runtime/printf:foo.h:14,+runtime/printf_format:foo.h",
        "                --filter=-,+build/include_what_you_use:foo.h:321",
        "",
        "    counting=total|toplevel|detailed",
        "      The total number of errors found is always printed. If",
        "      'toplevel' is provided, then the count of errors in each of",
        "      the top-level categories like 'build' and 'whitespace' will",
        "      also be printed. If 'detailed' is provided, then a count",
        "      is provided for each category like 'legal/copyright'.",
        "",
        "    repository=path",
        "      The top level directory of the repository, used to derive the header",
        "      guard CPP variable. By default, this is determined by searching for a",
        "      path that contains .git, .hg, or .svn. When this flag is specified, the",
        "      given path is used instead. This option allows the header guard CPP",
        "      variable to remain consistent even if members of a team have different",
        "      repository root directories (such as when checking out a subdirectory",
        "      with SVN). In addition, users of non-mainstream version control systems",
        "      can use this flag to ensure readable header guard CPP variables.",
        "",
        "      Examples:",
        "        Assuming that Alice checks out ProjectName and Bob checks out",
        "        ProjectName/trunk and trunk contains src/chrome/ui/browser.h, then",
        "        with no --repository flag, the header guard CPP variable will be:",
        "",
        "        Alice => TRUNK_SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "        Bob   => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "",
        "        If Alice uses the --repository=trunk flag and Bob omits the flag or",
        "        uses --repository=. then the header guard CPP variable will be:",
        "",
        "        Alice => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "        Bob   => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "",
        "    root=subdir",
        "      The root directory used for deriving header guard CPP variable.",
        "      This directory is relative to the top level directory of the repository",
        "      which by default is determined by searching for a directory that contains",
        "      .git, .hg, or .svn but can also be controlled with the --repository flag.",
        "      If the specified directory does not exist, this flag is ignored.",
        "",
        "      Examples:",
        "        Assuming that src is the top level directory of the repository (and",
        "        cwd=top/src), the header guard CPP variables for",
        "        src/chrome/browser/ui/browser.h are:",
        "",
        "        No flag => CHROME_BROWSER_UI_BROWSER_H_",
        "        --root=chrome => BROWSER_UI_BROWSER_H_",
        "        --root=chrome/browser => UI_BROWSER_H_",
        "        --root=.. => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "",
        "    linelength=digits",
        "      This is the allowed line length for the project. The default value is",
        "      80 characters.",
        "",
        "      Examples:",
        "        --linelength=120",
        "",
        "    recursive",
        "      Search for files to lint recursively. Each directory given in the list",
        "      of files to be linted is replaced by all files that descend from that",
        "      directory. Files with extensions not in the valid extensions list are",
        "      excluded.",
        "",
        "    exclude=path",
        "      Exclude the given path from the list of files to be linted. Relative",
        "      paths are evaluated relative to the current directory and shell globbing",
        "      is performed. This flag can be provided multiple times to exclude",
        "      multiple files.",
        "",
        "      Examples:",
        "        --exclude=one.cc",
        "        --exclude=src/*.cc",
        "        --exclude=src/*.cc --exclude=test/*.cc",
        "",
        "    extensions=extension,extension,...",
        "      The allowed file extensions that cpplint will check",
        "",
        "      Examples:",
        "        --extensions=c,c++,cc,cpp,cu,cuh,cxx,h,h++,hh,hpp,hxx",
        "",
        "    includeorder=default|standardcfirst",
        "      For the build/include_order rule, the default is to blindly assume angle",
        "      bracket includes with file extension are c-system-headers (default),",
        "      even knowing this will have false classifications.",
        "      The default is established at google.",
        "      standardcfirst means to instead use an allow-list of known c headers and",
        "      treat all others as separate group of \"other system headers\". The C headers",
        "      included are those of the C-standard lib and closely related ones.",
        "",
        "    config=filename",
        "      Search for config files with the specified name instead of CPPLINT.cfg",
        "",
        "    headers=x,y,...",
        "      The header extensions that cpplint will treat as .h in checks. Values are",
        "      automatically added to --extensions list.",
        "     (by default, only files with extensions ['cuh', 'h', 'h++', 'hh', 'hpp', 'hxx'] will be assumed to be headers)",
        "",
        "      Examples:",
        "        --headers=cuh,h,h++,hh,hpp,hxx",
        "        --headers=hpp,hxx",
        "        --headers=hpp",
        "",
        "    cpplint.py supports per-directory configurations specified in CPPLINT.cfg",
        "    files. CPPLINT.cfg file can contain a number of key=value pairs.",
        "    Currently the following options are supported:",
        "",
        "      set noparent",
        "      filter=+filter1,-filter2,...",
        "      exclude_files=regex",
        "      linelength=80",
        "      root=subdir",
        "      headers=x,y,...",
        "",
        "    \"set noparent\" option prevents cpplint from traversing directory tree",
        "    upwards looking for more .cfg files in parent directories. This option",
        "    is usually placed in the top-level project directory.",
        "",
        "    The \"filter\" option is similar in function to --filter flag. It specifies",
        "    message filters in addition to the |_DEFAULT_FILTERS| and those specified",
        "    through --filter command-line flag.",
        "",
        "    \"exclude_files\" allows to specify a regular expression to be matched against",
        "    a file name. If the expression matches, the file is skipped and not run",
        "    through the linter.",
        "",
        "    \"linelength\" allows to specify the allowed line length for the project.",
        "",
        "    The \"root\" option is similar in function to the --root flag (see example",
        "    above). Paths are relative to the directory of the CPPLINT.cfg.",
        "",
        "    The \"headers\" option is similar in function to the --headers flag",
        "    (see example above).",
        "",
        "    CPPLINT.cfg has an effect on files in the same directory and all",
        "    sub-directories, unless overridden by a nested configuration file.",
        "",
        "      Example file:",
        "        filter=-build/include_order,+build/include_alpha",
        "        exclude_files=.*\\.cc",
        "",
        "    The above example disables build/include_order warning and enables",
        "    build/include_alpha as well as excludes all .cc from being",
        "    processed by linter, in the current directory (where the .cfg",
        "    file is located) and all sub-directories."
    ],
    "csharpier": [
        "dotnet-csharpier",
        "",
        "Usage:",
        "  dotnet-csharpier [options] [<directoryOrFile>...]",
        "",
        "Arguments:",
        "  <directoryOrFile>  One or more paths to a directory containing C# files to format or a C# file to format. It may be ommited when piping data via stdin.",
        "",
        "Options:",
        "  --check                           Check that files are formatted. Will not write any changes.",
        "  --loglevel <loglevel>             Specify the log level - Debug, Information (default), Warning, Error, None [default: Information]",
        "  --no-cache                        Bypass the cache to determine if a file needs to be formatted.",
        "  --no-msbuild-check                Bypass the check to determine if a csproj files references a different version of CSharpier.MsBuild.",
        "  --include-generated               Include files generated by the SDK and files that begin with <autogenerated /> comments",
        "  --fast                            Skip comparing syntax tree of formatted file to original file to validate changes.",
        "  --skip-write                      Skip writing changes. Generally used for testing to ensure csharpier doesn't throw any errors or cause syntax tree validation failures.",
        "  --write-stdout                    Write the results of formatting any files to stdout.",
        "  --pipe-multiple-files             Keep csharpier running so that multiples files can be piped to it via stdin.",
        "  --server                          Run CSharpier as a server so that multiple files may be formatted.",
        "  --server-port <server-port>       Specify the port that CSharpier should start on. Defaults to a random unused port.",
        "  --config-path <config-path>       Path to the CSharpier configuration file",
        "  --compilation-errors-as-warnings  Treat compilation errors from files as warnings instead of errors.",
        "  --version                         Show version information",
        "  -?, -h, --help                    Show help and usage information",
        ""
    ],
    "cspell": [
        "Usage: cspell [options] [command]",
        "",
        "Spelling Checker for Code",
        "",
        "Options:",
        "  -V, --version                         output the version number",
        "  -h, --help                            display help for command",
        "",
        "Commands:",
        "  lint [options] [globs...]             Check spelling",
        "  trace [options] [words...]            Trace words -- Search for words in the",
        "                                        configuration and dictionaries.",
        "  check [options] <files...>            Spell check file(s) and display the",
        "                                        result. The full file is displayed in",
        "                                        color.",
        "  suggestions|sug [options] [words...]  Spelling Suggestions for words.",
        "  link                                  Link dictionaries and other settings to",
        "                                        the cspell global config.",
        "  help [command]                        display help for command"
    ],
    "dartanalyzer": [
        "Analyze Dart code in a directory.",
        "",
        "Usage: dart analyze [arguments] [<directory>]",
        "-h, --help                   Print this usage information.",
        "    --fatal-infos            Treat info level issues as fatal.",
        "    --[no-]fatal-warnings    Treat warning level issues as fatal.",
        "                             (defaults to on)",
        "",
        "Run \"dart help\" to see global options."
    ],
    "detekt": [
        "Usage: detekt [options]",
        "  Options:",
        "    --all-rules",
        "      Activates all available (even unstable) rules.",
        "      Default: false",
        "    --auto-correct, -ac",
        "      Allow rules to auto correct code if they support it. The default rule",
        "      sets do NOT support auto correcting and won't change any line in the",
        "      users code base. However custom rules can be written to support auto",
        "      correcting. The additional 'formatting' rule set, added with",
        "      '--plugins', does support it and needs this flag.",
        "      Default: false",
        "    --base-path, -bp",
        "      Specifies a directory as the base path.Currently it impacts all file",
        "      paths in the formatted reports. File paths in console output and txt",
        "      report are not affected and remain as absolute paths.",
        "    --baseline, -b",
        "      If a baseline xml file is passed in, only new code smells not in the",
        "      baseline are printed in the console.",
        "    --build-upon-default-config",
        "      Preconfigures detekt with a bunch of rules and some opinionated defaults",
        "      for you. Allows additional provided configurations to override the",
        "      defaults.",
        "      Default: false",
        "    --classpath, -cp",
        "      EXPERIMENTAL: Paths where to find user class files and depending jar",
        "      files. Used for type resolution.",
        "    --config, -c",
        "      Path to the config file (path/to/config.yml). Multiple configuration",
        "      files can be specified with ',' or ';' as separator.",
        "    --config-resource, -cr",
        "      Path to the config resource on detekt's classpath (path/to/config.yml).",
        "    --create-baseline, -cb",
        "      Treats current analysis findings as a smell baseline for future detekt",
        "      runs.",
        "      Default: false",
        "    --debug",
        "      Prints extra information about configurations and extensions.",
        "      Default: false",
        "    --disable-default-rulesets, -dd",
        "      Disables default rule sets.",
        "      Default: false",
        "    --excludes, -ex",
        "      Globbing patterns describing paths to exclude from the analysis.",
        "    --generate-config, -gc",
        "      Export default config. Path can be specified with --config option",
        "      (default path: default-detekt-config.yml)",
        "      Default: false",
        "    --help, -h",
        "      Shows the usage.",
        "    --includes, -in",
        "      Globbing patterns describing paths to include in the analysis. Useful in",
        "      combination with 'excludes' patterns.",
        "    --input, -i",
        "      Input paths to analyze. Multiple paths are separated by comma. If not",
        "      specified the current working directory is used.",
        "    --jdk-home",
        "      EXPERIMENTAL: Use a custom JDK home directory to include into the",
        "      classpath",
        "    --jvm-target",
        "      EXPERIMENTAL: Target version of the generated JVM bytecode that was",
        "      generated during compilation and is now being used for type resolution",
        "      (1.8, 9, 10, ..., 20)",
        "      Default: 1.8",
        "    --language-version",
        "      EXPERIMENTAL: Compatibility mode for Kotlin language version X.Y,",
        "      reports errors for all language features that came out later",
        "      Possible Values: [1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2]",
        "    --max-issues",
        "      Return exit code 0 only when found issues count does not exceed",
        "      specified issues count.",
        "    --parallel",
        "      Enables parallel compilation and analysis of source files. Do some",
        "      benchmarks first before enabling this flag. Heuristics show performance",
        "      benefits starting from 2000 lines of Kotlin code.",
        "      Default: false",
        "    --plugins, -p",
        "      Extra paths to plugin jars separated by ',' or ';'.",
        "    --report, -r",
        "      Generates a report for given 'report-id' and stores it on given 'path'.",
        "      Entry should consist of: [report-id:path]. Available 'report-id' values:",
        "      'txt', 'xml', 'html', 'md', 'sarif'. These can also be used in",
        "      combination with each other e.g. '-r txt:reports/detekt.txt -r",
        "      xml:reports/detekt.xml'",
        "    --version",
        "      Prints the detekt CLI version.",
        "      Default: false",
        ""
    ],
    "devskim": [
        "devskim 1.0.52+74513a99d4",
        "\u00a9 Microsoft Corporation. All rights reserved.",
        "",
        "  analyze     Analyze source code using DevSkim",
        "",
        "  fix         Apply fixes from a Sarif",
        "",
        "  verify      Verify rule validity",
        "",
        "  suppress    Suppress issues identified in a DevSkim Sarif",
        "",
        "  help        Display more information on a specific command.",
        "",
        "  version     Display version information.",
        ""
    ],
    "djlint": [
        "Usage: djlint [OPTIONS] SRC ...",
        "",
        "  djLint \u00b7 HTML template linter and formatter.",
        "",
        "Options:",
        "  --version                       Show the version and exit.",
        "  -e, --extension TEXT            File extension to check [default: html]",
        "  -i, --ignore TEXT               Codes to ignore. ex: \"H014,H017\"",
        "  --reformat                      Reformat the file(s).",
        "  --check                         Check formatting on the file(s).",
        "  --indent INTEGER                Indent spacing. [default: 4]",
        "  --quiet                         Do not print diff when reformatting.",
        "  --profile TEXT                  Enable defaults by template language. ops:",
        "                                  django, jinja, nunjucks, handlebars, golang,",
        "                                  angular, html [default: html]",
        "  --require-pragma                Only format or lint files that starts with a",
        "                                  comment with the text 'djlint:on'",
        "  --lint                          Lint for common issues. [default option]",
        "  --use-gitignore                 Use .gitignore file to extend excludes.",
        "  --warn                          Return errors as warnings.",
        "  --preserve-leading-space        Attempt to preserve leading space on text.",
        "  --preserve-blank-lines          Attempt to preserve blank lines.",
        "  --format-css                    Also format contents of <style> tags.",
        "  --format-js                     Also format contents of <script> tags.",
        "  --configuration FILE            Path to global configuration file in",
        "                                  djlint.toml or .djlintrc format",
        "  --statistics                    Count the number of occurrences of each",
        "                                  error/warning code.",
        "  --include TEXT                  Codes to include. ex: \"H014,H017\"",
        "  --ignore-case                   Do not fix case on known html tags.",
        "  --ignore-blocks TEXT            Comma list of template blocks to not indent.",
        "  --blank-line-after-tag TEXT     Add an additional blank line after {% <tag>",
        "                                  ... %} tag groups.",
        "  --blank-line-before-tag TEXT    Add an additional blank line before {% <tag>",
        "                                  ... %} tag groups.",
        "  --line-break-after-multiline-tag",
        "                                  Do not condense the content of multi-line",
        "                                  tags into the line of the last attribute.",
        "  --custom-blocks TEXT            Indent custom template blocks. For example",
        "                                  {% toc %}...{% endtoc %}",
        "  --custom-html TEXT              Indent custom HTML tags. For example <mjml>",
        "  --exclude TEXT                  Override the default exclude paths.",
        "  --extend-exclude TEXT           Add additional paths to the default exclude.",
        "  --linter-output-format TEXT     Customize order of linter output message.",
        "  --max-line-length INTEGER       Max line length. [default: 120]",
        "  --max-attribute-length INTEGER  Max attribute length. [default: 70]",
        "  --format-attribute-template-tags",
        "                                  Attempt to format template syntax inside of",
        "                                  tag attributes.",
        "  --per-file-ignores <TEXT TEXT>...",
        "                                  Ignore linter rules on a per-file basis.",
        "  --indent-css INTEGER            Set CSS indent level.",
        "  --indent-js INTEGER             Set JS indent level.",
        "  --close-void-tags               Add closing mark on known void tags. Ex:",
        "                                  <img> becomse <img />",
        "  --no-line-after-yaml            Do not add a blank line after yaml front",
        "                                  matter.",
        "  --no-function-formatting        Do not attempt to format function contents.",
        "  --no-set-formatting             Do not attempt to format set contents.",
        "  --max-blank-lines INTEGER       Consolidate blank lines down to x lines.",
        "                                  [default: 0]",
        "  -h, --help                      Show this message and exit."
    ],
    "dockerfilelint": [
        "Usage: dockerfilelint [files | content..] [options]",
        "",
        "Options:",
        "  -o, --output   Specify the format to use for output of linting results. Valid values",
        "                 are `json` or `cli` (default).                               [string]",
        "  -j, --json     Output linting results as JSON, equivalent to `-o json`.    [boolean]",
        "  -c, --config   Path for .dockerfilelintrc configuration file                [string]",
        "  -v, --version  Show version number                                         [boolean]",
        "  -h, --help     Show help                                                   [boolean]",
        "",
        "Examples:",
        "  dockerfilelint Dockerfile         Lint a Dockerfile in the current working directory",
        "",
        "  dockerfilelint test/example/* -j  Lint all files in the test/example directory and",
        "                                    output results in JSON",
        "",
        "  dockerfilelint 'FROM latest'      Lint the contents given as a string on the command",
        "                                    line",
        "",
        "  dockerfilelint < Dockerfile       Lint the contents of Dockerfile via stdin"
    ],
    "dotenv-linter": [
        "dotenv-linter 3.3.0",
        "Mikhail Grachev <work@mgrachev.com>",
        "Lightning-fast linter for .env files",
        "",
        "USAGE:",
        "    dotenv-linter [OPTIONS] [input]... [SUBCOMMAND]",
        "",
        "ARGS:",
        "    <input>...    files or paths [default: /]",
        "",
        "OPTIONS:",
        "    -e, --exclude <FILE_NAME>...    Excludes files from check",
        "    -h, --help                      Print help information",
        "        --no-color                  Turns off the colored output",
        "        --not-check-updates         Doesn't check for updates",
        "    -q, --quiet                     Doesn't display additional information",
        "    -r, --recursive                 Recursively searches and checks .env files",
        "    -s, --skip <CHECK_NAME>...      Skips checks",
        "    -v, --version                   Print version information",
        "",
        "SUBCOMMANDS:",
        "    compare    Compares if files have the same keys [aliases: c]",
        "    fix        Automatically fixes warnings [aliases: f]",
        "    list       Shows list of available checks [aliases: l]"
    ],
    "dotnet-format": [
        "Description:",
        "  Formats code to match editorconfig settings.",
        "",
        "Usage:",
        "  dotnet-format [<PROJECT | SOLUTION>] [command] [options]",
        "",
        "Arguments:",
        "  <PROJECT | SOLUTION>  The project or solution file to operate on. If a file is not specified, the command will search the current directory for one. [default: /]",
        "",
        "Options:",
        "  -?, -h, --help                                                           Show help and usage information",
        "  --version                                                                Show version information",
        "  --diagnostics                                                            A space separated list of diagnostic ids to use as a filter when fixing code style or 3rd party issues. []",
        "  --exclude-diagnostics                                                    A space separated list of diagnostic ids to ignore when fixing code style or 3rd party issues. []",
        "  --severity <error|info|warn>                                             The severity of diagnostics to fix. Allowed values are info, warn, and error.",
        "  --no-restore                                                             Doesn't execute an implicit restore before formatting.",
        "  --verify-no-changes                                                      Verify no formatting changes would be performed. Terminates with a non-zero exit code if any files would have been formatted.",
        "  --include                                                                A list of relative file or folder paths to include in formatting. All files are formatted if empty. []",
        "  --exclude                                                                A list of relative file or folder paths to exclude from formatting. []",
        "  --include-generated                                                      Format files generated by the SDK.",
        "  -v, --verbosity <d|detailed|diag|diagnostic|m|minimal|n|normal|q|quiet>  Set the verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]",
        "  --binarylog <binary-log-path>                                            Log all project or solution load information to a binary log file.",
        "  --report <report-path>                                                   Accepts a file path which if provided will produce a json report in the given directory.",
        "",
        "Commands:",
        "  whitespace <PROJECT | SOLUTION>  Run whitespace formatting. [default: /]",
        "  style <PROJECT | SOLUTION>       Run code style analyzers and apply fixes. [default: /]",
        "  analyzers <PROJECT | SOLUTION>   Run 3rd party analyzers and apply fixes. [default: /]",
        ""
    ],
    "dustilock": [
        "usage: DustiLock [-h|--help] [-r|--recursive] [-a|--audit] [-p|--path",
        "                 \"<value>\"]",
        "",
        "                 a tool to find which of your dependencies is susceptible to",
        "                 Dependency Confusion attack",
        "",
        "Arguments:",
        "",
        "  -h  --help       Print help information",
        "  -r  --recursive  scan all files recursively",
        "  -a  --audit      audit only mode",
        "  -p  --path       the path to scan. default is cwd",
        "",
        ""
    ],
    "editorconfig-checker": [
        "USAGE:",
        "  -color",
        "      enables printing color",
        "  -config string",
        "      config",
        "  -debug",
        "      print debugging information",
        "  -disable-end-of-line",
        "      disables the trailing whitespace check",
        "  -disable-indent-size",
        "      disables only the indent-size check",
        "  -disable-indentation",
        "      disables the indentation check",
        "  -disable-insert-final-newline",
        "      disables the final newline check",
        "  -disable-max-line-length",
        "      disables only the max-line-length check",
        "  -disable-trim-trailing-whitespace",
        "      disables the trailing whitespace check",
        "  -dry-run",
        "      show which files would be checked",
        "  -exclude string",
        "      a regex which files should be excluded from checking - needs to be a valid regular expression",
        "  -f value",
        "      specify the output format: default, codeclimate, gcc, github-actions (default default)",
        "  -format value",
        "      specify the output format: default, codeclimate, gcc, github-actions (default default)",
        "  -h  print the help",
        "  -help",
        "      print the help",
        "  -ignore-defaults",
        "      ignore default excludes",
        "  -init",
        "      creates an initial configuration",
        "  -no-color",
        "      disables printing color",
        "  -v  print debugging information",
        "  -verbose",
        "      print debugging information",
        "  -version",
        "      print the version number"
    ],
    "eslint": [
        "eslint [options] file.js [file.js] [dir]",
        "",
        "Basic configuration:",
        "  --no-eslintrc                    Disable use of configuration from .eslintrc.*",
        "  -c, --config path::String        Use this configuration, overriding .eslintrc.* config options if present",
        "  --env [String]                   Specify environments",
        "  --ext [String]                   Specify JavaScript file extensions",
        "  --global [String]                Define global variables",
        "  --parser String                  Specify the parser to be used",
        "  --parser-options Object          Specify parser options",
        "  --resolve-plugins-relative-to path::String  A folder where plugins should be resolved from, CWD by default",
        "",
        "Specify Rules and Plugins:",
        "  --plugin [String]                Specify plugins",
        "  --rule Object                    Specify rules",
        "  --rulesdir [path::String]        Load additional rules from this directory. Deprecated: Use rules from plugins",
        "",
        "Fix Problems:",
        "  --fix                            Automatically fix problems",
        "  --fix-dry-run                    Automatically fix problems without saving the changes to the file system",
        "  --fix-type Array                 Specify the types of fixes to apply (directive, problem, suggestion, layout)",
        "",
        "Ignore Files:",
        "  --ignore-path path::String       Specify path of ignore file",
        "  --no-ignore                      Disable use of ignore files and patterns",
        "  --ignore-pattern [String]        Pattern of files to ignore (in addition to those in .eslintignore)",
        "",
        "Use stdin:",
        "  --stdin                          Lint code provided on <STDIN> - default: false",
        "  --stdin-filename String          Specify filename to process STDIN as",
        "",
        "Handle Warnings:",
        "  --quiet                          Report errors only - default: false",
        "  --max-warnings Int               Number of warnings to trigger nonzero exit code - default: -1",
        "",
        "Output:",
        "  -o, --output-file path::String   Specify file to write report to",
        "  -f, --format String              Use a specific output format - default: stylish",
        "  --color, --no-color              Force enabling/disabling of color",
        "",
        "Inline configuration comments:",
        "  --no-inline-config               Prevent comments from changing config or rules",
        "  --report-unused-disable-directives  Adds reported errors for unused eslint-disable and eslint-enable directives",
        "  --report-unused-disable-directives-severity String  Chooses severity level for reporting unused eslint-disable and eslint-enable directives - either: off, warn, error, 0, 1, or 2",
        "",
        "Caching:",
        "  --cache                          Only check changed files - default: false",
        "  --cache-file path::String        Path to the cache file. Deprecated: use --cache-location - default: .eslintcache",
        "  --cache-location path::String    Path to the cache file or directory",
        "  --cache-strategy String          Strategy to use for detecting changed files in the cache - either: metadata or content - default: metadata",
        "",
        "Miscellaneous:",
        "  --init                           Run config initialization wizard - default: false",
        "  --env-info                       Output execution environment information - default: false",
        "  --no-error-on-unmatched-pattern  Prevent errors when pattern is unmatched",
        "  --exit-on-fatal-error            Exit with exit code 2 in case of fatal error - default: false",
        "  --debug                          Output debugging information",
        "  -h, --help                       Show help",
        "  -v, --version                    Output the version number",
        "  --print-config path::String      Print the configuration for the given file"
    ],
    "eslint-plugin-jsonc": [
        "eslint [options] file.js [file.js] [dir]",
        "",
        "Basic configuration:",
        "  --no-eslintrc                    Disable use of configuration from .eslintrc.*",
        "  -c, --config path::String        Use this configuration, overriding .eslintrc.* config options if present",
        "  --env [String]                   Specify environments",
        "  --ext [String]                   Specify JavaScript file extensions",
        "  --global [String]                Define global variables",
        "  --parser String                  Specify the parser to be used",
        "  --parser-options Object          Specify parser options",
        "  --resolve-plugins-relative-to path::String  A folder where plugins should be resolved from, CWD by default",
        "",
        "Specify Rules and Plugins:",
        "  --plugin [String]                Specify plugins",
        "  --rule Object                    Specify rules",
        "  --rulesdir [path::String]        Load additional rules from this directory. Deprecated: Use rules from plugins",
        "",
        "Fix Problems:",
        "  --fix                            Automatically fix problems",
        "  --fix-dry-run                    Automatically fix problems without saving the changes to the file system",
        "  --fix-type Array                 Specify the types of fixes to apply (directive, problem, suggestion, layout)",
        "",
        "Ignore Files:",
        "  --ignore-path path::String       Specify path of ignore file",
        "  --no-ignore                      Disable use of ignore files and patterns",
        "  --ignore-pattern [String]        Pattern of files to ignore (in addition to those in .eslintignore)",
        "",
        "Use stdin:",
        "  --stdin                          Lint code provided on <STDIN> - default: false",
        "  --stdin-filename String          Specify filename to process STDIN as",
        "",
        "Handle Warnings:",
        "  --quiet                          Report errors only - default: false",
        "  --max-warnings Int               Number of warnings to trigger nonzero exit code - default: -1",
        "",
        "Output:",
        "  -o, --output-file path::String   Specify file to write report to",
        "  -f, --format String              Use a specific output format - default: stylish",
        "  --color, --no-color              Force enabling/disabling of color",
        "",
        "Inline configuration comments:",
        "  --no-inline-config               Prevent comments from changing config or rules",
        "  --report-unused-disable-directives  Adds reported errors for unused eslint-disable and eslint-enable directives",
        "  --report-unused-disable-directives-severity String  Chooses severity level for reporting unused eslint-disable and eslint-enable directives - either: off, warn, error, 0, 1, or 2",
        "",
        "Caching:",
        "  --cache                          Only check changed files - default: false",
        "  --cache-file path::String        Path to the cache file. Deprecated: use --cache-location - default: .eslintcache",
        "  --cache-location path::String    Path to the cache file or directory",
        "  --cache-strategy String          Strategy to use for detecting changed files in the cache - either: metadata or content - default: metadata",
        "",
        "Miscellaneous:",
        "  --init                           Run config initialization wizard - default: false",
        "  --env-info                       Output execution environment information - default: false",
        "  --no-error-on-unmatched-pattern  Prevent errors when pattern is unmatched",
        "  --exit-on-fatal-error            Exit with exit code 2 in case of fatal error - default: false",
        "  --debug                          Output debugging information",
        "  -h, --help                       Show help",
        "  -v, --version                    Output the version number",
        "  --print-config path::String      Print the configuration for the given file"
    ],
    "flake8": [
        "usage: flake8 [options] file file ...",
        "",
        "positional arguments:",
        "  filename",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -v, --verbose         Print more information about what is happening in",
        "                        flake8. This option is repeatable and will increase",
        "                        verbosity each time it is repeated.",
        "  --output-file OUTPUT_FILE",
        "                        Redirect report to a file.",
        "  --append-config APPEND_CONFIG",
        "                        Provide extra config files to parse in addition to the",
        "                        files found by Flake8 by default. These files are the",
        "                        last ones read and so they take the highest precedence",
        "                        when multiple files provide the same option.",
        "  --config CONFIG       Path to the config file that will be the authoritative",
        "                        config source. This will cause Flake8 to ignore all",
        "                        other configuration files.",
        "  --isolated            Ignore all configuration files.",
        "  --enable-extensions ENABLE_EXTENSIONS",
        "                        Enable plugins and extensions that are otherwise",
        "                        disabled by default",
        "  --require-plugins REQUIRE_PLUGINS",
        "                        Require specific plugins to be installed before",
        "                        running",
        "  --version             show program's version number and exit",
        "  -q, --quiet           Report only file names, or nothing. This option is",
        "                        repeatable.",
        "  --color {auto,always,never}",
        "                        Whether to use color in output. Defaults to `auto`.",
        "  --count               Print total number of errors to standard output after",
        "                        all other output.",
        "  --exclude patterns    Comma-separated list of files or directories to",
        "                        exclude. (Default: ['.svn', 'CVS', '.bzr', '.hg',",
        "                        '.git', '__pycache__', '.tox', '.nox', '.eggs',",
        "                        '*.egg'])",
        "  --extend-exclude patterns",
        "                        Comma-separated list of files or directories to add to",
        "                        the list of excluded ones.",
        "  --filename patterns   Only check for filenames matching the patterns in this",
        "                        comma-separated list. (Default: ['*.py'])",
        "  --stdin-display-name STDIN_DISPLAY_NAME",
        "                        The name used when reporting errors from code passed",
        "                        via stdin. This is useful for editors piping the file",
        "                        contents to flake8. (Default: stdin)",
        "  --format format       Format errors according to the chosen formatter",
        "                        (default, pylint, quiet-filename, quiet-nothing) or a",
        "                        format string containing %-style mapping keys (code,",
        "                        col, path, row, text). For example,",
        "                        ``--format=pylint`` or ``--format='%(path)s",
        "                        %(code)s'``. (Default: default)",
        "  --hang-closing        Hang closing bracket instead of matching indentation",
        "                        of opening bracket's line.",
        "  --ignore errors       Comma-separated list of error codes to ignore (or",
        "                        skip). For example, ``--ignore=E4,E51,W234``.",
        "                        (Default: E121,E123,E126,E226,E24,E704,W503,W504)",
        "  --extend-ignore errors",
        "                        Comma-separated list of error codes to add to the list",
        "                        of ignored ones. For example, ``--extend-",
        "                        ignore=E4,E51,W234``.",
        "  --per-file-ignores PER_FILE_IGNORES",
        "                        A pairing of filenames and violation codes that",
        "                        defines which violations to ignore in a particular",
        "                        file. The filenames can be specified in a manner",
        "                        similar to the ``--exclude`` option and the violations",
        "                        work similarly to the ``--ignore`` and ``--select``",
        "                        options.",
        "  --max-line-length n   Maximum allowed line length for the entirety of this",
        "                        run. (Default: 79)",
        "  --max-doc-length n    Maximum allowed doc line length for the entirety of",
        "                        this run. (Default: None)",
        "  --indent-size n       Number of spaces used for indentation (Default: 4)",
        "  --select errors       Limit the reported error codes to codes prefix-matched",
        "                        by this list. You usually do not need to specify this",
        "                        option as the default includes all installed plugin",
        "                        codes. For example, ``--select=E4,E51,W234``.",
        "  --extend-select errors",
        "                        Add additional error codes to the default",
        "                        ``--select``. You usually do not need to specify this",
        "                        option as the default includes all installed plugin",
        "                        codes. For example, ``--extend-select=E4,E51,W234``.",
        "  --disable-noqa        Disable the effect of \"# noqa\". This will report",
        "                        errors on lines with \"# noqa\" at the end.",
        "  --show-source         Show the source generate each error or warning.",
        "  --no-show-source      Negate --show-source",
        "  --statistics          Count errors.",
        "  --exit-zero           Exit with status code \"0\" even if there are errors.",
        "  -j JOBS, --jobs JOBS  Number of subprocesses to use to run checks in",
        "                        parallel. This is ignored on Windows. The default,",
        "                        \"auto\", will auto-detect the number of processors",
        "                        available to use. (Default: auto)",
        "  --tee                 Write to stdout and output-file.",
        "  --benchmark           Print benchmark information about this run of Flake8",
        "  --bug-report          Print information necessary when preparing a bug",
        "                        report",
        "",
        "mccabe:",
        "  --max-complexity MAX_COMPLEXITY",
        "                        McCabe complexity threshold",
        "",
        "pyflakes:",
        "  --builtins BUILTINS   define more built-ins, comma separated",
        "  --doctests            also check syntax of the doctests",
        "",
        "Installed plugins: mccabe: 0.7.0, pycodestyle: 2.12.1, pyflakes: 3.2.0"
    ],
    "gherkin-lint": [
        "Usage: gherkin-lint [options] <feature-files>",
        "",
        "Options:",
        "  -f, --format [format]  output format. Possible values: json, stylish, xunit.",
        "                         Defaults to stylish",
        "  -i, --ignore <...>     comma seperated list of files/glob patterns that the",
        "                         linter should ignore, overrides .gherkin-lintignore",
        "                         file",
        "  -c, --config [config]  configuration file, defaults to .gherkin-lintrc",
        "  -r, --rulesdir <...>   additional rule directories (default: [])",
        "  -h, --help             display help for command"
    ],
    "git_diff": [
        "usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]",
        "           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]",
        "           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]",
        "           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]",
        "           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]",
        "           <command> [<args>]",
        "",
        "These are common Git commands used in various situations:",
        "",
        "start a working area (see also: git help tutorial)",
        "   clone     Clone a repository into a new directory",
        "   init      Create an empty Git repository or reinitialize an existing one",
        "",
        "work on the current change (see also: git help everyday)",
        "   add       Add file contents to the index",
        "   mv        Move or rename a file, a directory, or a symlink",
        "   restore   Restore working tree files",
        "   rm        Remove files from the working tree and from the index",
        "",
        "examine the history and state (see also: git help revisions)",
        "   bisect    Use binary search to find the commit that introduced a bug",
        "   diff      Show changes between commits, commit and working tree, etc",
        "   grep      Print lines matching a pattern",
        "   log       Show commit logs",
        "   show      Show various types of objects",
        "   status    Show the working tree status",
        "",
        "grow, mark and tweak your common history",
        "   branch    List, create, or delete branches",
        "   commit    Record changes to the repository",
        "   merge     Join two or more development histories together",
        "   rebase    Reapply commits on top of another base tip",
        "   reset     Reset current HEAD to the specified state",
        "   switch    Switch branches",
        "   tag       Create, list, delete or verify a tag object signed with GPG",
        "",
        "collaborate (see also: git help workflows)",
        "   fetch     Download objects and refs from another repository",
        "   pull      Fetch from and integrate with another repository or a local branch",
        "   push      Update remote refs along with associated objects",
        "",
        "'git help -a' and 'git help -g' list available subcommands and some",
        "concept guides. See 'git help <command>' or 'git help <concept>'",
        "to read about a specific subcommand or concept.",
        "See 'git help git' for an overview of the system."
    ],
    "gitleaks": [
        "Gitleaks scans code, past or present, for secrets",
        "",
        "Usage:",
        "  gitleaks [command]",
        "",
        "Available Commands:",
        "  completion  generate the autocompletion script for the specified shell",
        "  dir         scan directories or files for secrets",
        "  git         scan git repositories for secrets",
        "  help        Help about any command",
        "  stdin       detect secrets from stdin",
        "  version     display gitleaks version",
        "",
        "Flags:",
        "  -b, --baseline-path string          path to baseline with issues that can be ignored",
        "  -c, --config string                 config file path",
        "                                      order of precedence:",
        "                                      1. --config/-c",
        "                                      2. env var GITLEAKS_CONFIG",
        "                                      3. (target path)/.gitleaks.toml",
        "                                      If none of the three options are used, then gitleaks will use the default config",
        "      --enable-rule strings           only enable specific rules by id",
        "      --exit-code int                 exit code when leaks have been encountered (default 1)",
        "  -i, --gitleaks-ignore-path string   path to .gitleaksignore file or folder containing one (default \".\")",
        "  -h, --help                          help for gitleaks",
        "      --ignore-gitleaks-allow         ignore gitleaks:allow comments",
        "  -l, --log-level string              log level (trace, debug, info, warn, error, fatal) (default \"info\")",
        "      --max-decode-depth int          allow recursive decoding up to this depth (default \"0\", no decoding is done)",
        "      --max-target-megabytes int      files larger than this will be skipped",
        "      --no-banner                     suppress banner",
        "      --no-color                      turn off color for verbose output",
        "      --redact uint[=100]             redact secrets from logs and stdout. To redact only parts of the secret just apply a percent value from 0..100. For example --redact=20 (default 100%)",
        "  -f, --report-format string          output format (json, jsonextra, csv, junit, sarif, template) (default \"json\")",
        "  -r, --report-path string            report file",
        "      --report-template string        template file used to generate the report (implies --report-format=template)",
        "  -v, --verbose                       show verbose output from scan",
        "",
        "Use \"gitleaks [command] --help\" for more information about a command."
    ],
    "golangci-lint": [
        "Smart, fast linters runner.",
        "",
        "Usage:",
        "  golangci-lint [flags]",
        "  golangci-lint [command]",
        "",
        "Available Commands:",
        "  cache       Cache control and information",
        "  completion  Generate the autocompletion script for the specified shell",
        "  config      Config file information",
        "  custom      Build a version of golangci-lint with custom linters",
        "  help        Help",
        "  linters     List current linters configuration",
        "  run         Run the linters",
        "  version     Version",
        "",
        "Flags:",
        "      --color string   Use color when printing; can be 'always', 'auto', or 'never' (default \"auto\")",
        "  -h, --help           Help for a command",
        "  -v, --verbose        Verbose output",
        "      --version        Print version",
        "",
        "Use \"golangci-lint [command] --help\" for more information about a command."
    ],
    "goodcheck": [
        "Usage: goodcheck <command> [options] [args...]",
        "",
        "Commands:",
        "  goodcheck init  Generate a sample configuration file",
        "  goodcheck check  Run check with a configuration",
        "  goodcheck test  Test your configuration",
        "  goodcheck pattern  Print regexp for rules",
        "  goodcheck version  Print version",
        "  goodcheck help  Show help and quit"
    ],
    "graphql-schema-linter": [
        "Usage: graphql-schema-linter [options] [schema.graphql ...]",
        "",
        "Options:",
        "  -r, --rules <rules>                 only the rules specified will be used to validate the schema. Example: fields-have-descriptions,types-have-descriptions",
        "  -o, --rules-options <rulesOptions>  configure the specified rules with the passed in configuration options. example: {\"enum-values-sorted-alphabetically\":{\"sortOrder\":\"lexicographical\"}}",
        "  -i, --ignore <ignore list>          ignore errors for specific schema members, example: {'fields-have-descriptions':['Obvious','Query.obvious','Query.something.obvious']}",
        "  -f, --format <format>               choose the output format of the report. Possible values: json, text, compact",
        "  -s, --stdin                         schema definition will be read from STDIN instead of specified file.",
        "  -c, --config-directory <path>       path to begin searching for config files.",
        "  -p, --custom-rule-paths <paths>     path to additional custom rules to be loaded. Example: rules/*.js",
        "  --comment-descriptions              use old way of defining descriptions in GraphQL SDL",
        "  --old-implements-syntax             use old way of defining implemented interfaces in GraphQL SDL",
        "  -o, --only <rules>                  This option is DEPRECATED. Use `--rules` instead.",
        "  -e, --except <rules>                This option is DEPRECATED. Use `--rules` instead.",
        "  --version                           output the version number",
        "  -h, --help                          output usage information"
    ],
    "grype": [
        "A vulnerability scanner for container images, filesystems, and SBOMs.",
        "",
        "Supports the following image sources:",
        "    grype yourrepo/yourimage:tag             defaults to using images from a Docker daemon",
        "    grype path/to/yourproject                a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory",
        "",
        "You can also explicitly specify the scheme to use:",
        "    grype podman:yourrepo/yourimage:tag          explicitly use the Podman daemon",
        "    grype docker:yourrepo/yourimage:tag          explicitly use the Docker daemon",
        "    grype docker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from \"docker save\"",
        "    grype oci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Podman or otherwise)",
        "    grype oci-dir:path/to/yourimage              read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)",
        "    grype singularity:path/to/yourimage.sif      read directly from a Singularity Image Format (SIF) container on disk",
        "    grype dir:path/to/yourproject                read directly from a path on disk (any directory)",
        "    grype file:path/to/yourfile                  read directly from a file on disk",
        "    grype sbom:path/to/syft.json                 read Syft JSON from path on disk",
        "    grype registry:yourrepo/yourimage:tag        pull image directly from a registry (no container runtime required)",
        "    grype purl:path/to/purl/file                 read a newline separated file of package URLs from a path on disk",
        "    grype PURL                                   read a single package PURL directly (e.g. pkg:apk/openssl@3.2.1?distro=alpine-3.20.3)",
        "",
        "You can also pipe in Syft JSON directly:",
        "  syft yourimage:tag -o json | grype",
        "",
        "Usage:",
        "  grype [IMAGE] [flags]",
        "  grype [command]",
        "",
        "Available Commands:",
        "  completion  Generate a shell completion for Grype (listing local docker images)",
        "  config      show the grype configuration",
        "  db          vulnerability database operations",
        "  explain     Ask grype to explain a set of findings",
        "  help        Help about any command",
        "  version     show version information",
        "",
        "Flags:",
        "      --add-cpes-if-none       generate CPEs for packages with no CPE data",
        "      --by-cve                 orient results by CVE instead of the original vulnerability ID when possible",
        "  -c, --config stringArray     grype configuration file(s) to use",
        "      --distro string          distro to match against in the format: <distro>:<version>",
        "      --exclude stringArray    exclude paths from being scanned using a glob expression",
        "  -f, --fail-on string         set the return code to 1 if a vulnerability is found with a severity >= the given severity, options=[negligible low medium high critical]",
        "      --file string            file to write the default report output to (default is STDOUT)",
        "  -h, --help                   help for grype",
        "      --ignore-states string   ignore matches for vulnerabilities with specified comma separated fix states, options=[fixed not-fixed unknown wont-fix]",
        "      --name string            set the name of the target being analyzed",
        "      --only-fixed             ignore matches for vulnerabilities that are not fixed",
        "      --only-notfixed          ignore matches for vulnerabilities that are fixed",
        "  -o, --output stringArray     report output formatter, formats=[json table cyclonedx cyclonedx-json sarif template], deprecated formats=[embedded-cyclonedx-vex-json embedded-cyclonedx-vex-xml]",
        "      --platform string        an optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux')",
        "      --profile stringArray    configuration profiles to use",
        "  -q, --quiet                  suppress all logging output",
        "  -s, --scope string           selection of layers to analyze, options=[squashed all-layers] (default \"squashed\")",
        "      --show-suppressed        show suppressed/ignored vulnerabilities in the output (only supported with table output format)",
        "  -t, --template string        specify the path to a Go template file (requires 'template' output to be selected)",
        "  -v, --verbose count          increase verbosity (-v = info, -vv = debug)",
        "      --version                version for grype",
        "      --vex stringArray        a list of VEX documents to consider when producing scanning results",
        "",
        "Use \"grype [command] --help\" for more information about a command."
    ],
    "hadolint": [
        "hadolint - Dockerfile Linter written in Haskell",
        "",
        "Usage: hadolint [-v|--version] [-c|--config FILENAME] [DOCKERFILE...]",
        "                [--file-path-in-report FILEPATHINREPORT] [--no-fail]",
        "                [--no-color] [-V|--verbose] [-f|--format ARG] [--error RULECODE]",
        "                [--warning RULECODE] [--info RULECODE] [--style RULECODE]",
        "                [--ignore RULECODE]",
        "                [--trusted-registry REGISTRY (e.g. docker.io)]",
        "                [--require-label LABELSCHEMA (e.g. maintainer:text)]",
        "                [--strict-labels] [--disable-ignore-pragma]",
        "                [-t|--failure-threshold THRESHOLD]",
        "",
        "  Lint Dockerfile for errors and best practices",
        "",
        "Available options:",
        "  -h,--help                Show this help text",
        "  -v,--version             Show version",
        "  -c,--config FILENAME     Path to the configuration file",
        "  --file-path-in-report FILEPATHINREPORT",
        "                           The file path referenced in the generated report.",
        "                           This only applies for the 'checkstyle' format and is",
        "                           useful when running Hadolint with Docker to set the",
        "                           correct file path.",
        "  --no-fail                Don't exit with a failure status code when any rule",
        "                           is violated",
        "  --no-color               Don't colorize output",
        "  -V,--verbose             Enables verbose logging of hadolint's output to",
        "                           stderr",
        "  -f,--format ARG          The output format for the results [tty | json |",
        "                           checkstyle | codeclimate | gitlab_codeclimate | gnu |",
        "                           codacy | sonarqube | sarif] (default: tty)",
        "  --error RULECODE         Make the rule `RULECODE` have the level `error`",
        "  --warning RULECODE       Make the rule `RULECODE` have the level `warning`",
        "  --info RULECODE          Make the rule `RULECODE` have the level `info`",
        "  --style RULECODE         Make the rule `RULECODE` have the level `style`",
        "  --ignore RULECODE        A rule to ignore. If present, the ignore list in the",
        "                           config file is ignored",
        "  --trusted-registry REGISTRY (e.g. docker.io)",
        "                           A docker registry to allow to appear in FROM",
        "                           instructions",
        "  --require-label LABELSCHEMA (e.g. maintainer:text)",
        "                           The option --require-label=label:format makes",
        "                           Hadolint check that the label `label` conforms to",
        "                           format requirement `format`",
        "  --strict-labels          Do not permit labels other than specified in",
        "                           `label-schema`",
        "  --disable-ignore-pragma  Disable inline ignore pragmas `# hadolint",
        "                           ignore=DLxxxx`",
        "  -t,--failure-threshold THRESHOLD",
        "                           Exit with failure code only when rules with a",
        "                           severity equal to or above THRESHOLD are violated.",
        "                           Accepted values: [error | warning | info | style |",
        "                           ignore | none] (default: info)"
    ],
    "helm": [
        "The Kubernetes package manager",
        "",
        "Common actions for Helm:",
        "",
        "- helm search:    search for charts",
        "- helm pull:      download a chart to your local directory to view",
        "- helm install:   upload the chart to Kubernetes",
        "- helm list:      list releases of charts",
        "",
        "Environment variables:",
        "",
        "| Name                               | Description                                                                                                |",
        "|------------------------------------|------------------------------------------------------------------------------------------------------------|",
        "| $HELM_CACHE_HOME                   | set an alternative location for storing cached files.                                                      |",
        "| $HELM_CONFIG_HOME                  | set an alternative location for storing Helm configuration.                                                |",
        "| $HELM_DATA_HOME                    | set an alternative location for storing Helm data.                                                         |",
        "| $HELM_DEBUG                        | indicate whether or not Helm is running in Debug mode                                                      |",
        "| $HELM_DRIVER                       | set the backend storage driver. Values are: configmap, secret, memory, sql.                                |",
        "| $HELM_DRIVER_SQL_CONNECTION_STRING | set the connection string the SQL storage driver should use.                                               |",
        "| $HELM_MAX_HISTORY                  | set the maximum number of helm release history.                                                            |",
        "| $HELM_NAMESPACE                    | set the namespace used for the helm operations.                                                            |",
        "| $HELM_NO_PLUGINS                   | disable plugins. Set HELM_NO_PLUGINS=1 to disable plugins.                                                 |",
        "| $HELM_PLUGINS                      | set the path to the plugins directory                                                                      |",
        "| $HELM_REGISTRY_CONFIG              | set the path to the registry config file.                                                                  |",
        "| $HELM_REPOSITORY_CACHE             | set the path to the repository cache directory                                                             |",
        "| $HELM_REPOSITORY_CONFIG            | set the path to the repositories file.                                                                     |",
        "| $KUBECONFIG                        | set an alternative Kubernetes configuration file (default \"~/.kube/config\")                                |",
        "| $HELM_KUBEAPISERVER                | set the Kubernetes API Server Endpoint for authentication                                                  |",
        "| $HELM_KUBECAFILE                   | set the Kubernetes certificate authority file.                                                             |",
        "| $HELM_KUBEASGROUPS                 | set the Groups to use for impersonation using a comma-separated list.                                      |",
        "| $HELM_KUBEASUSER                   | set the Username to impersonate for the operation.                                                         |",
        "| $HELM_KUBECONTEXT                  | set the name of the kubeconfig context.                                                                    |",
        "| $HELM_KUBETOKEN                    | set the Bearer KubeToken used for authentication.                                                          |",
        "| $HELM_KUBEINSECURE_SKIP_TLS_VERIFY | indicate if the Kubernetes API server's certificate validation should be skipped (insecure)                |",
        "| $HELM_KUBETLS_SERVER_NAME          | set the server name used to validate the Kubernetes API server certificate                                 |",
        "| $HELM_BURST_LIMIT                  | set the default burst limit in the case the server contains many CRDs (default 100, -1 to disable)         |",
        "| $HELM_QPS                          | set the Queries Per Second in cases where a high number of calls exceed the option for higher burst values |",
        "",
        "Helm stores cache, configuration, and data based on the following configuration order:",
        "",
        "- If a HELM_*_HOME environment variable is set, it will be used",
        "- Otherwise, on systems supporting the XDG base directory specification, the XDG variables will be used",
        "- When no other location is set a default location will be used based on the operating system",
        "",
        "By default, the default directories depend on the Operating System. The defaults are listed below:",
        "",
        "| Operating System | Cache Path                | Configuration Path             | Data Path               |",
        "|------------------|---------------------------|--------------------------------|-------------------------|",
        "| Linux            | $HOME/.cache/helm         | $HOME/.config/helm             | $HOME/.local/share/helm |",
        "| macOS            | $HOME/Library/Caches/helm | $HOME/Library/Preferences/helm | $HOME/Library/helm      |",
        "| Windows          | %TEMP%\\helm               | %APPDATA%\\helm                 | %APPDATA%\\helm          |",
        "",
        "Usage:",
        "  helm [command]",
        "",
        "Available Commands:",
        "  completion  generate autocompletion scripts for the specified shell",
        "  create      create a new chart with the given name",
        "  dependency  manage a chart's dependencies",
        "  env         helm client environment information",
        "  get         download extended information of a named release",
        "  help        Help about any command",
        "  history     fetch release history",
        "  install     install a chart",
        "  lint        examine a chart for possible issues",
        "  list        list releases",
        "  package     package a chart directory into a chart archive",
        "  plugin      install, list, or uninstall Helm plugins",
        "  pull        download a chart from a repository and (optionally) unpack it in local directory",
        "  push        push a chart to remote",
        "  registry    login to or logout from a registry",
        "  repo        add, list, remove, update, and index chart repositories",
        "  rollback    roll back a release to a previous revision",
        "  search      search for a keyword in charts",
        "  show        show information of a chart",
        "  status      display the status of the named release",
        "  template    locally render templates",
        "  test        run tests for a release",
        "  uninstall   uninstall a release",
        "  upgrade     upgrade a release",
        "  verify      verify that a chart at the given path has been signed and is valid",
        "  version     print the client version information",
        "",
        "Flags:",
        "      --burst-limit int                 client-side default throttling limit (default 100)",
        "      --debug                           enable verbose output",
        "  -h, --help                            help for helm",
        "      --kube-apiserver string           the address and the port for the Kubernetes API server",
        "      --kube-as-group stringArray       group to impersonate for the operation, this flag can be repeated to specify multiple groups.",
        "      --kube-as-user string             username to impersonate for the operation",
        "      --kube-ca-file string             the certificate authority file for the Kubernetes API server connection",
        "      --kube-context string             name of the kubeconfig context to use",
        "      --kube-insecure-skip-tls-verify   if true, the Kubernetes API server's certificate will not be checked for validity. This will make your HTTPS connections insecure",
        "      --kube-tls-server-name string     server name to use for Kubernetes API server certificate validation. If it is not provided, the hostname used to contact the server is used",
        "      --kube-token string               bearer token used for authentication",
        "      --kubeconfig string               path to the kubeconfig file",
        "  -n, --namespace string                namespace scope for this request",
        "      --qps float32                     queries per second used when communicating with the Kubernetes API, not including bursting",
        "      --registry-config string          path to the registry config file (default \"/root/.config/helm/registry/config.json\")",
        "      --repository-cache string         path to the directory containing cached repository indexes (default \"/root/.cache/helm/repository\")",
        "      --repository-config string        path to the file containing repository names and URLs (default \"/root/.config/helm/repositories.yaml\")",
        "",
        "Use \"helm [command] --help\" for more information about a command."
    ],
    "htmlhint": [
        "Usage: htmlhint <file|folder|pattern|stdin|url ...> [options]",
        "",
        "Options:",
        "  -V, --version                                                    output the version number",
        "  -l, --list                                                       show all of the rules available",
        "  -c, --config <file>                                              custom configuration file",
        "  -r, --rules <ruleid, ruleid=value ...>                           set all of the rules available",
        "  -R, --rulesdir <file|folder>                                     load custom rules from file or folder",
        "  -f, --format <checkstyle|compact|html|json|junit|markdown|unix>  output messages as custom format",
        "  -i, --ignore <pattern, pattern ...>                              add pattern to exclude matches",
        "  --nocolor                                                        disable color",
        "  --warn                                                           Warn only, exit with 0",
        "  -h, --help                                                       display help for command",
        "  Examples:",
        "",
        "    htmlhint",
        "    htmlhint www",
        "    htmlhint www/test.html",
        "    htmlhint www/**/*.xhtml",
        "    htmlhint www/**/*.{htm,html}",
        "    htmlhint http://www.alibaba.com/",
        "    cat test.html | htmlhint stdin",
        "    htmlhint --list",
        "    htmlhint --rules tag-pair,id-class-value=underline test.html",
        "    htmlhint --config .htmlhintrc test.html",
        "    htmlhint --ignore **/build/**,**/test/**",
        "    htmlhint --rulesdir ./rules/",
        ""
    ],
    "isort": [
        "usage: isort [-h] [-V] [--vn] [-v] [--only-modified] [--dedup-headings] [-q]",
        "             [-d] [--overwrite-in-place] [--show-config] [--show-files] [--df]",
        "             [-c] [--ws] [--sp SETTINGS_PATH] [--cr CONFIG_ROOT]",
        "             [--resolve-all-configs] [--profile PROFILE] [--old-finders]",
        "             [-j [JOBS]] [--ac] [--interactive] [--format-error FORMAT_ERROR]",
        "             [--format-success FORMAT_SUCCESS] [--srx] [--filter-files]",
        "             [-s SKIP] [--extend-skip EXTEND_SKIP] [--sg SKIP_GLOB]",
        "             [--extend-skip-glob EXTEND_SKIP_GLOB] [--gitignore]",
        "             [--ext SUPPORTED_EXTENSIONS]",
        "             [--blocked-extension BLOCKED_EXTENSIONS] [--dont-follow-links]",
        "             [--filename FILENAME] [--allow-root] [-a ADD_IMPORTS] [--append]",
        "             [--af] [--rm REMOVE_IMPORTS] [--float-to-top]",
        "             [--dont-float-to-top] [--ca] [--cs] [-e] [--ff]",
        "             [--fgw [FORCE_GRID_WRAP]] [-i INDENT]",
        "             [--lbi LINES_BEFORE_IMPORTS] [--lai LINES_AFTER_IMPORTS]",
        "             [--lbt LINES_BETWEEN_TYPES] [--le LINE_ENDING] [--ls] [--lss]",
        "             [-m {GRID,VERTICAL,HANGING_INDENT,VERTICAL_HANGING_INDENT,VERTICAL_GRID,VERTICAL_GRID_GROUPED,VERTICAL_GRID_GROUPED_NO_COMMA,NOQA,VERTICAL_HANGING_INDENT_BRACKET,VERTICAL_PREFIX_FROM_MODULE_IMPORT,HANGING_INDENT_WITH_PARENTHESES,BACKSLASH_GRID,0,1,2,3,4,5,6,7,8,9,10,11}]",
        "             [-n] [--nis] [--ot] [--dt] [--rr] [--reverse-sort]",
        "             [--sort-order SORT_ORDER] [--sl] [--nsl SINGLE_LINE_EXCLUSIONS]",
        "             [--tc] [--up] [-l LINE_LENGTH] [--wl WRAP_LENGTH]",
        "             [--case-sensitive] [--remove-redundant-aliases] [--honor-noqa]",
        "             [--treat-comment-as-code TREAT_COMMENTS_AS_CODE]",
        "             [--treat-all-comment-as-code] [--formatter FORMATTER] [--color]",
        "             [--ext-format EXT_FORMAT] [--star-first]",
        "             [--split-on-trailing-comma] [--sd DEFAULT_SECTION]",
        "             [--only-sections] [--ds] [--fas] [--fss] [--hcss] [--srss]",
        "             [--fass] [-t FORCE_TO_TOP] [--combine-straight-imports]",
        "             [--nlb NO_LINES_BEFORE] [--src SRC_PATHS]",
        "             [-b KNOWN_STANDARD_LIBRARY]",
        "             [--extra-builtin EXTRA_STANDARD_LIBRARY]",
        "             [-f KNOWN_FUTURE_LIBRARY] [-o KNOWN_THIRD_PARTY]",
        "             [-p KNOWN_FIRST_PARTY] [--known-local-folder KNOWN_LOCAL_FOLDER]",
        "             [--virtual-env VIRTUAL_ENV] [--conda-env CONDA_ENV]",
        "             [--py {all,2,27,3,310,311,312,313,36,37,38,39,auto}]",
        "             [files ...]",
        "",
        "Sort Python import definitions alphabetically within logical sections. Run",
        "with no arguments to see a quick start guide, otherwise, one or more",
        "files/directories/stdin must be provided. Use `-` as the first argument to",
        "represent stdin. Use --interactive to use the pre 5.0.0 interactive behavior.",
        "If you've used isort 4 but are new to isort 5, see the upgrading guide:",
        "https://pycqa.github.io/isort/docs/upgrade_guides/5.0.0.html",
        "",
        "general options:",
        "  -h, --help            show this help message and exit",
        "  -V, --version         Displays the currently installed version of isort.",
        "  --vn, --version-number",
        "                        Returns just the current version number without the",
        "                        logo",
        "  -v, --verbose         Shows verbose output, such as when files are skipped",
        "                        or when a check is successful.",
        "  --only-modified, --om",
        "                        Suppresses verbose output for non-modified files.",
        "  --dedup-headings      Tells isort to only show an identical custom import",
        "                        heading comment once, even if there are multiple",
        "                        sections with the comment set.",
        "  -q, --quiet           Shows extra quiet output, only errors are outputted.",
        "  -d, --stdout          Force resulting output to stdout, instead of in-place.",
        "  --overwrite-in-place  Tells isort to overwrite in place using the same file",
        "                        handle. Comes at a performance and memory usage",
        "                        penalty over its standard approach but ensures all",
        "                        file flags and modes stay unchanged.",
        "  --show-config         See isort's determined config, as well as sources of",
        "                        config options.",
        "  --show-files          See the files isort will be run against with the",
        "                        current config options.",
        "  --df, --diff          Prints a diff of all the changes isort would make to a",
        "                        file, instead of changing it in place",
        "  -c, --check-only, --check",
        "                        Checks the file for unsorted / unformatted imports and",
        "                        prints them to the command line without modifying the",
        "                        file. Returns 0 when nothing would change and returns",
        "                        1 when the file would be reformatted.",
        "  --ws, --ignore-whitespace",
        "                        Tells isort to ignore whitespace differences when",
        "                        --check-only is being used.",
        "  --sp SETTINGS_PATH, --settings-path SETTINGS_PATH, --settings-file SETTINGS_PATH, --settings SETTINGS_PATH",
        "                        Explicitly set the settings path or file instead of",
        "                        auto determining based on file location.",
        "  --cr CONFIG_ROOT, --config-root CONFIG_ROOT",
        "                        Explicitly set the config root for resolving all",
        "                        configs. When used with the --resolve-all-configs",
        "                        flag, isort will look at all sub-folders in this",
        "                        config root to resolve config files and sort files",
        "                        based on the closest available config(if any)",
        "  --resolve-all-configs",
        "                        Tells isort to resolve the configs for all sub-",
        "                        directories and sort files in terms of its closest",
        "                        config files.",
        "  --profile PROFILE     Base profile type to use for configuration. Profiles",
        "                        include: black, django, pycharm, google, open_stack,",
        "                        plone, attrs, hug, wemake, appnexus. As well as any",
        "                        shared profiles.",
        "  --old-finders, --magic-placement",
        "                        Use the old deprecated finder logic that relies on",
        "                        environment introspection magic.",
        "  -j [JOBS], --jobs [JOBS]",
        "                        Number of files to process in parallel. Negative value",
        "                        means use number of CPUs.",
        "  --ac, --atomic        Ensures the output doesn't save if the resulting file",
        "                        contains syntax errors.",
        "  --interactive         Tells isort to apply changes interactively.",
        "  --format-error FORMAT_ERROR",
        "                        Override the format used to print errors.",
        "  --format-success FORMAT_SUCCESS",
        "                        Override the format used to print success.",
        "  --srx, --sort-reexports",
        "                        Automatically sort all re-exports (module level",
        "                        __all__ collections)",
        "",
        "target options:",
        "  files                 One or more Python source files that need their",
        "                        imports sorted.",
        "  --filter-files        Tells isort to filter files even when they are",
        "                        explicitly passed in as part of the CLI command.",
        "  -s SKIP, --skip SKIP  Files that isort should skip over. If you want to skip",
        "                        multiple files you should specify twice: --skip file1",
        "                        --skip file2. Values can be file names, directory",
        "                        names or file paths. To skip all files in a nested",
        "                        path use --skip-glob.",
        "  --extend-skip EXTEND_SKIP",
        "                        Extends --skip to add additional files that isort",
        "                        should skip over. If you want to skip multiple files",
        "                        you should specify twice: --skip file1 --skip file2.",
        "                        Values can be file names, directory names or file",
        "                        paths. To skip all files in a nested path use --skip-",
        "                        glob.",
        "  --sg SKIP_GLOB, --skip-glob SKIP_GLOB",
        "                        Files that isort should skip over.",
        "  --extend-skip-glob EXTEND_SKIP_GLOB",
        "                        Additional files that isort should skip over",
        "                        (extending --skip-glob).",
        "  --gitignore, --skip-gitignore",
        "                        Treat project as a git repository and ignore files",
        "                        listed in .gitignore. NOTE: This requires git to be",
        "                        installed and accessible from the same shell as isort.",
        "  --ext SUPPORTED_EXTENSIONS, --extension SUPPORTED_EXTENSIONS, --supported-extension SUPPORTED_EXTENSIONS",
        "                        Specifies what extensions isort can be run against.",
        "  --blocked-extension BLOCKED_EXTENSIONS",
        "                        Specifies what extensions isort can never be run",
        "                        against.",
        "  --dont-follow-links   Tells isort not to follow symlinks that are",
        "                        encountered when running recursively.",
        "  --filename FILENAME   Provide the filename associated with a stream.",
        "  --allow-root          Tells isort not to treat / specially, allowing it to",
        "                        be run against the root dir.",
        "",
        "general output options:",
        "  -a ADD_IMPORTS, --add-import ADD_IMPORTS",
        "                        Adds the specified import line to all files,",
        "                        automatically determining correct placement.",
        "  --append, --append-only",
        "                        Only adds the imports specified in --add-import if the",
        "                        file contains existing imports.",
        "  --af, --force-adds    Forces import adds even if the original file is empty.",
        "  --rm REMOVE_IMPORTS, --remove-import REMOVE_IMPORTS",
        "                        Removes the specified import from all files.",
        "  --float-to-top        Causes all non-indented imports to float to the top of",
        "                        the file having its imports sorted (immediately below",
        "                        the top of file comment). This can be an excellent",
        "                        shortcut for collecting imports every once in a while",
        "                        when you place them in the middle of a file to avoid",
        "                        context switching. *NOTE*: It currently doesn't work",
        "                        with cimports and introduces some extra over-head and",
        "                        a performance penalty.",
        "  --dont-float-to-top   Forces --float-to-top setting off. See --float-to-top",
        "                        for more information.",
        "  --ca, --combine-as    Combines as imports on the same line.",
        "  --cs, --combine-star  Ensures that if a star import is present, nothing else",
        "                        is imported from that namespace.",
        "  -e, --balanced        Balances wrapping to produce the most consistent line",
        "                        length possible",
        "  --ff, --from-first    Switches the typical ordering preference, showing from",
        "                        imports first then straight ones.",
        "  --fgw [FORCE_GRID_WRAP], --force-grid-wrap [FORCE_GRID_WRAP]",
        "                        Force number of from imports (defaults to 2 when",
        "                        passed as CLI flag without value) to be grid wrapped",
        "                        regardless of line length. If 0 is passed in (the",
        "                        global default) only line length is considered.",
        "  -i INDENT, --indent INDENT",
        "                        String to place for indents defaults to \" \" (4",
        "                        spaces).",
        "  --lbi LINES_BEFORE_IMPORTS, --lines-before-imports LINES_BEFORE_IMPORTS",
        "  --lai LINES_AFTER_IMPORTS, --lines-after-imports LINES_AFTER_IMPORTS",
        "  --lbt LINES_BETWEEN_TYPES, --lines-between-types LINES_BETWEEN_TYPES",
        "  --le LINE_ENDING, --line-ending LINE_ENDING",
        "                        Forces line endings to the specified value. If not",
        "                        set, values will be guessed per-file.",
        "  --ls, --length-sort   Sort imports by their string length.",
        "  --lss, --length-sort-straight",
        "                        Sort straight imports by their string length. Similar",
        "                        to `length_sort` but applies only to straight imports",
        "                        and doesn't affect from imports.",
        "  -m {GRID,VERTICAL,HANGING_INDENT,VERTICAL_HANGING_INDENT,VERTICAL_GRID,VERTICAL_GRID_GROUPED,VERTICAL_GRID_GROUPED_NO_COMMA,NOQA,VERTICAL_HANGING_INDENT_BRACKET,VERTICAL_PREFIX_FROM_MODULE_IMPORT,HANGING_INDENT_WITH_PARENTHESES,BACKSLASH_GRID,0,1,2,3,4,5,6,7,8,9,10,11}, --multi-line {GRID,VERTICAL,HANGING_INDENT,VERTICAL_HANGING_INDENT,VERTICAL_GRID,VERTICAL_GRID_GROUPED,VERTICAL_GRID_GROUPED_NO_COMMA,NOQA,VERTICAL_HANGING_INDENT_BRACKET,VERTICAL_PREFIX_FROM_MODULE_IMPORT,HANGING_INDENT_WITH_PARENTHESES,BACKSLASH_GRID,0,1,2,3,4,5,6,7,8,9,10,11}",
        "                        Multi line output (0-grid, 1-vertical, 2-hanging,",
        "                        3-vert-hanging, 4-vert-grid, 5-vert-grid-grouped,",
        "                        6-deprecated-alias-for-5, 7-noqa, 8-vertical-hanging-",
        "                        indent-bracket, 9-vertical-prefix-from-module-import,",
        "                        10-hanging-indent-with-parentheses).",
        "  -n, --ensure-newline-before-comments",
        "                        Inserts a blank line before a comment following an",
        "                        import.",
        "  --nis, --no-inline-sort",
        "                        Leaves `from` imports with multiple imports 'as-is'",
        "                        (e.g. `from foo import a, c ,b`).",
        "  --ot, --order-by-type",
        "                        Order imports by type, which is determined by case, in",
        "                        addition to alphabetically. **NOTE**: type here refers",
        "                        to the implied type from the import name",
        "                        capitalization. isort does not do type introspection",
        "                        for the imports. These \"types\" are simply:",
        "                        CONSTANT_VARIABLE, CamelCaseClass,",
        "                        variable_or_function. If your project follows PEP8 or",
        "                        a related coding standard and has many imports this is",
        "                        a good default, otherwise you likely will want to turn",
        "                        it off. From the CLI the `--dont-order-by-type` option",
        "                        will turn this off.",
        "  --dt, --dont-order-by-type",
        "                        Don't order imports by type, which is determined by",
        "                        case, in addition to alphabetically. **NOTE**: type",
        "                        here refers to the implied type from the import name",
        "                        capitalization. isort does not do type introspection",
        "                        for the imports. These \"types\" are simply:",
        "                        CONSTANT_VARIABLE, CamelCaseClass,",
        "                        variable_or_function. If your project follows PEP8 or",
        "                        a related coding standard and has many imports this is",
        "                        a good default. You can turn this on from the CLI",
        "                        using `--order-by-type`.",
        "  --rr, --reverse-relative",
        "                        Reverse order of relative imports.",
        "  --reverse-sort        Reverses the ordering of imports.",
        "  --sort-order SORT_ORDER",
        "                        Specify sorting function. Can be built in",
        "                        (natural[default] = force numbers to be sequential,",
        "                        native = Python's built-in sorted function) or an",
        "                        installable plugin.",
        "  --sl, --force-single-line-imports",
        "                        Forces all from imports to appear on their own line",
        "  --nsl SINGLE_LINE_EXCLUSIONS, --single-line-exclusions SINGLE_LINE_EXCLUSIONS",
        "                        One or more modules to exclude from the single line",
        "                        rule.",
        "  --tc, --trailing-comma",
        "                        Includes a trailing comma on multi line imports that",
        "                        include parentheses.",
        "  --up, --use-parentheses",
        "                        Use parentheses for line continuation on length limit",
        "                        instead of slashes. **NOTE**: This is separate from",
        "                        wrap modes, and only affects how individual lines that",
        "                        are too long get continued, not sections of multiple",
        "                        imports.",
        "  -l LINE_LENGTH, -w LINE_LENGTH, --line-length LINE_LENGTH, --line-width LINE_LENGTH",
        "                        The max length of an import line (used for wrapping",
        "                        long imports).",
        "  --wl WRAP_LENGTH, --wrap-length WRAP_LENGTH",
        "                        Specifies how long lines that are wrapped should be,",
        "                        if not set line_length is used. NOTE: wrap_length must",
        "                        be LOWER than or equal to line_length.",
        "  --case-sensitive      Tells isort to include casing when sorting module",
        "                        names",
        "  --remove-redundant-aliases",
        "                        Tells isort to remove redundant aliases from imports,",
        "                        such as `import os as os`. This defaults to `False`",
        "                        simply because some projects use these seemingly",
        "                        useless aliases to signify intent and change",
        "                        behaviour.",
        "  --honor-noqa          Tells isort to honor noqa comments to enforce skipping",
        "                        those comments.",
        "  --treat-comment-as-code TREAT_COMMENTS_AS_CODE",
        "                        Tells isort to treat the specified single line",
        "                        comment(s) as if they are code.",
        "  --treat-all-comment-as-code",
        "                        Tells isort to treat all single line comments as if",
        "                        they are code.",
        "  --formatter FORMATTER",
        "                        Specifies the name of a formatting plugin to use when",
        "                        producing output.",
        "  --color               Tells isort to use color in terminal output.",
        "  --ext-format EXT_FORMAT",
        "                        Tells isort to format the given files according to an",
        "                        extensions formatting rules.",
        "  --star-first          Forces star imports above others to avoid overriding",
        "                        directly imported variables.",
        "  --split-on-trailing-comma",
        "                        Split imports list followed by a trailing comma into",
        "                        VERTICAL_HANGING_INDENT mode",
        "",
        "section output options:",
        "  --sd DEFAULT_SECTION, --section-default DEFAULT_SECTION",
        "                        Sets the default section for import options:",
        "                        ('FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY',",
        "                        'LOCALFOLDER')",
        "  --only-sections, --os",
        "                        Causes imports to be sorted based on their sections",
        "                        like STDLIB, THIRDPARTY, etc. Within sections, the",
        "                        imports are ordered by their import style and the",
        "                        imports with the same style maintain their relative",
        "                        positions.",
        "  --ds, --no-sections   Put all imports into the same section bucket",
        "  --fas, --force-alphabetical-sort",
        "                        Force all imports to be sorted as a single section",
        "  --fss, --force-sort-within-sections",
        "                        Don't sort straight-style imports (like import sys)",
        "                        before from-style imports (like from itertools import",
        "                        groupby). Instead, sort the imports by module,",
        "                        independent of import style.",
        "  --hcss, --honor-case-in-force-sorted-sections",
        "                        Honor `--case-sensitive` when `--force-sort-within-",
        "                        sections` is being used. Without this option set,",
        "                        `--order-by-type` decides module name ordering too.",
        "  --srss, --sort-relative-in-force-sorted-sections",
        "                        When using `--force-sort-within-sections`, sort",
        "                        relative imports the same way as they are sorted when",
        "                        not using that setting.",
        "  --fass, --force-alphabetical-sort-within-sections",
        "                        Force all imports to be sorted alphabetically within a",
        "                        section",
        "  -t FORCE_TO_TOP, --top FORCE_TO_TOP",
        "                        Force specific imports to the top of their appropriate",
        "                        section.",
        "  --combine-straight-imports, --csi",
        "                        Combines all the bare straight imports of the same",
        "                        section in a single line. Won't work with sections",
        "                        which have 'as' imports",
        "  --nlb NO_LINES_BEFORE, --no-lines-before NO_LINES_BEFORE",
        "                        Sections which should not be split with previous by",
        "                        empty lines",
        "  --src SRC_PATHS, --src-path SRC_PATHS",
        "                        Add an explicitly defined source path (modules within",
        "                        src paths have their imports automatically categorized",
        "                        as first_party). Glob expansion (`*` and `**`) is",
        "                        supported for this option.",
        "  -b KNOWN_STANDARD_LIBRARY, --builtin KNOWN_STANDARD_LIBRARY",
        "                        Force isort to recognize a module as part of Python's",
        "                        standard library.",
        "  --extra-builtin EXTRA_STANDARD_LIBRARY",
        "                        Extra modules to be included in the list of ones in",
        "                        Python's standard library.",
        "  -f KNOWN_FUTURE_LIBRARY, --future KNOWN_FUTURE_LIBRARY",
        "                        Force isort to recognize a module as part of Python's",
        "                        internal future compatibility libraries. WARNING: this",
        "                        overrides the behavior of __future__ handling and",
        "                        therefore can result in code that can't execute. If",
        "                        you're looking to add dependencies such as six, a",
        "                        better option is to create another section below",
        "                        --future using custom sections. See:",
        "                        https://github.com/PyCQA/isort#custom-sections-and-",
        "                        ordering and the discussion here:",
        "                        https://github.com/PyCQA/isort/issues/1463.",
        "  -o KNOWN_THIRD_PARTY, --thirdparty KNOWN_THIRD_PARTY",
        "                        Force isort to recognize a module as being part of a",
        "                        third party library.",
        "  -p KNOWN_FIRST_PARTY, --project KNOWN_FIRST_PARTY",
        "                        Force isort to recognize a module as being part of the",
        "                        current python project.",
        "  --known-local-folder KNOWN_LOCAL_FOLDER",
        "                        Force isort to recognize a module as being a local",
        "                        folder. Generally, this is reserved for relative",
        "                        imports (from . import module).",
        "  --virtual-env VIRTUAL_ENV",
        "                        Virtual environment to use for determining whether a",
        "                        package is third-party",
        "  --conda-env CONDA_ENV",
        "                        Conda environment to use for determining whether a",
        "                        package is third-party",
        "  --py {all,2,27,3,310,311,312,313,36,37,38,39,auto}, --python-version {all,2,27,3,310,311,312,313,36,37,38,39,auto}",
        "                        Tells isort to set the known standard library based on",
        "                        the specified Python version. Default is to assume any",
        "                        Python 3 version could be the target, and use a union",
        "                        of all stdlib modules across versions. If auto is",
        "                        specified, the version of the interpreter used to run",
        "                        isort (currently: 312) will be used."
    ],
    "jscpd": [
        "Usage: jscpd [options] <path ...>",
        "",
        "detector of copy/paste in files",
        "",
        "Options:",
        "  -V, --version              output the version number",
        "  -l, --min-lines [number]   min size of duplication in code lines (Default is",
        "                             5)",
        "  -k, --min-tokens [number]  min size of duplication in code tokens (Default is",
        "                             50)",
        "  -x, --max-lines [number]   max size of source in lines (Default is 1000)",
        "  -z, --max-size [string]    max size of source in bytes, examples: 1kb, 1mb,",
        "                             120kb (Default is 100kb)",
        "  -t, --threshold [number]   threshold for duplication, in case duplications >=",
        "                             threshold jscpd will exit with error",
        "  -c, --config [string]      path to config file (Default is .jscpd.json in",
        "                             <path>)",
        "  -i, --ignore [string]      glob pattern for files what should be excluded",
        "                             from duplication detection",
        "  --ignore-pattern [string]  Ignore code blocks matching the regexp patterns",
        "  -r, --reporters [string]   reporters or list of reporters separated with",
        "                             comma to use (Default is time,console)",
        "  -o, --output [string]      reporters to use (Default is ./report/)",
        "  -m, --mode [string]        mode of quality of search, can be \"strict\", \"mild\" and \"weak\" (Default is \"function mild(token) {",
        "    return strict(token) && token.type !== \"empty\" && token.type !== \"new_line\";",
        "  }\")",
        "  -f, --format [string]      format or formats separated by comma (Example",
        "                             php,javascript,python)",
        "  -p, --pattern [string]     glob pattern to file search (Example **/*.txt)",
        "  -b, --blame                blame authors of duplications (get information",
        "                             about authors from git)",
        "  -s, --silent               do not write detection progress and result to a",
        "                             console",
        "  --store [string]           use for define custom store (e.g. --store leveldb",
        "                             used for big codebase)",
        "  -a, --absolute             use absolute path in reports",
        "  -n, --noSymlinks           dont use symlinks for detection in files",
        "  --ignoreCase               ignore case of symbols in code (experimental)",
        "  -g, --gitignore            ignore all files from .gitignore file",
        "  --formats-exts [string]    list of formats with file extensions",
        "                             (javascript:es,es6;dart:dt)",
        "  -d, --debug                show debug information, not run detection",
        "                             process(options list and selected files)",
        "  -v, --verbose              show full information during detection process",
        "  --list                     show list of total supported formats",
        "  --skipLocal                skip duplicates in local folders, just detect",
        "                             cross folders duplications",
        "  --exitCode [number]        exit code to use when code duplications are",
        "                             detected",
        "  -h, --help                 display help for command"
    ],
    "jsonlint": [
        "JSON/CJSON/JSON5 parser, syntax and schema validator and pretty-printer.",
        "",
        "Usage: jsonlint [options] [--] [<file, directory, pattern> ...]",
        "",
        "Options:",
        "  -f, --config <file>          read options from a custom configuration file",
        "  -F, --no-config              disable searching for configuration files",
        "  --ignore-proto-key           ignore occurrences of \"__proto__\" object key",
        "  --ignore-prototype-keys      ignore all keys from \"Object.prototype\"",
        "  -s, --sort-keys              sort object keys (not when prettifying)",
        "  --sort-keys-ignore-case      sort object keys ignoring the letter case",
        "  --sort-keys-locale <id>      locale identifier to sort object keys with",
        "                               (or \"default\" for the system default)",
        "  --sort-keys-case-first <id>  order if only letter case is different",
        "                               (\"upper\", \"lower\" and \"false\" are allowed)",
        "  --sort-keys-numeric          sort by numbers recognised in object keys",
        "  -E, --extensions <ext...>    file extensions to process for directory walk",
        "                               (default: json, JSON)",
        "  -i, --in-place               overwrite the input files",
        "  -j, --diff                   print difference instead of writing the output",
        "  -k, --check                  check that the input is equal to the output",
        "  -t, --indent <num|char>      number of spaces or specific characters to use",
        "                               for indentation or a string with whitespace",
        "  -c, --compact                compact error display",
        "  -M, --mode <mode>            set other parsing flags according to the format",
        "                               of the input data (default: json)",
        "  -B, --bom                    ignore the leading UTF-8 byte-order mark",
        "  -C, --comments               recognize and ignore JavaScript-style comments",
        "  -S, --single-quoted-strings  support single quotes as string delimiters",
        "  -T, --trailing-commas        ignore trailing commas in objects and arrays",
        "  -D, --no-duplicate-keys      report duplicate object keys as an error",
        "  -V, --validate <file...>     JSON Schema file(s) to use for validation",
        "  -e, --environment <env>      which version of JSON Schema the validation",
        "                               should use",
        "  -x, --context <num>          line number used as the diff context",
        "                               (default: 3)",
        "  -l, --log-files              print only the parsed file names to stdout",
        "  -q, --quiet                  do not print the parsed json to stdout",
        "  -n, --continue               continue with other files if an error occurs",
        "  -p, --pretty-print           prettify the input instead of stringifying",
        "                               the parsed object",
        "  -P, --pretty-print-invalid   force pretty-printing even for invalid input",
        "  -r, --trailing-newline       ensure a line break at the end of the output",
        "  -R, --no-trailing-newline    ensure no line break at the end of the output",
        "  --prune-comments             omit comments from the prettified output",
        "  --strip-object-keys          strip quotes from object keys if possible",
        "  --enforce-double-quotes      surrounds all strings with double quotes",
        "  --enforce-single-quotes      surrounds all strings with single quotes",
        "  --trim-trailing-commas       omit trailing commas from objects and arrays",
        "  --succeed-with-no-files      succeed (exit code 0) if no files were found",
        "  -v, --version                output the version number",
        "  -h, --help                   display help for command",
        "",
        "Examples:",
        "  $ jsonlint myfile.json",
        "  $ jsonlint --in-place --pretty-print mydir",
        "  $ jsonlint --comments --trailing-commas --no-duplicate-keys \\",
        "      --log-files --compact --continue '**/*.json' '!**/node_modules'"
    ],
    "kics": [
        "Keeping Infrastructure as Code Secure",
        "",
        "Usage:",
        "  kics [command]",
        "",
        "Available Commands:",
        "  analyze        Determines the detected platforms of a certain project",
        "  generate-id    Generates uuid for query",
        "  help           Help about any command",
        "  list-platforms List supported platforms",
        "  remediate      Auto remediates the project",
        "  scan           Executes a scan analysis",
        "  version        Displays the current version",
        "",
        "Flags:",
        "      --ci                  display only log messages to CLI output (mutually exclusive with silent)",
        "  -h, --help                help for kics",
        "  -f, --log-format string   determines log format (pretty,json) (default \"pretty\")",
        "      --log-level string    determines log level (TRACE,DEBUG,INFO,WARN,ERROR,FATAL) (default \"INFO\")",
        "      --log-path string     path to generate log file (info.log)",
        "      --no-color            disable CLI color output",
        "      --profiling string    enables performance profiler that prints resource consumption metrics in the logs during the execution (CPU, MEM)",
        "  -s, --silent              silence stdout messages (mutually exclusive with verbose and ci)",
        "  -v, --verbose             write logs to stdout too (mutually exclusive with silent)",
        "",
        "Use \"kics [command] --help\" for more information about a command."
    ],
    "ktlint": [
        "Usage: ktlint [<options>] [<arguments>]... <command> [<args>]...",
        "",
        "  An anti-bikeshedding Kotlin linter with built-in formatter.",
        "  (https://pinterest.github.io/ktlint/latest/).",
        "",
        "  Usage on Windows: java -jar ktlint.jar [<options>] [<arguments>]... <command>",
        "  [<args>]...",
        "",
        "  # EXAMPLES",
        "",
        "  ## Use default patterns",
        "",
        "  Check the style of all Kotlin files (ending with '.kt' or '.kts') inside the",
        "  current dir (recursively). Hidden folders will be skipped.",
        "",
        "  `ktlint`",
        "",
        "  ## Specify patterns",
        "",
        "  Check only certain locations starting from the current directory. Prepend !",
        "  to negate the pattern, KtLint uses .gitignore pattern style syntax. Globs are",
        "  applied starting from the last one.",
        "",
        "  Check all '.kt' files in 'src/' directory, but ignore files ending with",
        "  'Test.kt':",
        "",
        "  `ktlint \"src/**/*.kt\" \"!src/**/*Test.kt\"`",
        "",
        "  Check all '.kt' files in 'src/' directory, but ignore 'generated' directory",
        "  and its subdirectories:",
        "",
        "  `ktlint \"src/**/*.kt\" \"!src/**/generated/**\"`",
        "",
        "  ## Auto-correct style violations",
        "",
        "  Check all '.kt' files in 'src/' directory, and when possible automatically",
        "  correct the lint violations:",
        "",
        "  `ktlint -F \"src/**/*.kt\"`",
        "",
        "  ## Using custom reporter jar and overriding report location",
        "",
        "  `ktlint",
        "  --reporter=csv,artifact=/path/to/reporter/csv.jar,output=my-custom-report.csv`",
        "",
        "  # Options and commands",
        "",
        "Options:",
        "  -v, --version            Show the version and exit",
        "  --code-style=(android_studio|intellij_idea|ktlint_official)",
        "                           (deprecated)",
        "  --color                  Make output colorful",
        "  --color-name=<text>      Customize the output color",
        "  -F, --format             Fix deviations from the code style when possible",
        "  --limit=<int>            Maximum number of errors to show (default: show all)",
        "  --relative               Print files relative to the working directory (e.g.",
        "                           dir/file.kt instead of",
        "                           /home/user/project/dir/file.kt)",
        "  --reporter=<text>        A reporter to use (built-in: plain (default),",
        "                           plain?group_by_file, plain-summary, json, sarif,",
        "                           checkstyle, html). To usea third-party reporter",
        "                           specify a path to a JAR file on the filesystem via",
        "                           ',artifact=' option. To override reporter output,",
        "                           use ',output=' option.",
        "  -R, --ruleset=<text>     A path to a JAR file containing additional",
        "                           ruleset(s)",
        "  --stdin                  Read file from stdin",
        "  --stdin-path=<text>      Virtual file location for stdin. When combined with",
        "                           option '--format' the actual file will not be",
        "                           overwritten",
        "  --patterns-from-stdin[=<text>]",
        "                           Read additional patterns to check/format from stdin.",
        "                           Patterns are delimited by the given argument.",
        "                           (default is newline). If the argument is an empty",
        "                           string, the NUL byte is used.",
        "  --editorconfig=<text>    Path to the default '.editorconfig'. A property",
        "                           value from this file is used only when no",
        "                           '.editorconfig' file on the path to the source file",
        "                           specifies that property. Note: up until ktlint 0.46",
        "                           the property value in this file used to override",
        "                           values found in '.editorconfig' files on the path to",
        "                           the source file.",
        "  --baseline=<text>        Defines a baseline file to check against",
        "  -l, --log-level=<value>  Defines the minimum log level (trace, debug, info,",
        "                           warn, error) or none to suppress all logging",
        "  -h, --help               Show this message and exit",
        "",
        "Commands:",
        "  generateEditorConfig     Generate kotlin style section for '.editorconfig'",
        "                           file. Output should be copied manually to the",
        "                           '.editorconfig' file.",
        "  installGitPreCommitHook  Install git hook to automatically check files for",
        "                           style violations on commit",
        "  installGitPrePushHook    Install git hook to automatically check files for",
        "                           style violations before push"
    ],
    "kubeconform": [
        "Usage: kubeconform [OPTION]... [FILE OR FOLDER]...",
        "  -cache string",
        "      cache schemas downloaded via HTTP to this folder",
        "  -debug",
        "      print debug information",
        "  -exit-on-error",
        "      immediately stop execution when the first error is encountered",
        "  -h  show help information",
        "  -ignore-filename-pattern value",
        "      regular expression specifying paths to ignore (can be specified multiple times)",
        "  -ignore-missing-schemas",
        "      skip files with missing schemas instead of failing",
        "  -insecure-skip-tls-verify",
        "      disable verification of the server's SSL certificate. This will make your HTTPS connections insecure",
        "  -kubernetes-version value",
        "      version of Kubernetes to validate against, e.g.: 1.18.0 (default master)",
        "  -n int",
        "      number of goroutines to run concurrently (default 4)",
        "  -output string",
        "      output format - json, junit, pretty, tap, text (default \"text\")",
        "  -reject string",
        "      comma-separated list of kinds or GVKs to reject",
        "  -schema-location value",
        "      override schemas location search path (can be specified multiple times)",
        "  -skip string",
        "      comma-separated list of kinds or GVKs to ignore",
        "  -strict",
        "      disallow additional properties not in schema or duplicated keys",
        "  -summary",
        "      print a summary at the end (ignored for junit output)",
        "  -v  show version information",
        "  -verbose",
        "      print results for all resources (ignored for tap and junit output)",
        ""
    ],
    "kubescape": [
        "Kubescape is a tool for testing Kubernetes security posture. Docs: https://hub.armosec.io/docs",
        "",
        "Usage:",
        "  kubescape [command]",
        "",
        "Examples:",
        "",
        "  # Scan a Kubernetes cluster or YAML files for image vulnerabilities and misconfigurations",
        "  kubescape scan",
        "",
        "  # List supported controls",
        "  kubescape list controls",
        "",
        "  # Download artifacts (air-gapped environment support)",
        "  kubescape download artifacts",
        "",
        "  # View cached configurations",
        "  kubescape config view",
        "",
        "",
        "Available Commands:",
        "  completion    Generate autocompletion script",
        "  config        Handle cached configurations",
        "  download      Download artifacts,attack-tracks,control,controls-inputs,exceptions,framework",
        "  fix           Propose a fix for the misconfiguration found when scanning Kubernetes manifest files",
        "  help          Help about any command",
        "  list          List frameworks/controls will list the supported frameworks and controls",
        "  operator      The operator is used to communicate with the Kubescape Operator within the cluster components.",
        "  patch         Patch container images with vulnerabilities",
        "  prerequisites Check prerequisites for installing Kubescape Operator",
        "  scan          Scan a Kubernetes cluster or YAML files for image vulnerabilities and misconfigurations",
        "  update        Update to latest release version",
        "  vap           Helper commands for managing Validating Admission Policies in a Kubernetes cluster",
        "  version       Get current version",
        "",
        "Flags:",
        "      --cache-dir string      Cache directory [$KS_CACHE_DIR] (default \"/root/.kubescape\")",
        "  -h, --help                  help for kubescape",
        "      --kube-context string   Kube context. Default will use the current-context",
        "  -l, --logger string         Logger level. Supported: debug/info/success/warning/error/fatal [$KS_LOGGER] (default \"info\")",
        "      --server string         Backend discovery server URL",
        "",
        "Use \"kubescape [command] --help\" for more information about a command."
    ],
    "kubeval": [
        "Validate a Kubernetes YAML file against the relevant schema",
        "",
        "Usage:",
        "  kubeval <file> [file...] [flags]",
        "",
        "Flags:",
        "      --additional-schema-locations strings   Comma-seperated list of secondary base URLs used to download schemas",
        "  -n, --default-namespace string              Namespace to assume in resources if no namespace is set in metadata:namespace (default \"default\")",
        "  -d, --directories strings                   A comma-separated list of directories to recursively search for YAML documents",
        "      --exit-on-error                         Immediately stop execution when the first error is encountered",
        "  -f, --filename string                       filename to be displayed when testing manifests read from stdin (default \"stdin\")",
        "      --force-color                           Force colored output even if stdout is not a TTY",
        "  -h, --help                                  help for kubeval",
        "      --ignore-missing-schemas                Skip validation for resource definitions without a schema",
        "      --ignored-filename-patterns strings     An alias for ignored-path-patterns",
        "  -i, --ignored-path-patterns strings         A comma-separated list of regular expressions specifying paths to ignore",
        "      --insecure-skip-tls-verify              If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure",
        "  -v, --kubernetes-version string             Version of Kubernetes to validate against (default \"master\")",
        "      --openshift                             Use OpenShift schemas instead of upstream Kubernetes",
        "  -o, --output string                         The format of the output of this script. Options are: [stdout json tap]",
        "      --quiet                                 Silences any output aside from the direct results",
        "      --reject-kinds strings                  Comma-separated list of case-sensitive kinds to prohibit validating against schemas",
        "  -s, --schema-location string                Base URL used to download schemas. Can also be specified with the environment variable KUBEVAL_SCHEMA_LOCATION.",
        "      --skip-kinds strings                    Comma-separated list of case-sensitive kinds to skip when validating against schemas",
        "      --strict                                Disallow additional properties not in schema",
        "      --version                               version for kubeval"
    ],
    "lightning-flow-scanner": [
        "Find and fix potential bugs in Salesforce flows.",
        "",
        "USAGE",
        "  $ sf flow scan [--json] [--flags-dir <value>] [-d <value> | --files",
        "    <value>...] [-c <value>] [-f error|warning|note|never] [-r] [-u <value>]",
        "",
        "FLAGS",
        "  -c, --config=<value>          Path to configuration file",
        "  -d, --directory=<value>       Directory to scan for flows",
        "  -f, --failon=<option>         [default: error] Threshold failure level (error,",
        "                                warning, note, or never) defining when the",
        "                                command return code will be 1",
        "                                <options: error|warning|note|never>",
        "  -r, --retrieve                Force retrieve Flows from org at the start of",
        "                                the command",
        "  -u, --targetusername=<value>  Retrieve the latest metadata from the target",
        "                                before the scan.",
        "      --files=<value>...        List of source flows paths to scan",
        "",
        "GLOBAL FLAGS",
        "  --flags-dir=<value>  Import flag values from a directory.",
        "  --json               Format output as json.",
        ""
    ],
    "lintr": [
        "No documentation for \u2018lintr\u2019 in specified packages and libraries:",
        "you could try \u2018??lintr\u2019"
    ],
    "ls-lint": [
        "Usage of /node-deps/node_modules/@ls-lint/ls-lint/bin/ls-lint-linux-amd64:",
        "  -config value",
        "      ls-lint config file path(s)",
        "  -debug",
        "      write debug informations to stdout",
        "  -version",
        "      prints version information for ls-lint",
        "  -warn",
        "      write lint errors to stdout instead of stderr (exit 0)",
        "  -workdir string",
        "      change working directory before executing the given subcommand (default \".\")"
    ],
    "luacheck": [
        "Usage: luacheck ([--config <config>] | [--no-config])",
        "       ([--default-config <default_config>] | [--no-default-config])",
        "       [-h] [-g] [-u] [-r] [-a] [-s] [--no-self] [--std <std>] [-c]",
        "       [-d] [-t] [-m] [--max-line-length <length>]",
        "       [--no-max-line-length] [--max-code-line-length <length>]",
        "       [--no-max-code-line-length] [--max-string-line-length <length>]",
        "       [--no-max-string-line-length]",
        "       [--max-comment-line-length <length>]",
        "       [--no-max-comment-line-length]",
        "       [--max-cyclomatic-complexity <complexity>]",
        "       [--no-max-cyclomatic-complexity] [--filename <filename>]",
        "       [-j <jobs>] [--formatter <formatter>] [-q] [--codes] [--ranges]",
        "       [--no-color] [-v] <file> [<file>] ...",
        "       ([--cache [<cache>]] | [--no-cache])",
        "       [--ignore <patt> [<patt>] ...] [--enable <patt> [<patt>] ...]",
        "       [--only <patt> [<patt>] ...] [--operators <patt> [<patt>] ...]",
        "       [--globals [<name>] ...] [--read-globals [<name>] ...]",
        "       [--new-globals [<name>] ...] [--new-read-globals [<name>] ...]",
        "       [--not-globals [<name>] ...]",
        "       [--exclude-files <glob> [<glob>] ...]",
        "       [--include-files <glob> [<glob>] ...]",
        "",
        "luacheck 1.2.0, a linter and a static analyzer for Lua.",
        "",
        "Arguments:",
        "   files                 List of files, directories and rockspecs to check. Pass",
        "                         '-' to check stdin.",
        "",
        "Options for filtering warnings:",
        "   -g, --no-global       Filter out warnings related to global variables.",
        "                         Equivalent to --ignore 1.",
        "   -u, --no-unused       Filter out warnings related to unused variables and",
        "                         values. Equivalent to --ignore [23].",
        "   -r, --no-redefined    Filter out warnings related to redefined variables.",
        "                         Equivalent to --ignore 4.",
        "   -a, --no-unused-args  Filter out warnings related to unused arguments and",
        "                         loop variables. Equivalent to --ignore 21[23].",
        "   -s, --no-unused-secondaries",
        "                         Filter out warnings related to unused variables set",
        "                         together with used ones.",
        "   --no-self             Filter out warnings related to implicit self argument.",
        "   --ignore <patt> [<patt>] ...,",
        "         -i <patt> [<patt>] ...",
        "                         Filter out warnings matching these patterns.",
        "                         If a pattern contains slash, part before slash matches",
        "                         warning code and part after it matches name of related",
        "                         variable. Otherwise, if the pattern contains letters or",
        "                         underscore, it matches name of related variable.",
        "                         Otherwise, the pattern matches warning code.",
        "   --enable <patt> [<patt>] ...,",
        "         -e <patt> [<patt>] ...",
        "                         Do not filter out warnings matching these patterns.",
        "   --only <patt> [<patt>] ...,",
        "       -o <patt> [<patt>] ...",
        "                         Filter out warnings not matching these patterns.",
        "   --operators <patt> [<patt>] ...",
        "                         Allow compound operators matching patterns",
        "",
        "Options for configuring allowed globals:",
        "   --std <std>           Set standard globals, default is max. <std> can be one",
        "                         of:",
        "                            max - union of globals of Lua 5.1, Lua 5.2, Lua 5.3",
        "                            and LuaJIT 2.x;",
        "                            min - intersection of globals of Lua 5.1, Lua 5.2,",
        "                            Lua 5.3 and LuaJIT 2.x;",
        "                            lua51 - globals of Lua 5.1 without deprecated ones;",
        "                            lua51c - globals of Lua 5.1;",
        "                            lua52 - globals of Lua 5.2;",
        "                            lua52c - globals of Lua 5.2 with LUA_COMPAT_ALL;",
        "                            lua53 - globals of Lua 5.3;",
        "                            lua53c - globals of Lua 5.3 with LUA_COMPAT_5_2;",
        "                            lua54 - globals of Lua 5.4;",
        "                            lua54c - globals of Lua 5.4 with LUA_COMPAT_5_3;",
        "                            luajit - globals of LuaJIT 2.x;",
        "                            ngx_lua - globals of Openresty lua-nginx-module",
        "                            0.10.10, including standard LuaJIT 2.x globals;",
        "                            love - globals added by L\u00d6VE;",
        "                            minetest - globals added by minetest;",
        "                            playdate - globals added by the Playdate SDK;",
        "                            busted - globals added by Busted 2.0, by default",
        "                            added for files ending with _spec.lua within spec,",
        "                            test, and tests subdirectories;",
        "                            rockspec - globals allowed in rockspecs, by default",
        "                            added for files ending with .rockspec;",
        "                            luacheckrc - globals allowed in Luacheck configs, by",
        "                            default added for files ending with .luacheckrc;",
        "                            none - no standard globals.",
        "",
        "                         Sets can be combined using '+'. Extra sets can be",
        "                         defined in config by adding to `stds` global in config.",
        "   -c, --compat          Equivalent to --std max.",
        "   --globals [<name>] ...",
        "                         Add custom global variables (e.g. foo) or fields (e.g.",
        "                         foo.bar) on top of standard ones.",
        "   --read-globals [<name>] ...",
        "                         Add read-only global variables or fields.",
        "   --new-globals [<name>] ...",
        "                         Set custom global variables or fields. Removes custom",
        "                         globals added previously.",
        "   --new-read-globals [<name>] ...",
        "                         Set read-only global variables or fields. Removes",
        "                         read-only globals added previously.",
        "   --not-globals [<name>] ...",
        "                         Remove custom and standard global variables or fields.",
        "   -d, --allow-defined   Allow defining globals implicitly by setting them.",
        "   -t, --allow-defined-top",
        "                         Allow defining globals implicitly by setting them in",
        "                         the top level scope.",
        "   -m, --module          Limit visibility of implicitly defined globals to their",
        "                         files.",
        "",
        "Options for configuring line length limits:",
        "   --max-line-length <length>",
        "                         Set maximum allowed line length (default: 120).",
        "   --no-max-line-length  Do not limit line length.",
        "   --max-code-line-length <length>",
        "                         Set maximum allowed length for lines ending with code",
        "                         (default: 120).",
        "   --no-max-code-line-length",
        "                         Do not limit code line length.",
        "   --max-string-line-length <length>",
        "                         Set maximum allowed length for lines within a string",
        "                         (default: 120).",
        "   --no-max-string-line-length",
        "                         Do not limit string line length.",
        "   --max-comment-line-length <length>",
        "                         Set maximum allowed length for comment lines (default:",
        "                         120).",
        "   --no-max-comment-line-length",
        "                         Do not limit comment line length.",
        "",
        "Configuration file options:",
        "   --config <config>     Path to configuration file. (default: .luacheckrc)",
        "   --no-config           Do not look up configuration file.",
        "   --default-config <default_config>",
        "                         Path to configuration file to use if --[no-]config is",
        "                         not used and project-specific .luacheckrc is not found.",
        "                         (default: /root/.config/luacheck/.luacheckrc)",
        "   --no-default-config   Do not use default configuration file.",
        "",
        "File filtering options:",
        "   --exclude-files <glob> [<glob>] ...",
        "                         Do not check files matching these globbing patterns.",
        "   --include-files <glob> [<glob>] ...",
        "                         Do not check files not matching these globbing",
        "                         patterns.",
        "",
        "Performance optimization options:",
        "   --cache [<cache>]     Path to cache directory. (default:",
        "                         /root/.cache/luacheck)",
        "   --no-cache            Do not use cache.",
        "       -j <jobs>,        Check <jobs> files in parallel (default: 1).",
        "   --jobs <jobs>         Warning: LuaLanes not found, parallel checking",
        "                         disabled.",
        "",
        "Output formatting options:",
        "   --formatter <formatter>",
        "                         Use custom formatter. <formatter> must be a module name",
        "                         or one of:",
        "                            TAP - Test Anything Protocol formatter;",
        "                            JUnit - JUnit XML formatter;",
        "                            visual_studio - MSBuild/Visual Studio aware",
        "                            formatter;",
        "                            plain - simple warning-per-line formatter;",
        "                            default - standard formatter.",
        "   -q, --quiet           Suppress output for files without warnings.",
        "                         -qq: Suppress output of warnings.",
        "                         -qqq: Only print total number of warnings and errors.",
        "   --codes               Show warning codes.",
        "   --ranges              Show ranges of columns related to warnings.",
        "   --no-color            Do not color output.",
        "",
        "Other options:",
        "   -h, --help            Show this help message and exit.",
        "   --max-cyclomatic-complexity <complexity>",
        "                         Set maximum cyclomatic complexity for functions.",
        "   --no-max-cyclomatic-complexity",
        "                         Do not limit function cyclomatic complexity (default).",
        "   --filename <filename> Use another filename in output and for selecting",
        "                         configuration overrides.",
        "   -v, --version         Show version info and exit.",
        "",
        "Links:",
        "",
        "   Luacheck on GitHub: https://github.com/lunarmodules/luacheck",
        "   Luacheck documentation: https://luacheck.readthedocs.org"
    ],
    "lychee": [
        "A fast, async link checker",
        "",
        "Finds broken URLs and mail addresses inside Markdown, HTML, `reStructuredText`, websites and more!",
        "",
        "Usage: lychee [OPTIONS] <inputs>...",
        "",
        "Arguments:",
        "  <inputs>...",
        "          The inputs (where to get links to check from). These can be: files (e.g. `README.md`), file globs (e.g. `\"~/git/*/README.md\"`), remote URLs (e.g. `https://example.com/README.md`) or standard input (`-`). NOTE: Use `--` to separate inputs from options that allow multiple arguments",
        "",
        "Options:",
        "  -c, --config <CONFIG_FILE>",
        "          Configuration file to use",
        "",
        "          [default: lychee.toml]",
        "",
        "  -v, --verbose...",
        "          Set verbosity level; more output per occurrence (e.g. `-v` or `-vv`)",
        "",
        "  -q, --quiet...",
        "          Less output per occurrence (e.g. `-q` or `-qq`)",
        "",
        "  -n, --no-progress",
        "          Do not show progress bar.",
        "          This is recommended for non-interactive shells (e.g. for continuous integration)",
        "",
        "      --cache",
        "          Use request cache stored on disk at `.lycheecache`",
        "",
        "      --max-cache-age <MAX_CACHE_AGE>",
        "          Discard all cached requests older than this duration",
        "",
        "          [default: 1d]",
        "",
        "      --cache-exclude-status <CACHE_EXCLUDE_STATUS>",
        "          A list of status codes that will be ignored from the cache",
        "",
        "          The following accept range syntax is supported: [start]..[=]end|code. Some valid",
        "          examples are:",
        "",
        "          - 429",
        "          - 500..=599",
        "          - 500..",
        "",
        "          Use \"lychee --cache-exclude-status '429, 500..502' <inputs>...\" to provide a comma- separated",
        "          list of excluded status codes. This example will not cache results with a status code of 429, 500,",
        "          501 and 502.",
        "",
        "          [default: ]",
        "",
        "      --dump",
        "          Don't perform any link checking. Instead, dump all the links extracted from inputs that would be checked",
        "",
        "      --dump-inputs",
        "          Don't perform any link extraction and checking. Instead, dump all input sources from which links would be collected",
        "",
        "      --archive <ARCHIVE>",
        "          Specify the use of a specific web archive. Can be used in combination with `--suggest`",
        "",
        "          [possible values: wayback]",
        "",
        "      --suggest",
        "          Suggest link replacements for broken links, using a web archive. The web archive can be specified with `--archive`",
        "",
        "  -m, --max-redirects <MAX_REDIRECTS>",
        "          Maximum number of allowed redirects",
        "",
        "          [default: 5]",
        "",
        "      --max-retries <MAX_RETRIES>",
        "          Maximum number of retries per request",
        "",
        "          [default: 3]",
        "",
        "      --max-concurrency <MAX_CONCURRENCY>",
        "          Maximum number of concurrent network requests",
        "",
        "          [default: 128]",
        "",
        "  -T, --threads <THREADS>",
        "          Number of threads to utilize. Defaults to number of cores available to the system",
        "",
        "  -u, --user-agent <USER_AGENT>",
        "          User agent",
        "",
        "          [default: lychee/0.18.0]",
        "",
        "  -i, --insecure",
        "          Proceed for server connections considered insecure (invalid TLS)",
        "",
        "  -s, --scheme <SCHEME>",
        "          Only test links with the given schemes (e.g. https). Omit to check links with any other scheme. At the moment, we support http, https, file, and mailto",
        "",
        "      --offline",
        "          Only check local files and block network requests",
        "",
        "      --include <INCLUDE>",
        "          URLs to check (supports regex). Has preference over all excludes",
        "",
        "      --exclude <EXCLUDE>",
        "          Exclude URLs and mail addresses from checking (supports regex)",
        "",
        "      --exclude-file <EXCLUDE_FILE>",
        "          Deprecated; use `--exclude-path` instead",
        "",
        "      --exclude-path <EXCLUDE_PATH>",
        "          Exclude file path from getting checked",
        "",
        "  -E, --exclude-all-private",
        "          Exclude all private IPs from checking.",
        "          Equivalent to `--exclude-private --exclude-link-local --exclude-loopback`",
        "",
        "      --exclude-private",
        "          Exclude private IP address ranges from checking",
        "",
        "      --exclude-link-local",
        "          Exclude link-local IP address range from checking",
        "",
        "      --exclude-loopback",
        "          Exclude loopback IP address range and localhost from checking",
        "",
        "      --exclude-mail",
        "          Exclude all mail addresses from checking (deprecated; excluded by default)",
        "",
        "      --include-mail",
        "          Also check email addresses",
        "",
        "      --remap <REMAP>",
        "          Remap URI matching pattern to different URI",
        "",
        "      --fallback-extensions <FALLBACK_EXTENSIONS>",
        "          Test the specified file extensions for URIs when checking files locally.",
        "          Multiple extensions can be separated by commas. Extensions will be checked in",
        "          order of appearance.",
        "",
        "          Example: --fallback-extensions html,htm,php,asp,aspx,jsp,cgi",
        "",
        "      --header <HEADER>",
        "          Custom request header",
        "",
        "  -a, --accept <ACCEPT>",
        "          A List of accepted status codes for valid links",
        "",
        "          The following accept range syntax is supported: [start]..[=]end|code. Some valid",
        "          examples are:",
        "",
        "          - 200..=204",
        "          - 200..204",
        "          - ..=204",
        "          - ..204",
        "          - 200",
        "",
        "          Use \"lychee --accept '200..=204, 429, 500' <inputs>...\" to provide a comma-",
        "          separated list of accepted status codes. This example will accept 200, 201,",
        "          202, 203, 204, 429, and 500 as valid status codes.",
        "",
        "          [default: 100..=103,200..=299]",
        "",
        "      --include-fragments",
        "          Enable the checking of fragments in links",
        "",
        "  -t, --timeout <TIMEOUT>",
        "          Website timeout in seconds from connect to response finished",
        "",
        "          [default: 20]",
        "",
        "  -r, --retry-wait-time <RETRY_WAIT_TIME>",
        "          Minimum wait time in seconds between retries of failed requests",
        "",
        "          [default: 1]",
        "",
        "  -X, --method <METHOD>",
        "          Request method",
        "",
        "          [default: get]",
        "",
        "  -b, --base <BASE>",
        "          Base URL or website root directory to check relative URLs e.g. <https://example.com> or `/path/to/public`",
        "",
        "      --root-dir <ROOT_DIR>",
        "          Root path to use when checking absolute local links, must be an absolute path",
        "",
        "      --basic-auth <BASIC_AUTH>",
        "          Basic authentication support. E.g. `http://example.com username:password`",
        "",
        "      --github-token <GITHUB_TOKEN>",
        "          GitHub API token to use when checking github.com links, to avoid rate limiting",
        "",
        "          [env: GITHUB_TOKEN]",
        "",
        "      --skip-missing",
        "          Skip missing input files (default is to error if they don't exist)",
        "",
        "      --no-ignore",
        "          Do not skip files that would otherwise be ignored by '.gitignore', '.ignore', or the global ignore file",
        "",
        "      --hidden",
        "          Do not skip hidden directories and files",
        "",
        "      --include-verbatim",
        "          Find links in verbatim sections like `pre`- and `code` blocks",
        "",
        "      --glob-ignore-case",
        "          Ignore case when expanding filesystem path glob inputs",
        "",
        "  -o, --output <OUTPUT>",
        "          Output file of status report",
        "",
        "      --mode <MODE>",
        "          Set the output display mode. Determines how results are presented in the terminal",
        "",
        "          [default: color]",
        "          [possible values: plain, color, emoji]",
        "",
        "  -f, --format <FORMAT>",
        "          Output format of final status report",
        "",
        "          [default: compact]",
        "          [possible values: compact, detailed, json, markdown, raw]",
        "",
        "      --require-https",
        "          When HTTPS is available, treat HTTP links as errors",
        "",
        "      --cookie-jar <COOKIE_JAR>",
        "          Tell lychee to read cookies from the given file. Cookies will be stored in the cookie jar and sent with requests. New cookies will be stored in the cookie jar and existing cookies will be updated",
        "",
        "  -h, --help",
        "          Print help (see a summary with '-h')",
        "",
        "  -V, --version",
        "          Print version"
    ],
    "markdown-link-check": [
        "Usage: markdown-link-check [options] [filenamesOrUrls...]",
        "",
        "Options:",
        "  -V, --version           output the version number",
        "  -p, --progress          show progress bar",
        "  -c, --config [config]   apply a config file (JSON), holding e.g. url specific",
        "                          header configuration",
        "  -q, --quiet             displays errors only",
        "  -v, --verbose           displays detailed error information",
        "  -i --ignore <paths>     ignore input paths including an ignore path",
        "  -a, --alive <code>      comma separated list of HTTP codes to be considered",
        "                          as alive",
        "  -r, --retry             retry after the duration indicated in 'retry-after'",
        "                          header when HTTP code is 429",
        "  --projectBaseUrl <url>  the URL to use for {{BASEURL}} replacement",
        "  -h, --help              display help for command"
    ],
    "markdown-table-formatter": [
        "markdown-table-formatter [options]",
        "",
        "  -c, --check              Check only (exits 1 if wrongly formatted markdown tables are found)",
        "  -p, --columnpadding Int  Override table columns padding number of spaces",
        "  -h, --help               Show help",
        "  -v, --version            Show version",
        "  -z, --verbose            Verbose mode"
    ],
    "markdownlint": [
        "Usage: markdownlint [options] [files|directories|globs...]",
        "",
        "MarkdownLint Command Line Interface",
        "",
        "Arguments:",
        "  files|directories|globs                    files, directories, and/or globs to lint",
        "",
        "Options:",
        "  -V, --version                              output the version number",
        "  -c, --config <configFile>                  configuration file (JSON, JSONC, JS, YAML, or TOML)",
        "  --configPointer <pointer>                  JSON Pointer to object within configuration file (default: \"\")",
        "  -d, --dot                                  include files/folders with a dot (for example `.github`)",
        "  -f, --fix                                  fix basic errors (does not work with STDIN)",
        "  -i, --ignore <file|directory|glob>         file(s) to ignore/exclude (default: [])",
        "  -j, --json                                 write issues in json format",
        "  -o, --output <outputFile>                  write issues to file (no console)",
        "  -p, --ignore-path <file>                   path to file with ignore pattern(s)",
        "  -q, --quiet                                do not write issues to STDOUT",
        "  -r, --rules <file|directory|glob|package>  include custom rule files (default: [])",
        "  -s, --stdin                                read from STDIN (does not work with files)",
        "  --enable <rules...>                        Enable certain rules, e.g. --enable MD013 MD041 --",
        "  --disable <rules...>                       Disable certain rules, e.g. --disable MD013 MD041 --",
        "  -h, --help                                 display help for command"
    ],
    "misspell": [
        "Usage of misspell:",
        "  -debug",
        "      Debug matching, very slow",
        "  -error",
        "      Exit with 2 if misspelling found",
        "  -f string",
        "      'csv', 'sqlite3' or custom Golang template for output",
        "  -i string",
        "      ignore the following corrections, comma separated",
        "  -j int",
        "      Number of workers, 0 = number of CPUs",
        "  -legal",
        "      Show legal information and exit",
        "  -locale string",
        "      Correct spellings using locale perferances for US or UK.  Default is to use a neutral variety of English.  Setting locale to US will correct the British spelling of 'colour' to 'color'",
        "  -o string",
        "      output file or [stderr|stdout|] (default \"stdout\")",
        "  -q  Do not emit misspelling output",
        "  -source string",
        "      Source mode: auto=guess, go=golang source, text=plain or markdown-like text (default \"auto\")",
        "  -v  Show version and exit",
        "  -w  Overwrite file with corrections (default is just to display)"
    ],
    "mypy": [
        "usage: mypy [-h] [-v] [-V] [more options; see below]",
        "            [-m MODULE] [-p PACKAGE] [-c PROGRAM_TEXT] [files ...]",
        "",
        "Mypy is a program that will type check your Python code.",
        "",
        "Pass in any files or folders you want to type check. Mypy will",
        "recursively traverse any provided folders to find .py files:",
        "",
        "    $ mypy my_program.py my_src_folder",
        "",
        "For more information on getting started, see:",
        "",
        "- https://mypy.readthedocs.io/en/stable/getting_started.html",
        "",
        "For more details on both running mypy and using the flags below, see:",
        "",
        "- https://mypy.readthedocs.io/en/stable/running_mypy.html",
        "- https://mypy.readthedocs.io/en/stable/command_line.html",
        "",
        "You can also use a config file to configure mypy instead of using",
        "command line flags. For more details, see:",
        "",
        "- https://mypy.readthedocs.io/en/stable/config_file.html",
        "",
        "options:",
        "  --enable-incomplete-feature {InlineTypedDict,PreciseTupleTypes}",
        "                            Enable support of incomplete/experimental features",
        "                            for early preview",
        "",
        "Optional arguments:",
        "  -h, --help                Show this help message and exit",
        "  -v, --verbose             More verbose messages",
        "  -V, --version             Show program's version number and exit",
        "  -O FORMAT, --output FORMAT",
        "                            Set a custom output format",
        "",
        "Config file:",
        "  Use a config file instead of command line arguments. This is useful if you",
        "  are using many flags or want to set different options per each module.",
        "",
        "  --config-file CONFIG_FILE",
        "                            Configuration file, must have a [mypy] section",
        "                            (defaults to mypy.ini, .mypy.ini, pyproject.toml,",
        "                            setup.cfg)",
        "  --warn-unused-configs     Warn about unused '[mypy-<pattern>]' or",
        "                            '[[tool.mypy.overrides]]' config sections",
        "                            (inverse: --no-warn-unused-configs)",
        "",
        "Import discovery:",
        "  Configure how imports are discovered and followed.",
        "",
        "  --no-namespace-packages   Disable support for namespace packages (PEP 420,",
        "                            __init__.py-less) (inverse: --namespace-packages)",
        "  --ignore-missing-imports  Silently ignore imports of missing modules",
        "  --follow-untyped-imports  Typecheck modules without stubs or py.typed marker",
        "  --follow-imports {normal,silent,skip,error}",
        "                            How to treat imports (default normal)",
        "  --python-executable EXECUTABLE",
        "                            Python executable used for finding PEP 561",
        "                            compliant installed packages and stubs",
        "  --no-site-packages        Do not search for installed PEP 561 compliant",
        "                            packages",
        "  --no-silence-site-packages",
        "                            Do not silence errors in PEP 561 compliant",
        "                            installed packages",
        "  --junit-format {global,per_file}",
        "                            If --junit-xml is set, specifies format. global:",
        "                            single test with all errors; per_file: one test",
        "                            entry per file with failures",
        "",
        "Platform configuration:",
        "  Type check code assuming it will be run under certain runtime conditions.",
        "  By default, mypy assumes your code will be run using the same operating",
        "  system and Python version you are using to run mypy itself.",
        "",
        "  --python-version x.y      Type check code assuming it will be running on",
        "                            Python x.y",
        "  --platform PLATFORM       Type check special-cased code for the given OS",
        "                            platform (defaults to sys.platform)",
        "  --always-true NAME        Additional variable to be considered True (may be",
        "                            repeated)",
        "  --always-false NAME       Additional variable to be considered False (may be",
        "                            repeated)",
        "",
        "Disallow dynamic typing:",
        "  Disallow the use of the dynamic 'Any' type under certain conditions.",
        "",
        "  --disallow-any-expr       Disallow all expressions that have type Any",
        "  --disallow-any-decorated  Disallow functions that have Any in their",
        "                            signature after decorator transformation",
        "  --disallow-any-explicit   Disallow explicit Any in type positions",
        "  --disallow-any-generics   Disallow usage of generic types that do not",
        "                            specify explicit type parameters (inverse:",
        "                            --allow-any-generics)",
        "  --disallow-any-unimported",
        "                            Disallow Any types resulting from unfollowed",
        "                            imports (inverse: --allow-any-unimported)",
        "  --disallow-subclassing-any",
        "                            Disallow subclassing values of type 'Any' when",
        "                            defining classes (inverse: --allow-subclassing-",
        "                            any)",
        "",
        "Untyped definitions and calls:",
        "  Configure how untyped definitions and calls are handled. Note: by default,",
        "  mypy ignores any untyped function definitions and assumes any calls to",
        "  such functions have a return type of 'Any'.",
        "",
        "  --disallow-untyped-calls  Disallow calling functions without type",
        "                            annotations from functions with type annotations",
        "                            (inverse: --allow-untyped-calls)",
        "  --untyped-calls-exclude MODULE",
        "                            Disable --disallow-untyped-calls for",
        "                            functions/methods coming from specific package,",
        "                            module, or class",
        "  --disallow-untyped-defs   Disallow defining functions without type",
        "                            annotations or with incomplete type annotations",
        "                            (inverse: --allow-untyped-defs)",
        "  --disallow-incomplete-defs",
        "                            Disallow defining functions with incomplete type",
        "                            annotations (while still allowing entirely",
        "                            unannotated definitions) (inverse: --allow-",
        "                            incomplete-defs)",
        "  --check-untyped-defs      Type check the interior of functions without type",
        "                            annotations (inverse: --no-check-untyped-defs)",
        "  --disallow-untyped-decorators",
        "                            Disallow decorating typed functions with untyped",
        "                            decorators (inverse: --allow-untyped-decorators)",
        "",
        "None and Optional handling:",
        "  Adjust how values of type 'None' are handled. For more context on how mypy",
        "  handles values of type 'None', see:",
        "  https://mypy.readthedocs.io/en/stable/kinds_of_types.html#no-strict-",
        "  optional",
        "",
        "  --implicit-optional       Assume arguments with default values of None are",
        "                            Optional (inverse: --no-implicit-optional)",
        "  --no-strict-optional      Disable strict Optional checks (inverse: --strict-",
        "                            optional)",
        "",
        "Configuring warnings:",
        "  Detect code that is sound but redundant or problematic.",
        "",
        "  --warn-redundant-casts    Warn about casting an expression to its inferred",
        "                            type (inverse: --no-warn-redundant-casts)",
        "  --warn-unused-ignores     Warn about unneeded '# type: ignore' comments",
        "                            (inverse: --no-warn-unused-ignores)",
        "  --no-warn-no-return       Do not warn about functions that end without",
        "                            returning (inverse: --warn-no-return)",
        "  --warn-return-any         Warn about returning values of type Any from non-",
        "                            Any typed functions (inverse: --no-warn-return-",
        "                            any)",
        "  --warn-unreachable        Warn about statements or expressions inferred to",
        "                            be unreachable (inverse: --no-warn-unreachable)",
        "  --report-deprecated-as-note",
        "                            Report importing or using deprecated features as",
        "                            notes instead of errors (inverse: --no-report-",
        "                            deprecated-as-note)",
        "",
        "Miscellaneous strictness flags:",
        "  --allow-untyped-globals   Suppress toplevel errors caused by missing",
        "                            annotations (inverse: --disallow-untyped-globals)",
        "  --allow-redefinition      Allow unconditional variable redefinition with a",
        "                            new type (inverse: --disallow-redefinition)",
        "  --no-implicit-reexport    Treat imports as private unless aliased (inverse:",
        "                            --implicit-reexport)",
        "  --strict-equality         Prohibit equality, identity, and container checks",
        "                            for non-overlapping types (inverse: --no-strict-",
        "                            equality)",
        "  --strict-bytes            Disable treating bytearray and memoryview as",
        "                            subtypes of bytes (inverse: --no-strict-bytes)",
        "  --extra-checks            Enable additional checks that are technically",
        "                            correct but may be impractical in real code. For",
        "                            example, this prohibits partial overlap in",
        "                            TypedDict updates, and makes arguments prepended",
        "                            via Concatenate positional-only (inverse: --no-",
        "                            extra-checks)",
        "  --strict                  Strict mode; enables the following flags: --warn-",
        "                            unused-configs, --disallow-any-generics,",
        "                            --disallow-subclassing-any, --disallow-untyped-",
        "                            calls, --disallow-untyped-defs, --disallow-",
        "                            incomplete-defs, --check-untyped-defs, --disallow-",
        "                            untyped-decorators, --warn-redundant-casts,",
        "                            --warn-unused-ignores, --warn-return-any, --no-",
        "                            implicit-reexport, --strict-equality, --extra-",
        "                            checks",
        "  --disable-error-code NAME",
        "                            Disable a specific error code",
        "  --enable-error-code NAME  Enable a specific error code",
        "",
        "Configuring error messages:",
        "  Adjust the amount of detail shown in error messages.",
        "",
        "  --show-error-context      Precede errors with \"note:\" messages explaining",
        "                            context (inverse: --hide-error-context)",
        "  --show-column-numbers     Show column numbers in error messages (inverse:",
        "                            --hide-column-numbers)",
        "  --show-error-end          Show end line/end column numbers in error",
        "                            messages. This implies --show-column-numbers",
        "                            (inverse: --hide-error-end)",
        "  --hide-error-codes        Hide error codes in error messages (inverse:",
        "                            --show-error-codes)",
        "  --show-error-code-links   Show links to error code documentation (inverse:",
        "                            --hide-error-code-links)",
        "  --pretty                  Use visually nicer output in error messages: Use",
        "                            soft word wrap, show source code snippets, and",
        "                            show error location markers (inverse: --no-pretty)",
        "  --no-color-output         Do not colorize error messages (inverse: --color-",
        "                            output)",
        "  --no-error-summary        Do not show error stats summary (inverse: --error-",
        "                            summary)",
        "  --show-absolute-path      Show absolute paths to files (inverse: --hide-",
        "                            absolute-path)",
        "",
        "Incremental mode:",
        "  Adjust how mypy incrementally type checks and caches modules. Mypy caches",
        "  type information about modules into a cache to let you speed up future",
        "  invocations of mypy. Also see mypy's daemon mode:",
        "  mypy.readthedocs.io/en/stable/mypy_daemon.html#mypy-daemon",
        "",
        "  --no-incremental          Disable module cache (inverse: --incremental)",
        "  --cache-dir DIR           Store module cache info in the given folder in",
        "                            incremental mode (defaults to '.mypy_cache')",
        "  --sqlite-cache            Use a sqlite database to store the cache (inverse:",
        "                            --no-sqlite-cache)",
        "  --cache-fine-grained      Include fine-grained dependency information in the",
        "                            cache for the mypy daemon",
        "  --skip-version-check      Allow using cache written by older mypy version",
        "  --skip-cache-mtime-checks",
        "                            Skip cache internal consistency checks based on",
        "                            mtime",
        "",
        "Advanced options:",
        "  Debug and customize mypy internals.",
        "",
        "  --pdb                     Invoke pdb on fatal error",
        "  --show-traceback, --tb    Show traceback on fatal error",
        "  --raise-exceptions        Raise exception on fatal error",
        "  --custom-typing-module MODULE",
        "                            Use a custom typing module",
        "  --old-type-inference      Disable new experimental type inference algorithm",
        "  --custom-typeshed-dir DIR",
        "                            Use the custom typeshed in DIR",
        "  --warn-incomplete-stub    Warn if missing type annotation in typeshed, only",
        "                            relevant with --disallow-untyped-defs or",
        "                            --disallow-incomplete-defs enabled (inverse: --no-",
        "                            warn-incomplete-stub)",
        "  --shadow-file SOURCE_FILE SHADOW_FILE",
        "                            When encountering SOURCE_FILE, read and type check",
        "                            the contents of SHADOW_FILE instead.",
        "",
        "Report generation:",
        "  Generate a report in the specified format.",
        "",
        "  --any-exprs-report DIR",
        "  --cobertura-xml-report DIR",
        "  --html-report DIR",
        "  --linecount-report DIR",
        "  --linecoverage-report DIR",
        "  --lineprecision-report DIR",
        "  --txt-report DIR",
        "  --xml-report DIR",
        "  --xslt-html-report DIR",
        "  --xslt-txt-report DIR",
        "",
        "Miscellaneous:",
        "  --junit-xml JUNIT_XML     Write junit.xml to the given file",
        "  --find-occurrences CLASS.MEMBER",
        "                            Print out all usages of a class member",
        "                            (experimental)",
        "  --scripts-are-modules     Script x becomes module x instead of __main__",
        "  --install-types           Install detected missing library stub packages",
        "                            using pip (inverse: --no-install-types)",
        "  --non-interactive         Install stubs without asking for confirmation and",
        "                            hide errors, with --install-types (inverse:",
        "                            --interactive)",
        "",
        "Running code:",
        "  Specify the code you want to type check. For more details, see",
        "  mypy.readthedocs.io/en/stable/running_mypy.html#running-mypy",
        "",
        "  --explicit-package-bases  Use current directory and MYPYPATH to determine",
        "                            module names of files passed (inverse: --no-",
        "                            explicit-package-bases)",
        "  --exclude PATTERN         Regular expression to match file names, directory",
        "                            names or paths which mypy should ignore while",
        "                            recursively discovering files to check, e.g.",
        "                            --exclude '/setup\\.py$'. May be specified more",
        "                            than once, eg. --exclude a --exclude b",
        "  -m MODULE, --module MODULE",
        "                            Type-check module; can repeat for more modules",
        "  -p PACKAGE, --package PACKAGE",
        "                            Type-check package recursively; can be repeated",
        "  -c PROGRAM_TEXT, --command PROGRAM_TEXT",
        "                            Type-check program passed in as string",
        "  files                     Type-check given files or directories",
        "",
        "Environment variables:",
        "  Define MYPYPATH for additional module search path entries.",
        "  Define MYPY_CACHE_DIR to override configuration cache_dir path."
    ],
    "npm-groovy-lint": [
        "npm-groovy-lint [options]",
        "",
        "  --ext [String]               Specify Groovy file extensions",
        "  -s, --source String          Source text to lint (if no path/files arguments)",
        "  --sourcefilepath String      Full path of the file whose content is sent in source argument",
        "  --parse                      Try to parse the source code with GroovyShell and return errors (use argument --no-parse if you want to deactivate)",
        "  -c, --config String          Custom path to directory containing GroovyLint config file.",
        " Default: Found groovylintrc.js/json/yml/package.json config file, or default npm-groovy-lint config if not defined.",
        "Note: command-line arguments have priority on config file properties - default: /",
        "  --format                     Format source code",
        "  --fix                        Automatically fix problems when possible",
        "  -x, --fixrules String        Option for --fix argument: List of rule identifiers to fix (if not specified, all available fixes will be applied) - default: all",
        "  -i, --ignorepattern String   Comma-separated list of Ant-style file patterns specifying files that must be ignored. Default: none",
        "  -r, --rulesets String        RuleSet file(s) to use for linting. If it is a directory, all rulesets will be used. RuleSet file definition: http://codenarc.github.io/CodeNarc/codenarc-creating-ruleset.html. If not specified, npm-groovy-script default one will be used. Can also be a list of rule identifiers with parameters",
        "  --rulesetsoverridetype String  If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended - either: replaceConfig or appendConfig - default: replaceConfig",
        "  -o, --output String          Output format (txt,json,sarif,html,xml), or path to a file with one of these extensions - default: txt",
        "  -l, --loglevel String        Log level (error,warning,info) - either: error, warning, or info - default: info",
        "  --verbose                    More outputs in console, including performed fixes",
        "  --failon String              Defines the error level where CLI will fail (return code = 1). error,warning,info or none. Every failure level includes the more critical ones. - either: error, warning, info, or none - default: info",
        "  --failonerror                (Deprecated) Fails if at least one error is found",
        "  --failonwarning              (Deprecated) Fails if at least one warning is found",
        "  --failoninfo                 (Deprecated) Fails if at least one error is found",
        "  --codenarcargs               Use core CodeNarc arguments (all npm-groovy-lint arguments will be ignored). Doc: http://codenarc.github.io/CodeNarc/codenarc-command-line.html",
        "  --noserver                   For better performances, npm-groovy-lint runs a local server to eep CodeNarc alive instead of loading java/groovy at each call. If you don't want that, send this argument",
        "  --serverhost String          If use of CodeNarc server, host where is the CodeNarc server (default: localhost) - default: http://localhost",
        "  --serverport String          If use of CodeNarc server, port of the CodeNarc server (default: 7484) - default: 7484",
        "  -j, --javaexecutable String  If you do not want to use default java executable to run CodeNarcServer, you can override it - default: java",
        "  --javaoptions String         Override java options - default: -Xms256m,-Xmx2048m",
        "  --killserver                 Terminate the CodeNarcServer if running",
        "  --nolintafter                Do not lint again after format and fix options (useful for client calling Npm Groovy Lint)",
        "  --returnrules                Return rule descriptions and url if this argument is set",
        "  --insight                    npm-groovy-lint collects anonymous usage statistics using package https://www.npmjs.com/package/insight. If you want to enable them, use --insight option",
        "  -h, --help                   Show help (npm-groovy-lint -help OPTIONNAME to see option detail)",
        "  -v, --version                Show version",
        "  -p, --path path::String      (DEPRECATED) Directory containing the files to lint (default: current directory) - default: .",
        "  -f, --files String           (DEPRECATED) Comma-separated list of Ant-style file patterns specifying files that must be included"
    ],
    "npm-package-json-lint": [
        "",
        "  Configurable linter for package.json files.",
        "",
        "  Usage",
        "    $ npmPkgJsonLint <patterns>",
        "",
        "  Options",
        "    --quiet, -q Report errors only",
        "    --noConfigFiles, -ncf Disables use of .npmpackagejsonlintrc.json files, npmpackagejsonlint.config.js files, and npmpackagejsonlint object in package.json file.",
        "    --configFile, -c File path of .npmpackagejsonlintrc.json",
        "    --ignorePath, -i Path to a file containing patterns that describe files to ignore. The path can be absolute or relative to process.cwd(). By default, npm-package-json-lint looks for .npmpackagejsonlintignore in process.cwd().",
        "    --maxWarnings, -mw Maximum number of warnings that can be detected before an error is thrown.",
        "    --allowEmptyTargets Do not throw an error when a list of targets is empty.",
        "",
        "  Examples",
        "    $ npmPkgJsonLint --version",
        "    $ npmPkgJsonLint .",
        "    $ npmPkgJsonLint ./packages",
        "    $ npmPkgJsonLint ./package1 ./package2",
        "    $ npmPkgJsonLint -c ./config/.npmpackagejsonlintrc.json .",
        "    $ npmPkgJsonLint --configFile ./config/npmpackagejsonlint.config.json .",
        "    $ npmPkgJsonLint -q .",
        "    $ npmPkgJsonLint --quiet ./packages",
        "    $ npmPkgJsonLint . --ignorePath .gitignore",
        "    $ npmPkgJsonLint . -i .gitignore",
        "    $ npmPkgJsonLint . --maxWarnings 10",
        "    $ npmPkgJsonLint . -mw 10",
        ""
    ],
    "perlcritic": [
        "Usage:",
        "      perlcritic [-12345 | --brutal | --cruel | --harsh | --stern | --gentle]",
        "                 [--severity number | name] [{-p | --profile} file | --noprofile]",
        "                 [--top [ number ]] [--theme expression] [--include pattern]",
        "                 [--exclude pattern] [{-s | --single-policy} pattern]",
        "                 [--only | --noonly] [--profile-strictness {warn|fatal|quiet}]",
        "                 [--force | --noforce] [--statistics] [--statistics-only]",
        "                 [--count | -C] [--verbose {number | format}] [--allow-unsafe]",
        "                 [--color | --nocolor] [--pager pager] [--quiet]",
        "                 [--color-severity-highest color_specification]",
        "                 [--color-severity-high color_specification]",
        "                 [--color-severity-medium color_specification]",
        "                 [--color-severity-low color_specification]",
        "                 [--color-severity-lowest color_specification]",
        "                 [--files-with-violations | -l]",
        "                 [--files-without-violations | -L]",
        "                 [--program-extensions file_name_extension]",
        "                 {FILE | DIRECTORY | STDIN}",
        "",
        "      perlcritic --profile-proto",
        "",
        "      perlcritic { --list | --list-enabled | --list-themes | --doc pattern [...] }",
        "",
        "      perlcritic { --help | --options | --man | --version }",
        ""
    ],
    "php": [
        "Usage: php [options] [-f] <file> [--] [args...]",
        "   php [options] -r <code> [--] [args...]",
        "   php [options] [-B <begin_code>] -R <code> [-E <end_code>] [--] [args...]",
        "   php [options] [-B <begin_code>] -F <file> [-E <end_code>] [--] [args...]",
        "   php [options] -S <addr>:<port> [-t docroot] [router]",
        "   php [options] -- [args...]",
        "   php [options] -a",
        "",
        "  -a               Run as interactive shell",
        "  -c <path>|<file> Look for php.ini file in this directory",
        "  -n               No configuration (ini) files will be used",
        "  -d foo[=bar]     Define INI entry foo with value 'bar'",
        "  -e               Generate extended information for debugger/profiler",
        "  -f <file>        Parse and execute <file>.",
        "  -h               This help",
        "  -i               PHP information",
        "  -l               Syntax check only (lint)",
        "  -m               Show compiled in modules",
        "  -r <code>        Run PHP <code> without using script tags <?..?>",
        "  -B <begin_code>  Run PHP <begin_code> before processing input lines",
        "  -R <code>        Run PHP <code> for every input line",
        "  -F <file>        Parse and execute <file> for every input line",
        "  -E <end_code>    Run PHP <end_code> after processing all input lines",
        "  -H               Hide any passed arguments from external tools.",
        "  -S <addr>:<port> Run with built-in web server.",
        "  -t <docroot>     Specify document root <docroot> for built-in web server.",
        "  -s               Output HTML syntax highlighted source.",
        "  -v               Version number",
        "  -w               Output source with stripped comments and whitespace.",
        "  -z <file>        Load Zend extension <file>.",
        "",
        "  args...          Arguments passed to script. Use -- args when first argument",
        "                   starts with - or script is read from stdin",
        "",
        "  --ini            Show configuration file names",
        "",
        "  --rf <name>      Show information about function <name>.",
        "  --rc <name>      Show information about class <name>.",
        "  --re <name>      Show information about extension <name>.",
        "  --rz <name>      Show information about Zend extension <name>.",
        "  --ri <name>      Show configuration for extension <name>.",
        ""
    ],
    "php-cs-fixer": [
        "PHP needs to be a minimum version of PHP 7.4.0 and maximum version of PHP 8.3.*.",
        "Current PHP version: 8.4.4.",
        "Ignoring environment requirements because `PHP_CS_FIXER_IGNORE_ENV` is set. Execution may be unstable.",
        "Description:",
        "  List commands",
        "",
        "Usage:",
        "  list [options] [--] [<namespace>]",
        "",
        "Arguments:",
        "  namespace             The namespace name",
        "",
        "Options:",
        "      --raw             To output raw command list",
        "      --format=FORMAT   The output format (txt, xml, json, or md) [default: \"txt\"]",
        "      --short           To skip describing commands' arguments",
        "  -h, --help            Display help for the given command. When no command is given display help for the list command",
        "      --silent          Do not output any message",
        "  -q, --quiet           Only errors are displayed. All other output is suppressed",
        "  -V, --version         Display this application version",
        "      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output",
        "  -n, --no-interaction  Do not ask any interactive question",
        "  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug",
        "",
        "Help:",
        "  The list command lists all commands:",
        "",
        "    /root/.composer/vendor/bin/php-cs-fixer list",
        "",
        "  You can also display the commands for a specific namespace:",
        "",
        "    /root/.composer/vendor/bin/php-cs-fixer list test",
        "",
        "  You can also output the information in other formats by using the --format option:",
        "",
        "    /root/.composer/vendor/bin/php-cs-fixer list --format=xml",
        "",
        "  It's also possible to get raw list of commands (useful for embedding command runner):",
        "",
        "    /root/.composer/vendor/bin/php-cs-fixer list --raw"
    ],
    "phpcs": [
        "",
        "",
        "Usage:",
        "  phpcs [options] <file|directory>",
        "",
        "Scan targets:",
        "  <file|directory>               One or more files and/or directories to check,",
        "                                 space separated.",
        "  -                              Check STDIN instead of local files and",
        "                                 directories.",
        "  --stdin-path=<stdinPath>       If processing STDIN, the file path that STDIN",
        "                                 will be processed as.",
        "  --file-list=<fileList>         Check the files and/or directories which are",
        "                                 defined in the file to which the path is",
        "                                 provided (one per line).",
        "  --filter=<filter>              Check based on a predefined file filter. Use",
        "                                 either the \"GitModified\" or \"GitStaged\" filter,",
        "                                 or specify the path to a custom filter class.",
        "  --ignore=<patterns>            Ignore files based on a comma-separated list of",
        "                                 patterns matching files and/or directories.",
        "  --extensions=<extensions>      Check files with the specified file extensions",
        "                                 (comma-separated list). Defaults to",
        "                                 php,inc/php,js,css.",
        "                                 The type of the file can be specified using:",
        "                                 ext/type; e.g. module/php,es/js.",
        "  -l                             Check local directory only, no recursion.",
        "",
        "Rule Selection Options:",
        "  --standard=<standard>          The name of, or the path to, the coding",
        "                                 standard to use. Can be a comma-separated list",
        "                                 specifying multiple standards. If no standard",
        "                                 is specified, PHP_CodeSniffer will look for a",
        "                                 [.]phpcs.xml[.dist] custom ruleset file in the",
        "                                 current directory and those above it.",
        "  --sniffs=<sniffs>              A comma-separated list of sniff codes to limit",
        "                                 the scan to. All sniffs must be part of the",
        "                                 standard in use.",
        "  --exclude=<sniffs>             A comma-separated list of sniff codes to",
        "                                 exclude from the scan. All sniffs must be part",
        "                                 of the standard in use.",
        "",
        "  -i                             Show a list of installed coding standards.",
        "  -e                             Explain a standard by showing the names of all",
        "                                 the sniffs it includes.",
        "  --generator=<generator>        Show documentation for a standard. Use either",
        "                                 the \"HTML\", \"Markdown\" or \"Text\" generator.",
        "",
        "Run Options:",
        "  -a                             Run in interactive mode, pausing after each",
        "                                 file.",
        "  --bootstrap=<bootstrap>        Run the specified file(s) before processing",
        "                                 begins. A list of files can be provided,",
        "                                 separated by commas.",
        "  --cache[=<cacheFile>]          Cache results between runs. Optionally,",
        "                                 <cacheFile> can be provided to use a specific",
        "                                 file for caching. Otherwise, a temporary file",
        "                                 is used.",
        "  --no-cache                     Do not cache results between runs (default).",
        "  --parallel=<processes>         The number of files to be checked",
        "                                 simultaneously. Defaults to 1 (no parallel",
        "                                 processing).",
        "                                 If enabled, this option only takes effect if",
        "                                 the PHP PCNTL (Process Control) extension is",
        "                                 available.",
        "",
        "  -d <key[=value]>               Set the [key] php.ini value to [value] or set",
        "                                 to [true] if value is omitted.",
        "                                 Note: only php.ini settings which can be",
        "                                 changed at runtime are supported.",
        "",
        "Reporting Options:",
        "  --report=<report>              Print either the \"full\", \"xml\", \"checkstyle\",",
        "                                 \"csv\", \"json\", \"junit\", \"emacs\", \"source\",",
        "                                 \"summary\", \"diff\", \"svnblame\", \"gitblame\",",
        "                                 \"hgblame\", \"notifysend\" or \"performance\" report",
        "                                 or specify the path to a custom report class.",
        "                                 By default, the \"full\" report is displayed.",
        "  --report-file=<reportFile>     Write the report to the specified file path.",
        "  --report-<report>=<reportFile> Write the report specified in <report> to the",
        "                                 specified file path.",
        "  --report-width=<reportWidth>   How many columns wide screen reports should be.",
        "                                 Set to \"auto\" to use current screen width,",
        "                                 where supported.",
        "  --basepath=<basepath>          Strip a path from the front of file paths",
        "                                 inside reports.",
        "",
        "  -w                             Include both warnings and errors (default).",
        "  -n                             Do not include warnings. Shortcut for",
        "                                 \"--warning-severity=0\".",
        "  --severity=<severity>          The minimum severity required to display an",
        "                                 error or warning. Defaults to 5.",
        "  --error-severity=<severity>    The minimum severity required to display an",
        "                                 error. Defaults to 5.",
        "  --warning-severity=<severity>  The minimum severity required to display a",
        "                                 warning. Defaults to 5.",
        "",
        "  -s                             Show sniff error codes in all reports.",
        "  --ignore-annotations           Ignore all \"phpcs:...\" annotations in code",
        "                                 comments.",
        "  --colors                       Use colors in screen output.",
        "  --no-colors                    Do not use colors in screen output (default).",
        "  -p                             Show progress of the run.",
        "  -q                             Quiet mode; disables progress and verbose",
        "                                 output.",
        "  -m                             Stop error messages from being recorded. This",
        "                                 saves a lot of memory but stops many reports",
        "                                 from being used.",
        "",
        "Configuration Options:",
        "  --encoding=<encoding>          The encoding of the files being checked.",
        "                                 Defaults to \"utf-8\".",
        "  --tab-width=<tabWidth>         The number of spaces each tab represents.",
        "",
        "  Default values for a selection of options can be stored in a user-specific",
        "  CodeSniffer.conf configuration file.",
        "  This applies to the following options: \"default_standard\", \"report_format\",",
        "  \"tab_width\", \"encoding\", \"severity\", \"error_severity\", \"warning_severity\",",
        "  \"show_warnings\", \"report_width\", \"show_progress\", \"quiet\", \"colors\", \"cache\",",
        "  \"parallel\".",
        "  --config-show                  Show the configuration options which are",
        "                                 currently stored in the applicable",
        "                                 CodeSniffer.conf file.",
        "  --config-set <key> <value>     Save a configuration option to the",
        "                                 CodeSniffer.conf file.",
        "  --config-delete <key>          Delete a configuration option from the",
        "                                 CodeSniffer.conf file.",
        "  --runtime-set <key> <value>    Set a configuration option to be applied to the",
        "                                 current scan run only.",
        "",
        "Miscellaneous Options:",
        "  -h, -?, --help                 Print this help message.",
        "  --version                      Print version information.",
        "  -v                             Verbose output: Print processed files.",
        "  -vv                            Verbose output: Print ruleset and token output.",
        "  -vvv                           Verbose output: Print sniff processing",
        "                                 information.",
        ""
    ],
    "phplint": [
        "Description:",
        "  Files syntax check only",
        "",
        "Usage:",
        "  lint [options] [--] [<path>...]",
        "",
        "Arguments:",
        "  path                               Path to file or directory to lint (default: working directory)",
        "",
        "Options:",
        "      --exclude=EXCLUDE              Path to file or directory to exclude from linting (multiple values allowed)",
        "      --extensions=EXTENSIONS        Check only files with selected extensions (multiple values allowed)",
        "  -j, --jobs=JOBS                    Number of paralleled jobs to run",
        "  -c, --configuration=CONFIGURATION  Read configuration from config file [default: \".phplint.yml\"]",
        "      --no-configuration             Ignore default configuration file (.phplint.yml)",
        "      --cache=CACHE                  Path to the cache directory",
        "      --no-cache                     Ignore cached data",
        "  -p, --progress=PROGRESS            Show the progress output",
        "      --no-progress                  Hide the progress output",
        "  -o, --output=OUTPUT                Generate an output to the specified path (default: standard output)",
        "      --format=FORMAT                Format of requested reports (multiple values allowed)",
        "  -w, --warning                      Also show warnings",
        "      --memory-limit=MEMORY-LIMIT    Memory limit for analysis",
        "      --ignore-exit-code             Ignore exit codes so there are no \"failure\" exit code even when no files processed",
        "      --bootstrap=BOOTSTRAP          A PHP script that is included before the linter run",
        "  -h, --help                         Display help for the given command. When no command is given display help for the lint command",
        "      --silent                       Do not output any message",
        "  -q, --quiet                        Only errors are displayed. All other output is suppressed",
        "  -V, --version                      Display this application version",
        "      --ansi|--no-ansi               Force (or disable --no-ansi) ANSI output",
        "  -n, --no-interaction               Do not ask any interactive question",
        "  -v|vv|vvv, --verbose               Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
    ],
    "phpstan": [
        "Description:",
        "  Analyses source code",
        "",
        "Usage:",
        "  analyse [options] [--] [<paths>...]",
        "  analyze",
        "",
        "Arguments:",
        "  paths                                        Paths with source code to run analysis on",
        "",
        "Options:",
        "  -c, --configuration=CONFIGURATION            Path to project configuration file",
        "  -l, --level=LEVEL                            Level of rule options - the higher the stricter",
        "      --no-progress                            Do not show progress bar, only results",
        "      --debug                                  Show debug information - which file is analysed, do not catch internal errors",
        "  -a, --autoload-file=AUTOLOAD-FILE            Project's additional autoload file path",
        "      --error-format=ERROR-FORMAT              Format in which to print the result of the analysis",
        "  -b, --generate-baseline[=GENERATE-BASELINE]  Path to a file where the baseline should be saved [default: false]",
        "      --allow-empty-baseline                   Do not error out when the generated baseline is empty",
        "      --memory-limit=MEMORY-LIMIT              Memory limit for analysis",
        "      --xdebug                                 Allow running with Xdebug for debugging purposes",
        "      --fix                                    Launch PHPStan Pro",
        "      --watch                                  Launch PHPStan Pro",
        "      --pro                                    Launch PHPStan Pro",
        "      --fail-without-result-cache              Return non-zero exit code when result cache is not used",
        "  -h, --help                                   Display help for the given command. When no command is given display help for the analyse command",
        "  -q, --quiet                                  Do not output any message",
        "  -V, --version                                Display this application version",
        "      --ansi|--no-ansi                         Force (or disable --no-ansi) ANSI output",
        "  -n, --no-interaction                         Do not ask any interactive question",
        "  -v|vv|vvv, --verbose                         Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
    ],
    "pmd": [
        "Usage: pmd [-hV] [COMMAND]",
        "  -h, --help      Show this help message and exit.",
        "  -V, --version   Print version information and exit.",
        "Commands:",
        "  check                The PMD standard source code analyzer",
        "  cpd                  Copy/Paste Detector - find duplicate code",
        "  designer             The PMD visual rule designer",
        "  cpd-gui              GUI for the Copy/Paste Detector",
        "                         Warning: May not support the full CPD feature set",
        "  ast-dump             Dumps the AST of parsing source code",
        "  generate-completion  Generate bash/zsh completion script for pmd.",
        "Exit Codes:",
        "  0   Successful analysis, no violations found",
        "  1   An unexpected error occurred during execution",
        "  2   Usage error, please refer to the command help",
        "  4   Successful analysis, at least 1 violation found"
    ],
    "powershell": [
        "",
        "Usage: pwsh[.exe] [-Login] [[-File] <filePath> [args]]",
        "                  [-Command { - | <script-block> [-args <arg-array>]",
        "                                | <string> [<CommandParameters>] } ]",
        "                  [-CommandWithArgs <string> [<CommandParameters>]",
        "                  [-ConfigurationName <string>] [-ConfigurationFile <filePath>]",
        "                  [-CustomPipeName <string>] [-EncodedCommand <Base64EncodedCommand>]",
        "                  [-ExecutionPolicy <ExecutionPolicy>] [-InputFormat {Text | XML}]",
        "                  [-Interactive] [-MTA] [-NoExit] [-NoLogo] [-NonInteractive] [-NoProfile]",
        "                  [-NoProfileLoadTime] [-OutputFormat {Text | XML}]",
        "                  [-SettingsFile <filePath>] [-SSHServerMode] [-STA]",
        "                  [-Version] [-WindowStyle <style>]",
        "                  [-WorkingDirectory <directoryPath>]",
        "",
        "       pwsh[.exe] -h | -Help | -? | /?",
        "",
        "PowerShell Online Help https://aka.ms/powershell-docs",
        "",
        "All parameters are case-insensitive.",
        "",
        "-File | -f",
        "",
        "    If the value of File is \"-\", the command text is read from standard input.",
        "    Running \"pwsh -File -\" without redirected standard input starts a regular",
        "    session. This is the same as not specifying the File parameter at all.",
        "",
        "    This is the default parameter if no parameters are present but values are",
        "    present in the command line. The specified script runs in the local scope",
        "    (\"dot-sourced\"), so that the functions and variables that the script",
        "    creates are available in the current session. Enter the script file path",
        "    and any parameters. File must be the last parameter in the command, because",
        "    all characters typed after the File parameter name are interpreted as the",
        "    script file path followed by the script parameters.",
        "",
        "    Typically, the switch parameters of a script are either included or",
        "    omitted. For example, the following command uses the All parameter of the",
        "    Get-Script.ps1 script file: \"-File .\\Get-Script.ps1 -All\"",
        "",
        "    In rare cases, you might need to provide a BOOLEAN value for a switch",
        "    parameter. To provide a BOOLEAN value for a switch parameter in the value",
        "    of the FILE parameter, Use the parameter normally followed immediately by a",
        "    colon and the boolean value, such as the following:",
        "    \"-File .\\Get-Script.ps1 -All:$False\".",
        "",
        "    Parameters passed to the script are passed as literal strings, after",
        "    interpretation by the current shell. For example, if you are in cmd.exe and",
        "    want to pass an environment variable value, you would use the cmd.exe",
        "    syntax: \"pwsh -File .  est.ps1 -TestParam %windir%\"",
        "",
        "    In contrast, running \"pwsh -File .  est.ps1 -TestParam $env:windir\" in",
        "    cmd.exe results in the script receiving the literal string \"$env:windir\"",
        "    because it has no special meaning to the current cmd.exe shell. The",
        "    \"$env:windir\" style of environment variable reference can be used inside a",
        "    Command parameter, since there it is interpreted as PowerShell code.",
        "",
        "    Similarly, if you want to execute the same command from a Batch script,",
        "    you would use \"%~dp0\" instead of \".\\\" or \"$PSScriptRoot\" to represent the current",
        "    execution directory: \"pwsh -File %~dp0test.ps1 -TestParam %windir%\". If you",
        "    instead used \".  est.ps1\", PowerShell would throw an error because it cannot",
        "    find the literal path \".  est.ps1\".",
        "",
        "    When the script file invoked terminates with an exit command, the process",
        "    exit code is set to the numeric argument used with the exit command. With",
        "    normal termination, the exit code is always 0.",
        "",
        "    Similar to -Command, when a script-terminating error occurs, the exit code",
        "    is set to 1. However, unlike with -Command, when the execution is",
        "    interrupted with Ctrl-C the exit code is 0.",
        "",
        "-Command | -c",
        "",
        "    Executes the specified commands (and any parameters) as though they were",
        "    typed at the PowerShell command prompt, and then exits, unless the NoExit",
        "    parameter is specified.",
        "",
        "    The value of Command can be \"-\", a script block, or a string. If the value",
        "    of Command is \"-\", the command text is read from standard input.",
        "",
        "    The Command parameter only accepts a script block for execution when it can",
        "    recognize the value passed to Command as a ScriptBlock type. This is only",
        "    possible when running pwsh from another PowerShell host. The ScriptBlock",
        "    type may be contained in an existing variable, returned from an expression,",
        "    or parsed by the PowerShell host as a literal script block enclosed in",
        "    curly braces \"{}\", before being passed to pwsh.",
        "",
        "        pwsh -Command {Get-WinEvent -LogName security}",
        "",
        "    In cmd.exe, there is no such thing as a script block (or ScriptBlock type),",
        "    so the value passed to Command will always be a string. You can write a",
        "    script block inside the string, but instead of being executed it will",
        "    behave exactly as though you typed it at a typical PowerShell prompt,",
        "    printing the contents of the script block back out to you.",
        "",
        "    A string passed to Command is still executed as PowerShell script, so the",
        "    script block curly braces are often not required in the first place when",
        "    running from cmd.exe. To execute an inline script block defined inside a",
        "    string, the call operator \"&\" can be used:",
        "",
        "        pwsh -Command \"& {Get-WinEvent -LogName security}\"",
        "",
        "    If the value of Command is a string, Command must be the last parameter for",
        "    pwsh, because all arguments following it are interpreted as part of the",
        "    command to execute.",
        "",
        "    When called from within an existing PowerShell session, the results are",
        "    returned to the parent shell as deserialized XML objects, not live objects.",
        "    For other shells, the results are returned as strings.",
        "",
        "    If the value of Command is \"-\", the command text is read from standard",
        "    input. You must redirect standard input when using the Command parameter",
        "    with standard input. For example:",
        "",
        "        @'",
        "        \"in\"",
        "",
        "        \"hi\" |",
        "        % { \"$_ there\" }",
        "",
        "        \"out\"",
        "        '@ | powershell -NoProfile -Command -",
        "",
        "    This example produces the following output:",
        "",
        "        in",
        "        hi there",
        "        out",
        "",
        "    The process exit code is determined by status of the last (executed)",
        "    command within the script block. The exit code is 0 when $? is $true or 1",
        "    when $? is $false. If the last command is an external program or a",
        "    PowerShell script that explicitly sets an exit code other than 0 or 1, that",
        "    exit code is converted to 1 for process exit code. To preserve the specific",
        "    exit code, add exit $LASTEXITCODE to your command string or script block.",
        "",
        "    Similarly, the value 1 is returned when a script-terminating",
        "    (runspace-terminating) error, such as a throw or -ErrorAction Stop, occurs",
        "    or when execution is interrupted with Ctrl-C.",
        "",
        "-CommandWithArgs | -cwa",
        "",
        "    [Experimental]",
        "    Executes a PowerShell command with arguments.  Unlike `-Command`, this",
        "    parameter populates the `$args built-in variable which can be used by the",
        "    command.",
        "",
        "    The first string is the command and subsequent strings delimited by whitespace",
        "    are the arguments.",
        "",
        "    For example:",
        "",
        "        pwsh -CommandWithArgs '$args | % { \"arg: $_\" }' arg1 arg2",
        "",
        "    This example produces the following output:",
        "",
        "        arg: arg1",
        "        arg: arg2",
        "",
        "-ConfigurationName | -config",
        "",
        "    Specifies a configuration endpoint in which PowerShell is run. This can be",
        "    any endpoint registered on the local machine including the default",
        "    PowerShell remoting endpoints or a custom endpoint having specific user",
        "    role capabilities.",
        "",
        "    Example: \"pwsh -ConfigurationName AdminRoles\"",
        "",
        "-ConfigurationFile",
        "",
        "    Specifies a session configuration (.pssc) file path. The configuration",
        "    contained in the configuration file will be applied to the PowerShell",
        "    session.",
        "",
        "    Example: \"pwsh -ConfigurationFile \"C:\\ProgramData\\PowerShell\\MyConfig.pssc\"",
        "",
        "-CustomPipeName",
        "",
        "    Specifies the name to use for an additional IPC server (named pipe) used",
        "    for debugging and other cross-process communication. This offers a",
        "    predictable mechanism for connecting to other PowerShell instances.",
        "    Typically used with the CustomPipeName parameter on \"Enter-PSHostProcess\".",
        "",
        "    This parameter was introduced in PowerShell 6.2.",
        "",
        "    For example:",
        "",
        "        # PowerShell instance 1",
        "        pwsh -CustomPipeName mydebugpipe",
        "        # PowerShell instance 2",
        "        Enter-PSHostProcess -CustomPipeName mydebugpipe",
        "",
        "-EncodedCommand | -e | -ec",
        "",
        "    Accepts a Base64-encoded string version of a command. Use this parameter to",
        "    submit commands to PowerShell that require complex, nested quoting. The",
        "    Base64 representation must be a UTF-16 encoded string.",
        "",
        "    For example:",
        "",
        "        $command = 'dir \"c:\\program files\" '",
        "        $bytes = [System.Text.Encoding]::Unicode.GetBytes($command)",
        "        $encodedCommand = [Convert]::ToBase64String($bytes)",
        "        pwsh -encodedcommand $encodedCommand",
        "",
        "-ExecutionPolicy | -ex | -ep",
        "",
        "    Sets the default execution policy for the current session and saves it in",
        "    the $env:PSExecutionPolicyPreference environment variable. This parameter",
        "    does not change the persistently configured execution policies.",
        "",
        "    This parameter only applies to Windows computers. The",
        "    $env:PSExecutionPolicyPreference environment variable does not exist on",
        "    non-Windows platforms.",
        "",
        "-InputFormat | -inp | -if",
        "",
        "    Describes the format of data sent to PowerShell. Valid values are \"Text\"",
        "    (text strings) or \"XML\" (serialized CLIXML format).",
        "",
        "-Interactive | -i",
        "",
        "    Present an interactive prompt to the user. Inverse for NonInteractive",
        "    parameter.",
        "",
        "-Login | -l",
        "",
        "    On Linux and macOS, starts PowerShell as a login shell, using /bin/sh to",
        "    execute login profiles such as /etc/profile and ~/.profile. On Windows,",
        "    this switch does nothing.",
        "",
        "    [!IMPORTANT] This parameter must come first to start PowerShell as a login",
        "    shell. The parameter is ignored if passed in any other position.",
        "",
        "    To set up pwsh as the login shell on UNIX-like operating systems:",
        "",
        "    - Verify that the full absolute path to pwsh is listed under /etc/shells",
        "",
        "      - This path is usually something like /usr/bin/pwsh on Linux or",
        "        /usr/local/bin/pwsh on macOS",
        "      - With some installation methods, this entry will be added",
        "        automatically at installation time",
        "      - If pwsh is not present in /etc/shells, use an editor to append the",
        "        path to pwsh on the last line. This requires elevated privileges to",
        "        edit.",
        "",
        "    - Use the chsh utility to set your current user's shell to pwsh:",
        "",
        "        chsh -s /usr/bin/pwsh",
        "",
        "    [!WARNING] Setting pwsh as the login shell is currently not supported on",
        "    Windows Subsystem for Linux (WSL), and attempting to set pwsh as the",
        "    login shell there may lead to being unable to start WSL interactively.",
        "",
        "-MTA",
        "",
        "    Start PowerShell using a multi-threaded apartment. This switch is only",
        "    available on Windows.",
        "",
        "-NoExit | -noe",
        "",
        "    Does not exit after running startup commands.",
        "",
        "    Example: \"pwsh -NoExit -Command Get-Date\"",
        "",
        "-NoLogo | -nol",
        "",
        "    Hides the banner text at startup of interactive sessions.",
        "",
        "-NonInteractive | -noni",
        "",
        "    This switch is used to create sessions that shouldn't require user input.",
        "    This is useful for scripts that run in scheduled tasks or CI/CD pipelines.",
        "    Any attempts to use interactive features, like 'Read-Host' or confirmation",
        "    prompts, result in statement terminating errors rather than hanging.",
        "",
        "-NoProfile | -nop",
        "",
        "    Does not load the PowerShell profiles.",
        "",
        "-NoProfileLoadTime",
        "",
        "    Hides the PowerShell profile load time text shown at startup when the load",
        "    time exceeds 500 milliseconds.",
        "",
        "-OutputFormat | -o | -of",
        "",
        "    Determines how output from PowerShell is formatted. Valid values are \"Text\"",
        "    (text strings) or \"XML\" (serialized CLIXML format).",
        "",
        "    Example: \"pwsh -o XML -c Get-Date\"",
        "",
        "    When called within a PowerShell session, you get deserialized objects as",
        "    output rather plain strings. When called from other shells, the output is",
        "    string data formatted as CLIXML text.",
        "",
        "-SettingsFile | -settings",
        "",
        "    Overrides the system-wide \"powershell.config.json\" settings file for the",
        "    session. By default, system-wide settings are read from the",
        "    \"powershell.config.json\" in the \"$PSHOME\" directory.",
        "",
        "    Note that these settings are not used by the endpoint specified by the",
        "    \"-ConfigurationName\" argument.",
        "",
        "    Example: \"pwsh -SettingsFile c:\\myproject\\powershell.config.json\"",
        "",
        "-SSHServerMode | -sshs",
        "",
        "    Used in sshd_config for running PowerShell as an SSH subsystem. It is not",
        "    intended or supported for any other use.",
        "",
        "-STA",
        "",
        "    Start PowerShell using a single-threaded apartment. This is the default.",
        "    This switch is only available on Windows.",
        "",
        "-Version | -v",
        "",
        "    Displays the version of PowerShell. Additional parameters are ignored.",
        "",
        "-WindowStyle | -w",
        "",
        "    Sets the window style for the session. Valid values are Normal, Minimized,",
        "    Maximized and Hidden.",
        "",
        "-WorkingDirectory | -wd",
        "",
        "    Sets the initial working directory by executing at startup. Any valid",
        "    PowerShell file path is supported.",
        "",
        "    To start PowerShell in your home directory, use: pwsh -WorkingDirectory ~",
        "",
        "-Help, -?, /?",
        "",
        "    Displays help for pwsh. If you are typing a pwsh command in PowerShell,",
        "    prepend the command parameters with a hyphen (-), not a forward slash (/).",
        ""
    ],
    "powershell_formatter": [
        "",
        "Usage: pwsh[.exe] [-Login] [[-File] <filePath> [args]]",
        "                  [-Command { - | <script-block> [-args <arg-array>]",
        "                                | <string> [<CommandParameters>] } ]",
        "                  [-CommandWithArgs <string> [<CommandParameters>]",
        "                  [-ConfigurationName <string>] [-ConfigurationFile <filePath>]",
        "                  [-CustomPipeName <string>] [-EncodedCommand <Base64EncodedCommand>]",
        "                  [-ExecutionPolicy <ExecutionPolicy>] [-InputFormat {Text | XML}]",
        "                  [-Interactive] [-MTA] [-NoExit] [-NoLogo] [-NonInteractive] [-NoProfile]",
        "                  [-NoProfileLoadTime] [-OutputFormat {Text | XML}]",
        "                  [-SettingsFile <filePath>] [-SSHServerMode] [-STA]",
        "                  [-Version] [-WindowStyle <style>]",
        "                  [-WorkingDirectory <directoryPath>]",
        "",
        "       pwsh[.exe] -h | -Help | -? | /?",
        "",
        "PowerShell Online Help https://aka.ms/powershell-docs",
        "",
        "All parameters are case-insensitive.",
        "",
        "-File | -f",
        "",
        "    If the value of File is \"-\", the command text is read from standard input.",
        "    Running \"pwsh -File -\" without redirected standard input starts a regular",
        "    session. This is the same as not specifying the File parameter at all.",
        "",
        "    This is the default parameter if no parameters are present but values are",
        "    present in the command line. The specified script runs in the local scope",
        "    (\"dot-sourced\"), so that the functions and variables that the script",
        "    creates are available in the current session. Enter the script file path",
        "    and any parameters. File must be the last parameter in the command, because",
        "    all characters typed after the File parameter name are interpreted as the",
        "    script file path followed by the script parameters.",
        "",
        "    Typically, the switch parameters of a script are either included or",
        "    omitted. For example, the following command uses the All parameter of the",
        "    Get-Script.ps1 script file: \"-File .\\Get-Script.ps1 -All\"",
        "",
        "    In rare cases, you might need to provide a BOOLEAN value for a switch",
        "    parameter. To provide a BOOLEAN value for a switch parameter in the value",
        "    of the FILE parameter, Use the parameter normally followed immediately by a",
        "    colon and the boolean value, such as the following:",
        "    \"-File .\\Get-Script.ps1 -All:$False\".",
        "",
        "    Parameters passed to the script are passed as literal strings, after",
        "    interpretation by the current shell. For example, if you are in cmd.exe and",
        "    want to pass an environment variable value, you would use the cmd.exe",
        "    syntax: \"pwsh -File .  est.ps1 -TestParam %windir%\"",
        "",
        "    In contrast, running \"pwsh -File .  est.ps1 -TestParam $env:windir\" in",
        "    cmd.exe results in the script receiving the literal string \"$env:windir\"",
        "    because it has no special meaning to the current cmd.exe shell. The",
        "    \"$env:windir\" style of environment variable reference can be used inside a",
        "    Command parameter, since there it is interpreted as PowerShell code.",
        "",
        "    Similarly, if you want to execute the same command from a Batch script,",
        "    you would use \"%~dp0\" instead of \".\\\" or \"$PSScriptRoot\" to represent the current",
        "    execution directory: \"pwsh -File %~dp0test.ps1 -TestParam %windir%\". If you",
        "    instead used \".  est.ps1\", PowerShell would throw an error because it cannot",
        "    find the literal path \".  est.ps1\".",
        "",
        "    When the script file invoked terminates with an exit command, the process",
        "    exit code is set to the numeric argument used with the exit command. With",
        "    normal termination, the exit code is always 0.",
        "",
        "    Similar to -Command, when a script-terminating error occurs, the exit code",
        "    is set to 1. However, unlike with -Command, when the execution is",
        "    interrupted with Ctrl-C the exit code is 0.",
        "",
        "-Command | -c",
        "",
        "    Executes the specified commands (and any parameters) as though they were",
        "    typed at the PowerShell command prompt, and then exits, unless the NoExit",
        "    parameter is specified.",
        "",
        "    The value of Command can be \"-\", a script block, or a string. If the value",
        "    of Command is \"-\", the command text is read from standard input.",
        "",
        "    The Command parameter only accepts a script block for execution when it can",
        "    recognize the value passed to Command as a ScriptBlock type. This is only",
        "    possible when running pwsh from another PowerShell host. The ScriptBlock",
        "    type may be contained in an existing variable, returned from an expression,",
        "    or parsed by the PowerShell host as a literal script block enclosed in",
        "    curly braces \"{}\", before being passed to pwsh.",
        "",
        "        pwsh -Command {Get-WinEvent -LogName security}",
        "",
        "    In cmd.exe, there is no such thing as a script block (or ScriptBlock type),",
        "    so the value passed to Command will always be a string. You can write a",
        "    script block inside the string, but instead of being executed it will",
        "    behave exactly as though you typed it at a typical PowerShell prompt,",
        "    printing the contents of the script block back out to you.",
        "",
        "    A string passed to Command is still executed as PowerShell script, so the",
        "    script block curly braces are often not required in the first place when",
        "    running from cmd.exe. To execute an inline script block defined inside a",
        "    string, the call operator \"&\" can be used:",
        "",
        "        pwsh -Command \"& {Get-WinEvent -LogName security}\"",
        "",
        "    If the value of Command is a string, Command must be the last parameter for",
        "    pwsh, because all arguments following it are interpreted as part of the",
        "    command to execute.",
        "",
        "    When called from within an existing PowerShell session, the results are",
        "    returned to the parent shell as deserialized XML objects, not live objects.",
        "    For other shells, the results are returned as strings.",
        "",
        "    If the value of Command is \"-\", the command text is read from standard",
        "    input. You must redirect standard input when using the Command parameter",
        "    with standard input. For example:",
        "",
        "        @'",
        "        \"in\"",
        "",
        "        \"hi\" |",
        "        % { \"$_ there\" }",
        "",
        "        \"out\"",
        "        '@ | powershell -NoProfile -Command -",
        "",
        "    This example produces the following output:",
        "",
        "        in",
        "        hi there",
        "        out",
        "",
        "    The process exit code is determined by status of the last (executed)",
        "    command within the script block. The exit code is 0 when $? is $true or 1",
        "    when $? is $false. If the last command is an external program or a",
        "    PowerShell script that explicitly sets an exit code other than 0 or 1, that",
        "    exit code is converted to 1 for process exit code. To preserve the specific",
        "    exit code, add exit $LASTEXITCODE to your command string or script block.",
        "",
        "    Similarly, the value 1 is returned when a script-terminating",
        "    (runspace-terminating) error, such as a throw or -ErrorAction Stop, occurs",
        "    or when execution is interrupted with Ctrl-C.",
        "",
        "-CommandWithArgs | -cwa",
        "",
        "    [Experimental]",
        "    Executes a PowerShell command with arguments.  Unlike `-Command`, this",
        "    parameter populates the `$args built-in variable which can be used by the",
        "    command.",
        "",
        "    The first string is the command and subsequent strings delimited by whitespace",
        "    are the arguments.",
        "",
        "    For example:",
        "",
        "        pwsh -CommandWithArgs '$args | % { \"arg: $_\" }' arg1 arg2",
        "",
        "    This example produces the following output:",
        "",
        "        arg: arg1",
        "        arg: arg2",
        "",
        "-ConfigurationName | -config",
        "",
        "    Specifies a configuration endpoint in which PowerShell is run. This can be",
        "    any endpoint registered on the local machine including the default",
        "    PowerShell remoting endpoints or a custom endpoint having specific user",
        "    role capabilities.",
        "",
        "    Example: \"pwsh -ConfigurationName AdminRoles\"",
        "",
        "-ConfigurationFile",
        "",
        "    Specifies a session configuration (.pssc) file path. The configuration",
        "    contained in the configuration file will be applied to the PowerShell",
        "    session.",
        "",
        "    Example: \"pwsh -ConfigurationFile \"C:\\ProgramData\\PowerShell\\MyConfig.pssc\"",
        "",
        "-CustomPipeName",
        "",
        "    Specifies the name to use for an additional IPC server (named pipe) used",
        "    for debugging and other cross-process communication. This offers a",
        "    predictable mechanism for connecting to other PowerShell instances.",
        "    Typically used with the CustomPipeName parameter on \"Enter-PSHostProcess\".",
        "",
        "    This parameter was introduced in PowerShell 6.2.",
        "",
        "    For example:",
        "",
        "        # PowerShell instance 1",
        "        pwsh -CustomPipeName mydebugpipe",
        "        # PowerShell instance 2",
        "        Enter-PSHostProcess -CustomPipeName mydebugpipe",
        "",
        "-EncodedCommand | -e | -ec",
        "",
        "    Accepts a Base64-encoded string version of a command. Use this parameter to",
        "    submit commands to PowerShell that require complex, nested quoting. The",
        "    Base64 representation must be a UTF-16 encoded string.",
        "",
        "    For example:",
        "",
        "        $command = 'dir \"c:\\program files\" '",
        "        $bytes = [System.Text.Encoding]::Unicode.GetBytes($command)",
        "        $encodedCommand = [Convert]::ToBase64String($bytes)",
        "        pwsh -encodedcommand $encodedCommand",
        "",
        "-ExecutionPolicy | -ex | -ep",
        "",
        "    Sets the default execution policy for the current session and saves it in",
        "    the $env:PSExecutionPolicyPreference environment variable. This parameter",
        "    does not change the persistently configured execution policies.",
        "",
        "    This parameter only applies to Windows computers. The",
        "    $env:PSExecutionPolicyPreference environment variable does not exist on",
        "    non-Windows platforms.",
        "",
        "-InputFormat | -inp | -if",
        "",
        "    Describes the format of data sent to PowerShell. Valid values are \"Text\"",
        "    (text strings) or \"XML\" (serialized CLIXML format).",
        "",
        "-Interactive | -i",
        "",
        "    Present an interactive prompt to the user. Inverse for NonInteractive",
        "    parameter.",
        "",
        "-Login | -l",
        "",
        "    On Linux and macOS, starts PowerShell as a login shell, using /bin/sh to",
        "    execute login profiles such as /etc/profile and ~/.profile. On Windows,",
        "    this switch does nothing.",
        "",
        "    [!IMPORTANT] This parameter must come first to start PowerShell as a login",
        "    shell. The parameter is ignored if passed in any other position.",
        "",
        "    To set up pwsh as the login shell on UNIX-like operating systems:",
        "",
        "    - Verify that the full absolute path to pwsh is listed under /etc/shells",
        "",
        "      - This path is usually something like /usr/bin/pwsh on Linux or",
        "        /usr/local/bin/pwsh on macOS",
        "      - With some installation methods, this entry will be added",
        "        automatically at installation time",
        "      - If pwsh is not present in /etc/shells, use an editor to append the",
        "        path to pwsh on the last line. This requires elevated privileges to",
        "        edit.",
        "",
        "    - Use the chsh utility to set your current user's shell to pwsh:",
        "",
        "        chsh -s /usr/bin/pwsh",
        "",
        "    [!WARNING] Setting pwsh as the login shell is currently not supported on",
        "    Windows Subsystem for Linux (WSL), and attempting to set pwsh as the",
        "    login shell there may lead to being unable to start WSL interactively.",
        "",
        "-MTA",
        "",
        "    Start PowerShell using a multi-threaded apartment. This switch is only",
        "    available on Windows.",
        "",
        "-NoExit | -noe",
        "",
        "    Does not exit after running startup commands.",
        "",
        "    Example: \"pwsh -NoExit -Command Get-Date\"",
        "",
        "-NoLogo | -nol",
        "",
        "    Hides the banner text at startup of interactive sessions.",
        "",
        "-NonInteractive | -noni",
        "",
        "    This switch is used to create sessions that shouldn't require user input.",
        "    This is useful for scripts that run in scheduled tasks or CI/CD pipelines.",
        "    Any attempts to use interactive features, like 'Read-Host' or confirmation",
        "    prompts, result in statement terminating errors rather than hanging.",
        "",
        "-NoProfile | -nop",
        "",
        "    Does not load the PowerShell profiles.",
        "",
        "-NoProfileLoadTime",
        "",
        "    Hides the PowerShell profile load time text shown at startup when the load",
        "    time exceeds 500 milliseconds.",
        "",
        "-OutputFormat | -o | -of",
        "",
        "    Determines how output from PowerShell is formatted. Valid values are \"Text\"",
        "    (text strings) or \"XML\" (serialized CLIXML format).",
        "",
        "    Example: \"pwsh -o XML -c Get-Date\"",
        "",
        "    When called within a PowerShell session, you get deserialized objects as",
        "    output rather plain strings. When called from other shells, the output is",
        "    string data formatted as CLIXML text.",
        "",
        "-SettingsFile | -settings",
        "",
        "    Overrides the system-wide \"powershell.config.json\" settings file for the",
        "    session. By default, system-wide settings are read from the",
        "    \"powershell.config.json\" in the \"$PSHOME\" directory.",
        "",
        "    Note that these settings are not used by the endpoint specified by the",
        "    \"-ConfigurationName\" argument.",
        "",
        "    Example: \"pwsh -SettingsFile c:\\myproject\\powershell.config.json\"",
        "",
        "-SSHServerMode | -sshs",
        "",
        "    Used in sshd_config for running PowerShell as an SSH subsystem. It is not",
        "    intended or supported for any other use.",
        "",
        "-STA",
        "",
        "    Start PowerShell using a single-threaded apartment. This is the default.",
        "    This switch is only available on Windows.",
        "",
        "-Version | -v",
        "",
        "    Displays the version of PowerShell. Additional parameters are ignored.",
        "",
        "-WindowStyle | -w",
        "",
        "    Sets the window style for the session. Valid values are Normal, Minimized,",
        "    Maximized and Hidden.",
        "",
        "-WorkingDirectory | -wd",
        "",
        "    Sets the initial working directory by executing at startup. Any valid",
        "    PowerShell file path is supported.",
        "",
        "    To start PowerShell in your home directory, use: pwsh -WorkingDirectory ~",
        "",
        "-Help, -?, /?",
        "",
        "    Displays help for pwsh. If you are typing a pwsh command in PowerShell,",
        "    prepend the command parameters with a hyphen (-), not a forward slash (/).",
        ""
    ],
    "prettier": [
        "Usage: prettier [options] [file/dir/glob ...]",
        "",
        "By default, output is written to stdout.",
        "Stdin is read if it is piped to Prettier and no files are given.",
        "",
        "Output options:",
        "",
        "  -c, --check              Check if the given files are formatted, print a human-friendly summary",
        "                           message and paths to unformatted files (see also --list-different).",
        "  -l, --list-different     Print the names of files that are different from Prettier's formatting (see also --check).",
        "  -w, --write              Edit files in-place. (Beware!)",
        "",
        "Format options:",
        "",
        "  --arrow-parens <always|avoid>",
        "                           Include parentheses around a sole arrow function parameter.",
        "                           Defaults to always.",
        "  --bracket-same-line      Put > of opening tags on the last line instead of on a new line.",
        "                           Defaults to false.",
        "  --no-bracket-spacing     Do not print spaces between brackets.",
        "  --embedded-language-formatting <auto|off>",
        "                           Control how Prettier formats quoted code embedded in the file.",
        "                           Defaults to auto.",
        "  --end-of-line <lf|crlf|cr|auto>",
        "                           Which end of line characters to apply.",
        "                           Defaults to lf.",
        "  --experimental-operator-position <start|end>",
        "                           Where to print operators when binary expressions wrap lines.",
        "                           Defaults to end.",
        "  --no-experimental-ternaries",
        "                           Default behavior of ternaries; keep question marks on the same line as the consequent.",
        "  --html-whitespace-sensitivity <css|strict|ignore>",
        "                           How to handle whitespaces in HTML.",
        "                           Defaults to css.",
        "  --jsx-single-quote       Use single quotes in JSX.",
        "                           Defaults to false.",
        "  --object-wrap <preserve|collapse>",
        "                           How to wrap object literals.",
        "                           Defaults to preserve.",
        "  --parser <flow|babel|babel-flow|babel-ts|typescript|acorn|espree|meriyah|css|less|scss|json|json5|jsonc|json-stringify|graphql|markdown|mdx|vue|yaml|glimmer|html|angular|lwc>",
        "                           Which parser to use.",
        "  --print-width <int>      The line length where Prettier will try wrap.",
        "                           Defaults to 80.",
        "  --prose-wrap <always|never|preserve>",
        "                           How to wrap prose.",
        "                           Defaults to preserve.",
        "  --quote-props <as-needed|consistent|preserve>",
        "                           Change when properties in objects are quoted.",
        "                           Defaults to as-needed.",
        "  --no-semi                Do not print semicolons, except at the beginning of lines which may need them.",
        "  --single-attribute-per-line",
        "                           Enforce single attribute per line in HTML, Vue and JSX.",
        "                           Defaults to false.",
        "  --single-quote           Use single quotes instead of double quotes.",
        "                           Defaults to false.",
        "  --tab-width <int>        Number of spaces per indentation level.",
        "                           Defaults to 2.",
        "  --trailing-comma <all|es5|none>",
        "                           Print trailing commas wherever possible when multi-line.",
        "                           Defaults to all.",
        "  --use-tabs               Indent with tabs instead of spaces.",
        "                           Defaults to false.",
        "  --vue-indent-script-and-style",
        "                           Indent script and style tags in Vue files.",
        "                           Defaults to false.",
        "",
        "Config options:",
        "",
        "  --config <path>          Path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js).",
        "  --no-config              Do not look for a configuration file.",
        "  --config-precedence <cli-override|file-override|prefer-file>",
        "                           Define in which order config files and CLI options should be evaluated.",
        "                           Defaults to cli-override.",
        "  --no-editorconfig        Don't take .editorconfig into account when parsing configuration.",
        "  --find-config-path <path>",
        "                           Find and print the path to a configuration file for the given input file.",
        "  --ignore-path <path>     Path to a file with patterns describing files to ignore.",
        "                           Multiple values are accepted.",
        "                           Defaults to [.gitignore, .prettierignore].",
        "  --plugin <path>          Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",
        "                           Defaults to [].",
        "  --with-node-modules      Process files inside 'node_modules' directory.",
        "",
        "Editor options:",
        "",
        "  --cursor-offset <int>    Print (to stderr) where a cursor at the given position would move to after formatting.",
        "                           Defaults to -1.",
        "  --range-end <int>        Format code ending at a given character offset (exclusive).",
        "                           The range will extend forwards to the end of the selected statement.",
        "                           Defaults to Infinity.",
        "  --range-start <int>      Format code starting at a given character offset.",
        "                           The range will extend backwards to the start of the first line containing the selected statement.",
        "                           Defaults to 0.",
        "",
        "Other options:",
        "",
        "  --cache                  Only format changed files. Cannot use with --stdin-filepath.",
        "                           Defaults to false.",
        "  --cache-location <path>  Path to the cache file.",
        "  --cache-strategy <metadata|content>",
        "                           Strategy for the cache to use for detecting changed files.",
        "  --no-color               Do not colorize error messages.",
        "  --no-error-on-unmatched-pattern",
        "                           Prevent errors when pattern is unmatched.",
        "  --file-info <path>       Extract the following info (as JSON) for a given file path. Reported fields:",
        "                           * ignored (boolean) - true if file path is filtered by --ignore-path",
        "                           * inferredParser (string | null) - name of parser inferred from file path",
        "  -h, --help <flag>        Show CLI usage, or details about the given flag.",
        "                           Example: --help write",
        "  -u, --ignore-unknown     Ignore unknown files.",
        "  --insert-pragma          Insert @format pragma into file's first docblock comment.",
        "                           Defaults to false.",
        "  --log-level <silent|error|warn|log|debug>",
        "                           What level of logs to report.",
        "                           Defaults to log.",
        "  --require-pragma         Require either '@prettier' or '@format' to be present in the file's first docblock comment",
        "                           in order for it to be formatted.",
        "                           Defaults to false.",
        "  --stdin-filepath <path>  Path to the file to pretend that stdin comes from.",
        "  --support-info           Print support information as JSON.",
        "  -v, --version            Print Prettier version.",
        "",
        ""
    ],
    "proselint": [
        "Usage: proselint [OPTIONS] [PATHS]...",
        "",
        "  Create the CLI for proselint, a linter for prose.",
        "",
        "Options:",
        "  -v, --version          Show the version and exit.",
        "  --config PATH          Path to configuration file.",
        "  -d, --debug            Give verbose output.",
        "  -c, --clean            Clear the cache.",
        "  -j, --json             Output as JSON.",
        "  -t, --time             Time on a corpus.",
        "  --demo                 Run over demo file.",
        "  --compact              Shorten output.",
        "  --dump-config          Prints current config.",
        "  --dump-default-config  Prints default config.",
        "  -h, --help             Show this message and exit."
    ],
    "protolint": [
        "Usage of lint:",
        "  -add-reporter value",
        "      Adds a reporter to the list of reporters to use. The format should be 'name of reporter':'Path-To_output_file'",
        "  -auto_disable value",
        "      mode that the command line automatically disable some of the problems. Available auto_disable are \"next\" and \"this\".",
        "  -config_dir_path string",
        "      path/to/the_directory_including_protolint.yaml",
        "  -config_path string",
        "      path/to/protolint.yaml. Note that if both are set, config_dir_path is ignored.",
        "  -fix",
        "      mode that the command line automatically fix some of the problems",
        "  -no-error-on-unmatched-pattern",
        "      exits with 0 when no file is matched",
        "  -output_file string",
        "      path/to/output.txt",
        "  -plugin value",
        "      plugins to provide custom lint rule set. Note that it's necessary to specify it as path format'",
        "  -reporter value",
        "      formatter to output results in the specific format. Available reporters are \"plain\"(default), \"junit\", \"json\", \"sarif\", and \"unix\".",
        "  -v  verbose output that includes parsing process details"
    ],
    "psalm": [
        "Usage:",
        "    psalm [options] [file...]",
        "",
        "Basic configuration:",
        "    -c, --config=psalm.xml",
        "        Path to a psalm.xml configuration file. Run psalm --init to create one.",
        "",
        "    --use-ini-defaults",
        "        Use PHP-provided ini defaults for memory and error display",
        "",
        "    --memory-limit=LIMIT",
        "        Use a specific memory limit. Cannot be combined with --use-ini-defaults",
        "",
        "    --disable-extension=[extension]",
        "        Used to disable certain extensions while Psalm is running.",
        "",
        "    --force-jit",
        "        If set, requires JIT acceleration to be available in order to run Psalm, exiting immediately if it cannot be enabled.",
        "",
        "    --threads=INT",
        "        If greater than one, Psalm will run the scan and analysis on multiple threads, speeding things up.",
        "",
        "    --scan-threads=INT",
        "        If greater than one, Psalm will run the scan on multiple threads, speeding things up (if specified, takes priority over the --threads flag).",
        "",
        "    --no-diff",
        "        Turns off Psalm\u2019s diff mode, checks all files regardless of whether they\u2019ve changed.",
        "",
        "    --php-version=PHP_VERSION",
        "        Explicitly set PHP version to analyse code against.",
        "",
        "    --error-level=ERROR_LEVEL",
        "        Set the error reporting level",
        "",
        "Surfacing issues:",
        "    --show-info[=BOOLEAN]",
        "        Show non-exception parser findings (defaults to false).",
        "",
        "    --show-snippet[=true]",
        "        Show code snippets with errors. Options are 'true' or 'false'",
        "",
        "    --find-dead-code[=auto]",
        "    --find-unused-code[=auto]",
        "        Look for unused code. Options are 'auto' or 'always'. If no value is specified, default is 'auto'",
        "",
        "    --find-unused-psalm-suppress",
        "        Finds all @psalm-suppress annotations that aren\u2019t used",
        "",
        "    --find-references-to=[class|method|property]",
        "        Searches the codebase for references to the given fully-qualified class or method,",
        "        where method is in the format class::methodName",
        "",
        "    --no-suggestions",
        "        Hide suggestions",
        "",
        "    --taint-analysis",
        "        Run Psalm in taint analysis mode \u2013 see https://psalm.dev/docs/security_analysis for more info",
        "",
        "    --dump-taint-graph=OUTPUT_PATH",
        "        Output the taint graph using the DOT language \u2013 requires --taint-analysis",
        "",
        "Issue baselines:",
        "    --set-baseline[=PATH]",
        "        Save all current error level issues to a file, to mark them as info in subsequent runs",
        "",
        "        Add --include-php-versions to also include a list of PHP extension versions",
        "",
        "        Default value is `psalm-baseline.xml`",
        "",
        "    --use-baseline=PATH",
        "        Allows you to use a baseline other than the default baseline provided in your config",
        "",
        "    --ignore-baseline",
        "        Ignore the error baseline",
        "",
        "    --update-baseline",
        "        Update the baseline by removing fixed issues. This will not add new issues to the baseline",
        "",
        "        Add --include-php-versions to also include a list of PHP extension versions",
        "",
        "Plugins:",
        "    --plugin=PATH",
        "        Executes a plugin, an alternative to using the Psalm config",
        "",
        "Output:",
        "    -m, --monochrome",
        "        Enable monochrome output",
        "",
        "    --output-format=console",
        "        Changes the output format.",
        "        Available formats:",
        "            by-issue-level, checkstyle, codeclimate, compact, console, count, emacs,",
        "            github, json, json-summary, junit, phpstorm, pylint, sarif, sonarqube,",
        "            text, xml",
        "",
        "    --no-progress",
        "        Disable the progress indicator",
        "",
        "    --long-progress",
        "        Use a progress indicator suitable for Continuous Integration logs",
        "",
        "    --stats",
        "        Shows a breakdown of Psalm\u2019s ability to infer types in the codebase",
        "",
        "Reports:",
        "    --report=PATH",
        "        The path where to output report file. The output format is based on the file extension.",
        "        (Currently supported formats: \".console\", \".emacs\", \".json\", \".pylint\", \".sarif\", \".sarif.json\", \".txt\",",
        "        \".xml\", \"checkstyle.xml\", \"codeclimate.json\", \"count.txt\", \"junit.xml\",",
        "        \"sonarqube.json\", \"summary.json\")",
        "",
        "    --report-show-info[=BOOLEAN]",
        "        Whether the report should include non-errors in its output (defaults to true)",
        "",
        "Caching:",
        "    --clear-cache",
        "        Clears all cache files that Psalm uses for this specific project",
        "",
        "    --clear-global-cache",
        "        Clears all cache files that Psalm uses for all projects",
        "",
        "    --no-cache",
        "        Runs Psalm without using cache",
        "",
        "    --no-reflection-cache",
        "        Runs Psalm without using cached representations of unchanged classes and files.",
        "        Useful if you want the afterClassLikeVisit plugin hook to run every time you visit a file.",
        "",
        "    --no-file-cache",
        "        Runs Psalm without using caching every single file for later diffing.",
        "        This reduces the space Psalm uses on disk and file I/O.",
        "",
        "Miscellaneous:",
        "    -h, --help",
        "        Display this help message",
        "",
        "    -v, --version",
        "        Display the Psalm version",
        "",
        "    -i, --init [source_dir=src] [level=3]",
        "        Create a psalm config file in the current directory that points to [source_dir]",
        "        at the required level, from 1, most strict, to 8, most permissive.",
        "",
        "    --debug",
        "        Debug information",
        "",
        "    --debug-by-line",
        "        Debug information on a line-by-line level",
        "",
        "    --debug-emitted-issues",
        "        Print a php backtrace to stderr when emitting issues.",
        "",
        "    -r, --root",
        "        If running Psalm globally you\u2019ll need to specify a project root. Defaults to cwd",
        "",
        "    --generate-json-map=PATH",
        "        Generate a map of node references and types in JSON format, saved to the given path.",
        "",
        "    --generate-stubs=PATH",
        "        Generate stubs for the project and dump the file in the given path",
        "",
        "    --shepherd[=endpoint]",
        "        Send analysis statistics to Shepherd (shepherd.dev) or your server.",
        "",
        "    --alter",
        "        Run Psalter",
        "",
        "    --review",
        "        Run the psalm-review tool",
        "",
        "    --language-server",
        "        Run Psalm Language Server"
    ],
    "puppet-lint": [
        "    puppet-lint",
        "",
        "    Basic Command Line Usage:",
        "      puppet-lint [OPTIONS] PATH",
        "",
        "            PATH                         The path to the Puppet manifest.",
        "",
        "    Option:",
        "        --version                    Display the current version.",
        "        --no-config                  Do not load default puppet-lint option files.",
        "    -c, --config FILE                Load puppet-lint options from file.",
        "        --with-context               Show where in the manifest the problem is.",
        "        --with-filename              Display the filename before the warning.",
        "        --fail-on-warnings           Return a non-zero exit status for warnings",
        "        --error-level LEVEL          The level of error to return (warning, error or all).",
        "        --show-ignored               Show problems that have been ignored by control comments",
        "        --relative                   Compare module layout relative to the module root",
        "    -l, --load FILE                  Load a file containing custom puppet-lint checks.",
        "        --load-from-puppet MODULEPATH",
        "                                     Load plugins from the given Puppet module path.",
        "    -f, --fix                        Attempt to automatically fix errors",
        "        --log-format FORMAT          Change the log format.",
        "                                     Overrides --with-filename.",
        "                                     The following placeholders can be used:",
        "                                     %{filename} - Filename without path.",
        "                                     %{path}     - Path as provided to puppet-lint.",
        "                                     %{fullpath} - Expanded path to the file.",
        "                                     %{line}     - Line number.",
        "                                     %{column}   - Column number.",
        "                                     %{kind}     - The kind of message (warning, error).",
        "                                     %{KIND}     - Uppercase version of %{kind}.",
        "                                     %{check}    - The name of the check.",
        "                                     %{message}  - The message.",
        "        --json                       Log output as JSON",
        "        --sarif                      Log output as SARIF",
        "        --codeclimate-report-file FILE",
        "                                     Save a code climate compatible report to this file",
        "        --list-checks                List available check names.",
        "",
        "    Checks:",
        "        --only-checks CHECKS         A comma separated list of checks that should be run",
        "        --ignore-paths PATHS         A comma separated list of patterns to ignore",
        "        --no-arrow_on_right_operand_line-check",
        "                                     Skip the arrow_on_right_operand_line check.",
        "        --no-autoloader_layout-check Skip the autoloader_layout check.",
        "        --no-class_inherits_from_params_class-check",
        "                                     Skip the class_inherits_from_params_class check.",
        "        --class_inherits_from_params_class-check",
        "                                     Enable the class_inherits_from_params_class check.",
        "        --no-code_on_top_scope-check Skip the code_on_top_scope check.",
        "        --code_on_top_scope-check    Enable the code_on_top_scope check.",
        "        --no-inherits_across_namespaces-check",
        "                                     Skip the inherits_across_namespaces check.",
        "        --no-names_containing_dash-check",
        "                                     Skip the names_containing_dash check.",
        "        --no-names_containing_uppercase-check",
        "                                     Skip the names_containing_uppercase check.",
        "        --no-nested_classes_or_defines-check",
        "                                     Skip the nested_classes_or_defines check.",
        "        --no-parameter_order-check   Skip the parameter_order check.",
        "        --no-right_to_left_relationship-check",
        "                                     Skip the right_to_left_relationship check.",
        "        --no-variable_scope-check    Skip the variable_scope check.",
        "        --no-slash_comments-check    Skip the slash_comments check.",
        "        --no-star_comments-check     Skip the star_comments check.",
        "        --no-case_without_default-check",
        "                                     Skip the case_without_default check.",
        "        --no-selector_inside_resource-check",
        "                                     Skip the selector_inside_resource check.",
        "        --no-documentation-check     Skip the documentation check.",
        "        --no-unquoted_node_name-check",
        "                                     Skip the unquoted_node_name check.",
        "        --no-duplicate_params-check  Skip the duplicate_params check.",
        "        --no-ensure_first_param-check",
        "                                     Skip the ensure_first_param check.",
        "        --no-ensure_not_symlink_target-check",
        "                                     Skip the ensure_not_symlink_target check.",
        "        --no-file_mode-check         Skip the file_mode check.",
        "        --no-unquoted_file_mode-check",
        "                                     Skip the unquoted_file_mode check.",
        "        --no-unquoted_resource_title-check",
        "                                     Skip the unquoted_resource_title check.",
        "        --no-double_quoted_strings-check",
        "                                     Skip the double_quoted_strings check.",
        "        --no-only_variable_string-check",
        "                                     Skip the only_variable_string check.",
        "        --no-puppet_url_without_modules-check",
        "                                     Skip the puppet_url_without_modules check.",
        "        --no-quoted_booleans-check   Skip the quoted_booleans check.",
        "        --quoted_booleans-check      Enable the quoted_booleans check.",
        "        --no-single_quote_string_with_variables-check",
        "                                     Skip the single_quote_string_with_variables check.",
        "        --no-variables_not_enclosed-check",
        "                                     Skip the variables_not_enclosed check.",
        "        --no-variable_contains_dash-check",
        "                                     Skip the variable_contains_dash check.",
        "        --no-variable_is_lowercase-check",
        "                                     Skip the variable_is_lowercase check.",
        "        --no-140chars-check          Skip the 140chars check.",
        "        --no-2sp_soft_tabs-check     Skip the 2sp_soft_tabs check.",
        "        --no-80chars-check           Skip the 80chars check.",
        "        --80chars-check              Enable the 80chars check.",
        "        --no-arrow_alignment-check   Skip the arrow_alignment check.",
        "        --no-hard_tabs-check         Skip the hard_tabs check.",
        "        --no-trailing_whitespace-check",
        "                                     Skip the trailing_whitespace check.",
        "        --no-legacy_facts-check      Skip the legacy_facts check.",
        "        --no-top_scope_facts-check   Skip the top_scope_facts check."
    ],
    "pylint": [
        "usage: pylint [options]",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "",
        "Commands:",
        "  Options which are actually commands. Options in this group are mutually exclusive.",
        "",
        "  --rcfile RCFILE       Specify a configuration file to load.",
        "  --output OUTPUT       Specify an output file.",
        "  --help-msg HELP_MSG [HELP_MSG ...]",
        "                        Display a help message for the given message id and",
        "                        exit. The value may be a comma separated list of",
        "                        message ids.",
        "  --list-msgs           Display a list of all pylint's messages divided by",
        "                        whether they are emittable with the given interpreter.",
        "  --list-msgs-enabled   Display a list of what messages are enabled, disabled",
        "                        and non-emittable with the given configuration.",
        "  --list-groups         List pylint's message groups.",
        "  --list-conf-levels    Generate pylint's confidence levels.",
        "  --list-extensions     List available extensions.",
        "  --full-documentation  Generate pylint's full documentation.",
        "  --generate-rcfile     Generate a sample configuration file according to the",
        "                        current configuration. You can put other options",
        "                        before this one to get them in the generated",
        "                        configuration.",
        "  --generate-toml-config",
        "                        Generate a sample configuration file according to the",
        "                        current configuration. You can put other options",
        "                        before this one to get them in the generated",
        "                        configuration. The config is in the .toml format.",
        "  --long-help           Show more verbose help.",
        "",
        "Main:",
        "  --init-hook INIT_HOOK",
        "                        Python code to execute, usually for sys.path",
        "                        manipulation such as pygtk.require().",
        "  --errors-only, -E     In error mode, messages with a category besides ERROR",
        "                        or FATAL are suppressed, and no reports are done by",
        "                        default. Error mode is compatible with disabling",
        "                        specific errors.",
        "  --verbose , -v        In verbose mode, extra non-checker-related info will",
        "                        be displayed.",
        "  --enable-all-extensions",
        "                        Load and enable all available extensions. Use --list-",
        "                        extensions to see a list all available extensions.",
        "  --ignore <file>[,<file>...]",
        "                        Files or directories to be skipped. They should be",
        "                        base names, not paths. (default: ('CVS',))",
        "  --ignore-patterns <pattern>[,<pattern>...]",
        "                        Files or directories matching the regular expression",
        "                        patterns are skipped. The regex matches against base",
        "                        names, not paths. The default value ignores Emacs file",
        "                        locks (default: (re.compile('^\\\\.#'),))",
        "  --ignore-paths <pattern>[,<pattern>...]",
        "                        Add files or directories matching the regular",
        "                        expressions patterns to the ignore-list. The regex",
        "                        matches against paths and can be in Posix or Windows",
        "                        format. Because '\\\\' represents the directory",
        "                        delimiter on Windows systems, it can't be used as an",
        "                        escape character. (default: [])",
        "  --persistent <y or n>",
        "                        Pickle collected data for later comparisons. (default:",
        "                        True)",
        "  --load-plugins <modules>",
        "                        List of plugins (as comma separated values of python",
        "                        module names) to load, usually to register additional",
        "                        checkers. (default: ())",
        "  --fail-under <score>  Specify a score threshold under which the program will",
        "                        exit with error. (default: 10)",
        "  --fail-on <msg ids>   Return non-zero exit code if any of these",
        "                        messages/categories are detected, even if score is",
        "                        above --fail-under value. Syntax same as enable.",
        "                        Messages specified are enabled, while categories only",
        "                        check already-enabled messages. (default: )",
        "  --jobs <n-processes>, -j <n-processes>",
        "                        Use multiple processes to speed up Pylint. Specifying",
        "                        0 will auto-detect the number of processors available",
        "                        to use, and will cap the count on Windows to avoid",
        "                        hangs. (default: 1)",
        "  --limit-inference-results <number-of-results>",
        "                        Control the amount of potential inferred values when",
        "                        inferring a single object. This can help the",
        "                        performance when dealing with large functions or",
        "                        complex, nested conditions. (default: 100)",
        "  --extension-pkg-allow-list <pkg[,pkg]>",
        "                        A comma-separated list of package or module names from",
        "                        where C extensions may be loaded. Extensions are",
        "                        loading into the active Python interpreter and may run",
        "                        arbitrary code. (default: [])",
        "  --extension-pkg-whitelist <pkg[,pkg]>",
        "                        A comma-separated list of package or module names from",
        "                        where C extensions may be loaded. Extensions are",
        "                        loading into the active Python interpreter and may run",
        "                        arbitrary code. (This is an alternative name to",
        "                        extension-pkg-allow-list for backward compatibility.)",
        "                        (default: [])",
        "  --suggestion-mode <y or n>",
        "                        When enabled, pylint would attempt to guess common",
        "                        misconfiguration and emit user-friendly hints instead",
        "                        of false-positive error messages. (default: True)",
        "  --exit-zero           Always return a 0 (non-error) status code, even if",
        "                        lint errors are found. This is primarily useful in",
        "                        continuous integration scripts. (default: False)",
        "  --from-stdin          Interpret the stdin as a python script, whose filename",
        "                        needs to be passed as the module_or_package argument.",
        "                        (default: False)",
        "  --source-roots <path>[,<path>...]",
        "                        Add paths to the list of the source roots. Supports",
        "                        globbing patterns. The source root is an absolute path",
        "                        or a path relative to the current working directory",
        "                        used to determine a package namespace for modules",
        "                        located under the source root. (default: ())",
        "  --recursive <yn>      Discover python modules and packages in the file",
        "                        system subtree. (default: False)",
        "  --py-version <py_version>",
        "                        Minimum Python version to use for version dependent",
        "                        checks. Will default to the version used to run",
        "                        pylint. (default: (3, 12))",
        "  --ignored-modules <module names>",
        "                        List of module names for which member attributes",
        "                        should not be checked and will not be imported (useful",
        "                        for modules/projects where namespaces are manipulated",
        "                        during runtime and thus existing member attributes",
        "                        cannot be deduced by static analysis). It supports",
        "                        qualified module names, as well as Unix pattern",
        "                        matching. (default: ())",
        "  --analyse-fallback-blocks <y or n>",
        "                        Analyse import fallback blocks. This can be used to",
        "                        support both Python 2 and 3 compatible code, which",
        "                        means that the block might have code that exists only",
        "                        in one or another interpreter, leading to false",
        "                        positives when analysed. (default: False)",
        "  --clear-cache-post-run <y or n>",
        "                        Clear in-memory caches upon conclusion of linting.",
        "                        Useful if running pylint in a server-like mode.",
        "                        (default: False)",
        "  --prefer-stubs <y or n>",
        "                        Resolve imports to .pyi stubs if available. May reduce",
        "                        no-member messages and increase not-an-iterable",
        "                        messages. (default: False)",
        "",
        "Reports:",
        "  Options related to output formatting and reporting",
        "",
        "  --output-format <format>, -f <format>",
        "                        Set the output format. Available formats are: text,",
        "                        parseable, colorized, json2 (improved json format),",
        "                        json (old json format) and msvs (visual studio). You",
        "                        can also give a reporter class, e.g.",
        "                        mypackage.mymodule.MyReporterClass.",
        "  --reports <y or n>, -r <y or n>",
        "                        Tells whether to display a full report or only the",
        "                        messages. (default: False)",
        "  --evaluation <python_expression>",
        "                        Python expression which should return a score less",
        "                        than or equal to 10. You have access to the variables",
        "                        'fatal', 'error', 'warning', 'refactor', 'convention',",
        "                        and 'info' which contain the number of messages in",
        "                        each category, as well as 'statement' which is the",
        "                        total number of statements analyzed. This score is",
        "                        used by the global evaluation report (RP0004).",
        "                        (default: max(0, 0 if fatal else 10.0 - ((float(5 *",
        "                        error + warning + refactor + convention) / statement)",
        "                        * 10)))",
        "  --score <y or n>, -s <y or n>",
        "                        Activate the evaluation score. (default: True)",
        "  --msg-template <template>",
        "                        Template used to display messages. This is a python",
        "                        new-style format string used to format the message",
        "                        information. See doc for all details. (default: )",
        "",
        "Messages control:",
        "  Options controlling analysis messages",
        "",
        "  --confidence <levels>",
        "                        Only show warnings with the listed confidence levels.",
        "                        Leave empty to show all. Valid levels: HIGH,",
        "                        CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE, UNDEFINED.",
        "                        (default: ['HIGH', 'CONTROL_FLOW', 'INFERENCE',",
        "                        'INFERENCE_FAILURE', 'UNDEFINED'])",
        "  --enable <msg ids>, -e <msg ids>",
        "                        Enable the message, report, category or checker with",
        "                        the given id(s). You can either give multiple",
        "                        identifier separated by comma (,) or put this option",
        "                        multiple time (only on the command line, not in the",
        "                        configuration file where it should appear only once).",
        "                        See also the \"--disable\" option for examples.",
        "  --disable <msg ids>, -d <msg ids>",
        "                        Disable the message, report, category or checker with",
        "                        the given id(s). You can either give multiple",
        "                        identifiers separated by comma (,) or put this option",
        "                        multiple times (only on the command line, not in the",
        "                        configuration file where it should appear only once).",
        "                        You can also use \"--disable=all\" to disable everything",
        "                        first and then re-enable specific checks. For example,",
        "                        if you want to run only the similarities checker, you",
        "                        can use \"--disable=all --enable=similarities\". If you",
        "                        want to run only the classes checker, but have no",
        "                        Warning level messages displayed, use \"--disable=all",
        "                        --enable=classes --disable=W\".",
        "",
        "String:",
        "  Check string literals.",
        "",
        "  --check-str-concat-over-line-jumps <y or n>",
        "                        This flag controls whether the implicit-str-concat",
        "                        should generate a warning on implicit string",
        "                        concatenation in sequences defined over several lines.",
        "                        (default: False)",
        "  --check-quote-consistency <y or n>",
        "                        This flag controls whether inconsistent-quotes",
        "                        generates a warning when the character used as a quote",
        "                        delimiter is used inconsistently within a module.",
        "                        (default: False)",
        "",
        "Method_args:",
        "  BaseChecker for method_args.",
        "",
        "  --timeout-methods <comma separated list>",
        "                        List of qualified names (i.e., library.method) which",
        "                        require a timeout parameter e.g.",
        "                        'requests.api.get,requests.api.post' (default:",
        "                        ('requests.api.delete', 'requests.api.get',",
        "                        'requests.api.head', 'requests.api.options',",
        "                        'requests.api.patch', 'requests.api.post',",
        "                        'requests.api.put', 'requests.api.request'))",
        "",
        "Typecheck:",
        "  Try to find bugs in the code using type inference.",
        "",
        "  --ignore-on-opaque-inference <y or n>",
        "                        This flag controls whether pylint should warn about",
        "                        no-member and similar checks whenever an opaque object",
        "                        is returned when inferring. The inference can return",
        "                        multiple potential results while evaluating a Python",
        "                        object, but some branches might not be evaluated,",
        "                        which results in partial inference. In that case, it",
        "                        might be useful to still emit no-member and other",
        "                        checks for the rest of the inferred objects. (default:",
        "                        True)",
        "  --mixin-class-rgx <regexp>",
        "                        Regex pattern to define which classes are considered",
        "                        mixins. (default: .*[Mm]ixin)",
        "  --ignore-mixin-members <y or n>",
        "                        Tells whether missing members accessed in mixin class",
        "                        should be ignored. A class is considered mixin if its",
        "                        name matches the mixin-class-rgx option. (default:",
        "                        True)",
        "  --ignored-checks-for-mixins <list of messages names>",
        "                        List of symbolic message names to ignore for Mixin",
        "                        members. (default: ['no-member', 'not-async-context-",
        "                        manager', 'not-context-manager', 'attribute-defined-",
        "                        outside-init'])",
        "  --ignore-none <y or n>",
        "                        Tells whether to warn about missing members when the",
        "                        owner of the attribute is inferred to be None.",
        "                        (default: True)",
        "  --ignored-classes <members names>",
        "                        List of class names for which member attributes should",
        "                        not be checked (useful for classes with dynamically",
        "                        set attributes). This supports the use of qualified",
        "                        names. (default: ('optparse.Values', 'thread._local',",
        "                        '_thread._local', 'argparse.Namespace'))",
        "  --generated-members <members names>",
        "                        List of members which are set dynamically and missed",
        "                        by pylint inference system, and so shouldn't trigger",
        "                        E1101 when accessed. Python regular expressions are",
        "                        accepted. (default: ())",
        "  --contextmanager-decorators <decorator names>",
        "                        List of decorators that produce context managers, such",
        "                        as contextlib.contextmanager. Add to this list to",
        "                        register other decorators that produce valid context",
        "                        managers. (default: ['contextlib.contextmanager'])",
        "  --missing-member-hint-distance <member hint edit distance>",
        "                        The minimum edit distance a name should have in order",
        "                        to be considered a similar match for a missing member",
        "                        name. (default: 1)",
        "  --missing-member-max-choices <member hint max choices>",
        "                        The total number of similar names that should be taken",
        "                        in consideration when showing a hint for a missing",
        "                        member. (default: 1)",
        "  --missing-member-hint <missing member hint>",
        "                        Show a hint with possible names when a member name was",
        "                        not found. The aspect of finding the hint is based on",
        "                        edit distance. (default: True)",
        "  --signature-mutators <decorator names>",
        "                        List of decorators that change the signature of a",
        "                        decorated function. (default: [])",
        "",
        "Format:",
        "  Formatting checker.",
        "",
        "  --max-line-length <int>",
        "                        Maximum number of characters on a single line.",
        "                        (default: 100)",
        "  --ignore-long-lines <regexp>",
        "                        Regexp for a line that is allowed to be longer than",
        "                        the limit. (default: ^\\s*(# )?<?https?://\\S+>?$)",
        "  --single-line-if-stmt <y or n>",
        "                        Allow the body of an if to be on the same line as the",
        "                        test if there is no else. (default: False)",
        "  --single-line-class-stmt <y or n>",
        "                        Allow the body of a class to be on the same line as",
        "                        the declaration if body contains single statement.",
        "                        (default: False)",
        "  --max-module-lines <int>",
        "                        Maximum number of lines in a module. (default: 1000)",
        "  --indent-string <string>",
        "                        String used as indentation unit. This is usually \" \"",
        "                        (4 spaces) or \"  \" (1 tab). (default: )",
        "  --indent-after-paren <int>",
        "                        Number of spaces of indent required inside a hanging",
        "                        or continued line. (default: 4)",
        "  --expected-line-ending-format <empty or LF or CRLF>",
        "                        Expected format of line ending, e.g. empty (any line",
        "                        ending), LF or CRLF. (default: )",
        "",
        "Exceptions:",
        "  Exception related checks.",
        "",
        "  --overgeneral-exceptions <comma-separated class names>",
        "                        Exceptions that will emit a warning when caught.",
        "                        (default: ('builtins.BaseException',",
        "                        'builtins.Exception'))",
        "",
        "Logging:",
        "  Checks use of the logging module.",
        "",
        "  --logging-modules <comma separated list>",
        "                        Logging modules to check that the string format",
        "                        arguments are in logging function parameter format.",
        "                        (default: ('logging',))",
        "  --logging-format-style <old (%) or new ({)>",
        "                        The type of string formatting that logging methods do.",
        "                        `old` means using % formatting, `new` is for `{}`",
        "                        formatting. (default: old)",
        "",
        "Basic:",
        "  --good-names <names>  Good variable names which should always be accepted,",
        "                        separated by a comma. (default: ('i', 'j', 'k', 'ex',",
        "                        'Run', '_'))",
        "  --good-names-rgxs <names>",
        "                        Good variable names regexes, separated by a comma. If",
        "                        names match any regex, they will always be accepted",
        "                        (default: )",
        "  --bad-names <names>   Bad variable names which should always be refused,",
        "                        separated by a comma. (default: ('foo', 'bar', 'baz',",
        "                        'toto', 'tutu', 'tata'))",
        "  --bad-names-rgxs <names>",
        "                        Bad variable names regexes, separated by a comma. If",
        "                        names match any regex, they will always be refused",
        "                        (default: )",
        "  --name-group <name1:name2>",
        "                        Colon-delimited sets of names that determine each",
        "                        other's naming style when the name regexes allow",
        "                        several styles. (default: ())",
        "  --include-naming-hint <y or n>",
        "                        Include a hint for the correct naming format with",
        "                        invalid-name. (default: False)",
        "  --property-classes <decorator names>",
        "                        List of decorators that produce properties, such as",
        "                        abc.abstractproperty. Add to this list to register",
        "                        other decorators that produce valid properties. These",
        "                        decorators are taken in consideration only for",
        "                        invalid-name. (default: ('abc.abstractproperty',))",
        "  --argument-naming-style <style>",
        "                        Naming style matching correct argument names.",
        "                        (default: snake_case)",
        "  --argument-rgx <regexp>",
        "                        Regular expression matching correct argument names.",
        "                        Overrides argument-naming-style. If left empty,",
        "                        argument names will be checked with the set naming",
        "                        style. (default: None)",
        "  --attr-naming-style <style>",
        "                        Naming style matching correct attribute names.",
        "                        (default: snake_case)",
        "  --attr-rgx <regexp>   Regular expression matching correct attribute names.",
        "                        Overrides attr-naming-style. If left empty, attribute",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --class-naming-style <style>",
        "                        Naming style matching correct class names. (default:",
        "                        PascalCase)",
        "  --class-rgx <regexp>  Regular expression matching correct class names.",
        "                        Overrides class-naming-style. If left empty, class",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --class-attribute-naming-style <style>",
        "                        Naming style matching correct class attribute names.",
        "                        (default: any)",
        "  --class-attribute-rgx <regexp>",
        "                        Regular expression matching correct class attribute",
        "                        names. Overrides class-attribute-naming-style. If left",
        "                        empty, class attribute names will be checked with the",
        "                        set naming style. (default: None)",
        "  --class-const-naming-style <style>",
        "                        Naming style matching correct class constant names.",
        "                        (default: UPPER_CASE)",
        "  --class-const-rgx <regexp>",
        "                        Regular expression matching correct class constant",
        "                        names. Overrides class-const-naming-style. If left",
        "                        empty, class constant names will be checked with the",
        "                        set naming style. (default: None)",
        "  --const-naming-style <style>",
        "                        Naming style matching correct constant names.",
        "                        (default: UPPER_CASE)",
        "  --const-rgx <regexp>  Regular expression matching correct constant names.",
        "                        Overrides const-naming-style. If left empty, constant",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --function-naming-style <style>",
        "                        Naming style matching correct function names.",
        "                        (default: snake_case)",
        "  --function-rgx <regexp>",
        "                        Regular expression matching correct function names.",
        "                        Overrides function-naming-style. If left empty,",
        "                        function names will be checked with the set naming",
        "                        style. (default: None)",
        "  --inlinevar-naming-style <style>",
        "                        Naming style matching correct inline iteration names.",
        "                        (default: any)",
        "  --inlinevar-rgx <regexp>",
        "                        Regular expression matching correct inline iteration",
        "                        names. Overrides inlinevar-naming-style. If left",
        "                        empty, inline iteration names will be checked with the",
        "                        set naming style. (default: None)",
        "  --method-naming-style <style>",
        "                        Naming style matching correct method names. (default:",
        "                        snake_case)",
        "  --method-rgx <regexp>",
        "                        Regular expression matching correct method names.",
        "                        Overrides method-naming-style. If left empty, method",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --module-naming-style <style>",
        "                        Naming style matching correct module names. (default:",
        "                        snake_case)",
        "  --module-rgx <regexp>",
        "                        Regular expression matching correct module names.",
        "                        Overrides module-naming-style. If left empty, module",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --typealias-rgx <regexp>",
        "                        Regular expression matching correct type alias names.",
        "                        If left empty, type alias names will be checked with",
        "                        the set naming style. (default: None)",
        "  --typevar-rgx <regexp>",
        "                        Regular expression matching correct type variable",
        "                        names. If left empty, type variable names will be",
        "                        checked with the set naming style. (default: None)",
        "  --variable-naming-style <style>",
        "                        Naming style matching correct variable names.",
        "                        (default: snake_case)",
        "  --variable-rgx <regexp>",
        "                        Regular expression matching correct variable names.",
        "                        Overrides variable-naming-style. If left empty,",
        "                        variable names will be checked with the set naming",
        "                        style. (default: None)",
        "  --no-docstring-rgx <regexp>",
        "                        Regular expression which should only match function or",
        "                        class names that do not require a docstring. (default:",
        "                        re.compile('^_'))",
        "  --docstring-min-length <int>",
        "                        Minimum line length for functions/classes that require",
        "                        docstrings, shorter ones are exempt. (default: -1)",
        "",
        "Variables:",
        "  BaseChecker for variables.",
        "",
        "  --init-import <y or n>",
        "                        Tells whether we should check for unused import in",
        "                        __init__ files. (default: False)",
        "  --dummy-variables-rgx <regexp>",
        "                        A regular expression matching the name of dummy",
        "                        variables (i.e. expected to not be used). (default: _+",
        "                        $|(_[a-zA-Z0-9_]*[a-zA-Z0-",
        "                        9]+?$)|dummy|^ignored_|^unused_)",
        "  --additional-builtins <comma separated list>",
        "                        List of additional names supposed to be defined in",
        "                        builtins. Remember that you should avoid defining new",
        "                        builtins when possible. (default: ())",
        "  --callbacks <callbacks>",
        "                        List of strings which can identify a callback function",
        "                        by name. A callback name must start or end with one of",
        "                        those strings. (default: ('cb_', '_cb'))",
        "  --redefining-builtins-modules <comma separated list>",
        "                        List of qualified module names which can have objects",
        "                        that can redefine builtins. (default: ('six.moves',",
        "                        'past.builtins', 'future.builtins', 'builtins', 'io'))",
        "  --ignored-argument-names <regexp>",
        "                        Argument names that match this expression will be",
        "                        ignored. (default:",
        "                        re.compile('_.*|^ignored_|^unused_'))",
        "  --allow-global-unused-variables <y or n>",
        "                        Tells whether unused global variables should be",
        "                        treated as a violation. (default: True)",
        "  --allowed-redefined-builtins <comma separated list>",
        "                        List of names allowed to shadow builtins (default: ())",
        "",
        "Similarities:",
        "  Checks for similarities and duplicated code.",
        "",
        "  --min-similarity-lines <int>",
        "                        Minimum lines number of a similarity. (default: 4)",
        "  --ignore-comments <y or n>",
        "                        Comments are removed from the similarity computation",
        "                        (default: True)",
        "  --ignore-docstrings <y or n>",
        "                        Docstrings are removed from the similarity computation",
        "                        (default: True)",
        "  --ignore-imports <y or n>",
        "                        Imports are removed from the similarity computation",
        "                        (default: True)",
        "  --ignore-signatures <y or n>",
        "                        Signatures are removed from the similarity computation",
        "                        (default: True)",
        "",
        "Design:",
        "  Checker of potential misdesigns.",
        "",
        "  --max-args <int>      Maximum number of arguments for function / method.",
        "                        (default: 5)",
        "  --max-positional-arguments <int>",
        "                        Maximum number of positional arguments for function /",
        "                        method. (default: 5)",
        "  --max-locals <int>    Maximum number of locals for function / method body.",
        "                        (default: 15)",
        "  --max-returns <int>   Maximum number of return / yield for function / method",
        "                        body. (default: 6)",
        "  --max-branches <int>  Maximum number of branch for function / method body.",
        "                        (default: 12)",
        "  --max-statements <int>",
        "                        Maximum number of statements in function / method",
        "                        body. (default: 50)",
        "  --max-parents <num>   Maximum number of parents for a class (see R0901).",
        "                        (default: 7)",
        "  --ignored-parents <comma separated list of class names>",
        "                        List of qualified class names to ignore when counting",
        "                        class parents (see R0901) (default: ())",
        "  --max-attributes <num>",
        "                        Maximum number of attributes for a class (see R0902).",
        "                        (default: 7)",
        "  --min-public-methods <num>",
        "                        Minimum number of public methods for a class (see",
        "                        R0903). (default: 2)",
        "  --max-public-methods <num>",
        "                        Maximum number of public methods for a class (see",
        "                        R0904). (default: 20)",
        "  --max-bool-expr <num>",
        "                        Maximum number of boolean expressions in an if",
        "                        statement (see R0916). (default: 5)",
        "  --exclude-too-few-public-methods <pattern>[,<pattern>...]",
        "                        List of regular expressions of class ancestor names to",
        "                        ignore when counting public methods (see R0903)",
        "                        (default: [])",
        "",
        "Classes:",
        "  Checker for class nodes.",
        "",
        "  --defining-attr-methods <method names>",
        "                        List of method names used to declare (i.e. assign)",
        "                        instance attributes. (default: ('__init__', '__new__',",
        "                        'setUp', 'asyncSetUp', '__post_init__'))",
        "  --valid-classmethod-first-arg <argument names>",
        "                        List of valid names for the first argument in a class",
        "                        method. (default: ('cls',))",
        "  --valid-metaclass-classmethod-first-arg <argument names>",
        "                        List of valid names for the first argument in a",
        "                        metaclass class method. (default: ('mcs',))",
        "  --exclude-protected <protected access exclusions>",
        "                        List of member names, which should be excluded from",
        "                        the protected access warning. (default: ('_asdict',",
        "                        '_fields', '_replace', '_source', '_make',",
        "                        'os._exit'))",
        "  --check-protected-access-in-special-methods <y or n>",
        "                        Warn about protected attribute access inside special",
        "                        methods (default: False)",
        "",
        "Spelling:",
        "  Check spelling in comments and docstrings.",
        "",
        "  --spelling-dict <dict name>",
        "                        Spelling dictionary name. No available dictionaries :",
        "                        You need to install both the python package and the",
        "                        system dependency for enchant to work. (default: )",
        "  --spelling-ignore-words <comma separated words>",
        "                        List of comma separated words that should not be",
        "                        checked. (default: )",
        "  --spelling-private-dict-file <path to file>",
        "                        A path to a file that contains the private dictionary;",
        "                        one word per line. (default: )",
        "  --spelling-store-unknown-words <y or n>",
        "                        Tells whether to store unknown words to the private",
        "                        dictionary (see the --spelling-private-dict-file",
        "                        option) instead of raising a message. (default: n)",
        "  --max-spelling-suggestions N",
        "                        Limits count of emitted suggestions for spelling",
        "                        mistakes. (default: 4)",
        "  --spelling-ignore-comment-directives <comma separated words>",
        "                        List of comma separated words that should be",
        "                        considered directives if they appear at the beginning",
        "                        of a comment and should not be checked. (default: fmt:",
        "                        on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:)",
        "",
        "Miscellaneous:",
        "  BaseChecker for encoding issues.",
        "",
        "  --notes <comma separated values>",
        "                        List of note tags to take in consideration, separated",
        "                        by a comma. (default: ('FIXME', 'XXX', 'TODO'))",
        "  --notes-rgx <regexp>  Regular expression of note tags to take in",
        "                        consideration. (default: )",
        "",
        "Refactoring:",
        "  Looks for code which can be refactored.",
        "",
        "  --max-nested-blocks <int>",
        "                        Maximum number of nested blocks for function / method",
        "                        body (default: 5)",
        "  --never-returning-functions <members names>",
        "                        Complete name of functions that never returns. When",
        "                        checking for inconsistent-return-statements if a never",
        "                        returning function is called then it will be",
        "                        considered as an explicit return statement and no",
        "                        message will be printed. (default: ('sys.exit',",
        "                        'argparse.parse_error'))",
        "  --suggest-join-with-non-empty-separator <y or n>",
        "                        Let 'consider-using-join' be raised when the separator",
        "                        to join on would be non-empty (resulting in expected",
        "                        fixes of the type: ``\"- \" + \" - \".join(items)``)",
        "                        (default: True)",
        "",
        "Imports:",
        "  BaseChecker for import statements.",
        "",
        "  --deprecated-modules <modules>",
        "                        Deprecated modules which should not be used, separated",
        "                        by a comma. (default: ())",
        "  --preferred-modules <module:preferred-module>",
        "                        Couples of modules and preferred modules, separated by",
        "                        a comma. (default: ())",
        "  --import-graph <file.gv>",
        "                        Output a graph (.gv or any supported image format) of",
        "                        all (i.e. internal and external) dependencies to the",
        "                        given file (report RP0402 must not be disabled).",
        "                        (default: )",
        "  --ext-import-graph <file.gv>",
        "                        Output a graph (.gv or any supported image format) of",
        "                        external dependencies to the given file (report RP0402",
        "                        must not be disabled). (default: )",
        "  --int-import-graph <file.gv>",
        "                        Output a graph (.gv or any supported image format) of",
        "                        internal dependencies to the given file (report RP0402",
        "                        must not be disabled). (default: )",
        "  --known-standard-library <modules>",
        "                        Force import order to recognize a module as part of",
        "                        the standard compatibility libraries. (default: ())",
        "  --known-third-party <modules>",
        "                        Force import order to recognize a module as part of a",
        "                        third party library. (default: ('enchant',))",
        "  --allow-any-import-level <modules>",
        "                        List of modules that can be imported at any level, not",
        "                        just the top level one. (default: ())",
        "  --allow-wildcard-with-all <y or n>",
        "                        Allow wildcard imports from modules that define",
        "                        __all__. (default: False)",
        "  --allow-reexport-from-package <y or n>",
        "                        Allow explicit reexports by alias from a package",
        "                        __init__. (default: False)"
    ],
    "pyright": [
        "Usage: pyright [options] files...",
        "  Options:",
        "  --createstub <IMPORT>              Create type stub file(s) for import",
        "  --dependencies                     Emit import dependency information",
        "  -h,--help                          Show this help message",
        "  --ignoreexternal                   Ignore external imports for --verifytypes",
        "  --level <LEVEL>                    Minimum diagnostic level (error or warning)",
        "  --outputjson                       Output results in JSON format",
        "  -p,--project <FILE OR DIRECTORY>   Use the configuration file at this location",
        "  --pythonplatform <PLATFORM>        Analyze for a specific platform (Darwin, Linux, Windows)",
        "  --pythonpath <FILE>                Path to the Python interpreter",
        "  --pythonversion <VERSION>          Analyze for a specific version (3.3, 3.4, etc.)",
        "  --skipunannotated                  Skip analysis of functions with no type annotations",
        "  --stats                            Print detailed performance stats",
        "  -t,--typeshedpath <DIRECTORY>      Use typeshed type stubs at this location",
        "  --threads <optional COUNT>         Use separate threads to parallelize type checking",
        "  -v,--venvpath <DIRECTORY>          Directory that contains virtual environments",
        "  --verbose                          Emit verbose diagnostics",
        "  --verifytypes <PACKAGE>            Verify type completeness of a py.typed package",
        "  --version                          Print Pyright version and exit",
        "  --warnings                         Use exit code of 1 if warnings are reported",
        "  -w,--watch                         Continue to run and watch for changes",
        "  -                                  Read files from stdin",
        ""
    ],
    "raku": [
        "/opt/rakudo-pkg/bin/../share/perl6/runtime/perl6.moarvm [switches] [--] [programfile] [arguments]",
        "",
        "With no arguments, enters a REPL (see --repl-mode option).",
        "With a \"[programfile]\" or the \"-e\" option, compiles the given program",
        "and, by default, also executes the compiled code.",
        "",
        "  -                    read program source from STDIN or start REPL if a TTY",
        "  -c                   check syntax only (runs BEGIN and CHECK blocks)",
        "  --rakudoc            extract documentation and print it as text",
        "  --rakudoc=module     use RakuDoc::To::[module] to render inline documentation",
        "  -e program           one line of program, strict is enabled by default",
        "  -h, --help           display this help text",
        "  -n                   run program once for each line of input",
        "  -p                   same as -n, but also print $_ at the end of lines",
        "  -I path              adds the path to the module search path",
        "  -M module            loads the module prior to running the program",
        "  --target=stage       specify compilation stage to emit",
        "  --optimize=level     use the given level of optimization (0..3)",
        "  --rakudo-home=path   Override the path of the Rakudo runtime files",
        "  -o, --output=name    specify name of output file",
        "  -v, --version        display version information",
        "  -V                   print configuration summary",
        "  --stagestats         display time spent in the compilation stages",
        "  --ll-exception       display a low level backtrace on errors",
        "  --doc                extract documentation and print it as text",
        "  --doc=module         use Pod::To::[module] to render inline documentation",
        "  --repl-mode=tty|process|disabled",
        "                       when running without \"-e\", a REPL is started.",
        "                       In this scenario, the repl-mode is automatically set",
        "                       to 'tty'. A user may choose to specify 'tty' explicitly",
        "                       in order to ensure that the REPL is only run under a TTY.",
        "                       In cases where a REPL session may be running outside",
        "                       of a TTY, such as in a spawned sub-process, the",
        "                       user should specify a repl-mode of 'process'.",
        "                       If the user desires to have no REPL machinery loaded",
        "                       at all, the repl-mode can be set to 'disabled'.",
        "                       With this setting STDIN is read entirely (until EOF)",
        "                       and evaluated as if it were a program, without any",
        "                       extra output.",
        "                       Both 'process' and 'disabled' options bypass",
        "                       TTY detection.",
        "",
        "  --profile[=name]     write profile information to a file",
        "                       Extension controls format:",
        "                           .json outputs in JSON",
        "                           .sql  outputs in SQL",
        "                           any other extension outputs in HTML",
        "  --profile-compile[=name]",
        "                       write compile-time profile information to a file",
        "                       Extension controls format:",
        "                         .json outputs in JSON",
        "                         .sql  outputs in SQL",
        "                         any other extension outputs in HTML",
        "  --profile-kind[=name]",
        "                       choose the type of profile to generate",
        "                         instrumented - performance measurements (default)",
        "                         heap - record heap snapshots after every garbage",
        "                         collector run",
        "  --profile-filename=name",
        "                       provide a different filename for profile.",
        "                       Extension controls format:",
        "                         .json outputs in JSON",
        "                         .sql  outputs in SQL",
        "                         any other extension outputs in HTML",
        "                       This option will go away in a future Rakudo release",
        "  --profile-stage=stage",
        "                       write profile information for the given compilation",
        "                       stage to a file. Use --profile-compile to set name",
        "                       and format",
        "  --full-cleanup       try to free all memory and exit cleanly",
        "  --debug-port=port    listen for incoming debugger connections",
        "  --debug-suspend      pause execution at the entry point",
        "  --tracing            output a line to stderr on every interpreter instr",
        "                       (only if enabled in MoarVM)",
        "",
        "Note that only boolean single-letter options may be bundled.",
        "",
        "The following environment variables are respected:",
        "",
        "  RAKULIB       Modify the module search path",
        "  PERL6LIB      Modify the module search path (DEPRECATED)",
        "  NQP_HOME      Override the path of the NQP runtime files",
        "  RAKUDO_HOME   Override the path of the Rakudo runtime files",
        "",
        "",
        ""
    ],
    "remark-lint": [
        "Usage: remark [options] [path | glob ...]",
        "",
        "  Command line interface to inspect and change markdown files with remark",
        "",
        "Options:",
        "",
        "  -h  --help                              output usage information",
        "  -v  --version                           output version number",
        "  -o  --output [path]                     specify output location",
        "  -r  --rc-path <path>                    specify configuration file",
        "  -i  --ignore-path <path>                specify ignore file",
        "  -s  --setting <settings>                specify settings",
        "  -e  --ext <extensions>                  specify extensions",
        "  -u  --use <plugins>                     use plugins",
        "  -w  --watch                             watch for changes and reprocess",
        "  -q  --quiet                             output only warnings and errors",
        "  -S  --silent                            output only errors",
        "  -f  --frail                             exit with 1 on warnings",
        "  -t  --tree                              specify input and output as syntax tree",
        "      --report <reporter>                 specify reporter",
        "      --file-path <path>                  specify path to process as",
        "      --ignore-path-resolve-from dir|cwd  resolve patterns in `ignore-path` from its directory or cwd",
        "      --ignore-pattern <globs>            specify ignore patterns",
        "      --silently-ignore                   do not fail when given ignored files",
        "      --tree-in                           specify input as syntax tree",
        "      --tree-out                          output syntax tree",
        "      --inspect                           output formatted syntax tree",
        "      --[no-]stdout                       specify writing to stdout (on by default)",
        "      --[no-]color                        specify color in report (on by default)",
        "      --[no-]config                       search for configuration files (on by default)",
        "      --[no-]ignore                       search for ignore files (on by default)",
        "",
        "Examples:",
        "",
        "  # Process `input.md`",
        "  $ remark input.md -o output.md",
        "",
        "  # Pipe",
        "  $ remark < input.md > output.md",
        "",
        "  # Rewrite all applicable files",
        "  $ remark . -o"
    ],
    "revive": [
        "",
        " _ __ _____   _(_)__  _____",
        "| '__/ _ \\ \\ / / \\ \\ / / _ \\",
        "| | |  __/\\ V /| |\\ V /  __/",
        "|_|  \\___| \\_/ |_| \\_/ \\___|",
        "",
        "Example:",
        "  revive -config c.toml -formatter friendly -exclude a.go -exclude b.go ./...",
        "",
        "Usage of revive:",
        "  -config string",
        "      path to the configuration TOML file, defaults to $XDG_CONFIG_HOME/revive.toml or $HOME/revive.toml, if present (i.e. -config myconf.toml)",
        "  -exclude value",
        "      list of globs which specify files to be excluded (i.e. -exclude foo/...)",
        "  -formatter string",
        "      formatter to be used for the output (i.e. -formatter stylish)",
        "  -max_open_files int",
        "      maximum number of open files at the same time",
        "  -set_exit_status",
        "      set exit status to 1 if any issues are found, overwrites errorCode and warningCode in config",
        "  -version",
        "      get revive version"
    ],
    "roslynator": [
        "Roslynator Command Line Tool version 0.10.1.0 (Roslyn version 4.12.0.0)",
        "Usage: roslynator [command] [arguments]",
        "",
        "Commands:",
        "  analyze            Analyzes specified project or solution and reports diagnostics.",
        "  find-symbol        Finds symbols in the specified project or solution.",
        "  fix                Fixes diagnostics in the specified project or solution.",
        "  format             Formats whitespace in the specified project or solution.",
        "  generate-doc       Generates reference documentation from specified project/solution.",
        "  generate-doc-root  [deprecated] Generates root documentation file from specified project/solution.",
        "  list-symbols       Lists symbols from the specified project or solution.",
        "  lloc               Counts logical lines of code in the specified project or solution.",
        "  loc                Counts physical lines of code in the specified project or solution.",
        "  migrate            Migrates analyzers to a new version.",
        "  rename-symbol      Rename symbols in the specified project or solution.",
        "  spellcheck         Searches the specified project or solution for possible misspellings or typos.",
        "",
        "Run 'roslynator help [command]' for more information on a command."
    ],
    "rst-lint": [
        "usage: rst-lint [-h] [--version] [--format {text,json}] [--encoding ENCODING]",
        "                [--level {debug,info,warning,error,severe}]",
        "                [--rst-prolog RST_PROLOG]",
        "                path [path ...]",
        "",
        "Lint reStructuredText files. Returns 0 if all files pass linting, 1 for an",
        "internal error, and 2 if linting failed.",
        "",
        "positional arguments:",
        "  path                  File/folder to lint",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  --version             show program's version number and exit",
        "  --format {text,json}  Format of the output (default: \"text\")",
        "  --encoding ENCODING   Encoding of the input file (e.g. \"utf-8\")",
        "  --level {debug,info,warning,error,severe}",
        "                        Minimum error level to report (default: \"warning\")",
        "  --rst-prolog RST_PROLOG",
        "                        reStructuredText content to prepend to all files",
        "                        (useful for substitutions)"
    ],
    "rstcheck": [
        "                                                                                ",
        " Usage: rstcheck [OPTIONS] FILES...                                             ",
        "                                                                                ",
        " CLI of rstcheck.",
        " Enabled features: ['Sphinx']",
        " Pass one or more RST FILES to check. Can be files or directories if ",
        " --recursive is passed too. Pass \"-\" if you want to read from stdin.",
        "",
        "\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e",
        "\u2502 --config                         PATH   Config file to load. Can be a INI    \u2502",
        "\u2502                                         file or directory. If a directory is \u2502",
        "\u2502                                         passed it will be searched for       \u2502",
        "\u2502                                         .rstcheck.cfg | setup.cfg. If 'NONE' \u2502",
        "\u2502                                         is passed no config file is loaded   \u2502",
        "\u2502                                         at all.                              \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --warn-unknown-settings                 Log a WARNING for unknown settings   \u2502",
        "\u2502                                         in config files. Can be hidden via   \u2502",
        "\u2502                                         --log-level.                         \u2502",
        "\u2502 --recursive              -r             Recursively search passed            \u2502",
        "\u2502                                         directories for RST files to check.  \u2502",
        "\u2502 --report-level                   LEVEL  The report level of the linting      \u2502",
        "\u2502                                         issues found. Valid levels are: INFO \u2502",
        "\u2502                                         | WARNING | ERROR | SEVERE | NONE.   \u2502",
        "\u2502                                         Defaults to INFO. Can be set in      \u2502",
        "\u2502                                         config file.                         \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --log-level                      LEVEL  The log level of the application for \u2502",
        "\u2502                                         information that is not a linting    \u2502",
        "\u2502                                         issue. Valid levels are: DEBUG |     \u2502",
        "\u2502                                         INFO | WARNING | ERROR | CRITICAL.   \u2502",
        "\u2502                                         Defaults to WARNING.                 \u2502",
        "\u2502                                         [default: WARNING]                   \u2502",
        "\u2502 --ignore-directives              TEXT   Comma-separated-list of directives   \u2502",
        "\u2502                                         to add to the ignore list. Can be    \u2502",
        "\u2502                                         set in config file.                  \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --ignore-roles                   TEXT   Comma-separated-list of roles to add \u2502",
        "\u2502                                         to the ignore list. Can be set in    \u2502",
        "\u2502                                         config file.                         \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --ignore-substitutions           TEXT   Comma-separated-list of              \u2502",
        "\u2502                                         substitutions to add to the ignore   \u2502",
        "\u2502                                         list. Can be set in config file.     \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --ignore-languages               TEXT   Comma-separated-list of languages    \u2502",
        "\u2502                                         for code-blocks to add to the ignore \u2502",
        "\u2502                                         list. The code in ignored            \u2502",
        "\u2502                                         code-blocks will not be checked for  \u2502",
        "\u2502                                         errors. Can be set in config file.   \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --ignore-messages                REGEX  A regular expression to match        \u2502",
        "\u2502                                         linting issue messages against to    \u2502",
        "\u2502                                         ignore. Can be set in config file.   \u2502",
        "\u2502                                         [default: None]                      \u2502",
        "\u2502 --version                               Print versions and exit.             \u2502",
        "\u2502 --help                                  Show this message and exit.          \u2502",
        "\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f",
        ""
    ],
    "rstfmt": [
        "usage: rstfmt [-h] [--version] [--check] [--diff] [-w WIDTH] [--ext EXT]",
        "              [--test] [-v]",
        "              [path ...]",
        "",
        "positional arguments:",
        "  path                  files/directories to run on",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  --version             show rstfmt version and exit",
        "  --check               don't update files, but exit with nonzero status if",
        "                        any files are not formatted",
        "  --diff                don't update files, but show a diff of what would",
        "                        change",
        "  -w WIDTH, --width WIDTH",
        "                        the target line length in characters",
        "  --ext EXT             the extension of files to look at when passed a",
        "                        directory (default `rst`)",
        "  --test                [internal] run tests instead of updating files",
        "  -v, --verbose         [internal] print extra debugging information"
    ],
    "rubocop": [
        "Usage: rubocop [options] [file1, file2, ...]",
        "",
        "Basic Options:",
        "    -l, --lint                       Run only lint cops.",
        "    -x, --fix-layout                 Run only layout cops, with autocorrect on.",
        "        --safe                       Run only safe cops.",
        "        --except [COP1,COP2,...]     Exclude the given cop(s).",
        "        --only [COP1,COP2,...]       Run only the given cop(s).",
        "        --only-guide-cops            Run only cops for rules that link to a",
        "                                     style guide.",
        "    -F, --fail-fast                  Inspect files in order of modification",
        "                                     time and stop after the first file",
        "                                     containing offenses.",
        "        --disable-pending-cops       Run without pending cops.",
        "        --enable-pending-cops        Run with pending cops.",
        "        --ignore-disable-comments    Report offenses even if they have been manually disabled",
        "                                     with a `rubocop:disable` or `rubocop:todo` directive.",
        "        --force-exclusion            Any files excluded by `Exclude` in configuration",
        "                                     files will be excluded, even if given explicitly",
        "                                     as arguments.",
        "        --only-recognized-file-types Inspect files given on the command line only if",
        "                                     they are listed in `AllCops/Include` parameters",
        "                                     of user configuration or default configuration.",
        "        --ignore-parent-exclusion    Prevent from inheriting `AllCops/Exclude` from",
        "                                     parent folders.",
        "        --ignore-unrecognized-cops   Ignore unrecognized cops or departments in the config.",
        "        --force-default-config       Use default configuration even if configuration",
        "                                     files are present in the directory tree.",
        "    -s, --stdin FILE                 Pipe source from STDIN, using FILE in offense",
        "                                     reports. This is useful for editor integration.",
        "        --editor-mode                Optimize real-time feedback in editors,",
        "                                     adjusting behaviors for editing experience.",
        "    -P, --[no-]parallel              Use available CPUs to execute inspection in",
        "                                     parallel. Default is true.",
        "                                     You can specify the number of parallel processes using",
        "                                     the $PARALLEL_PROCESSOR_COUNT environment variable.",
        "        --raise-cop-error            Raise cop-related errors with cause and location.",
        "                                     This is used to prevent cops from failing silently.",
        "                                     Default is false.",
        "        --fail-level SEVERITY        Minimum severity for exit with error code.",
        "                                       [A] autocorrect",
        "                                       [I] info",
        "                                       [R] refactor",
        "                                       [C] convention",
        "                                       [W] warning",
        "                                       [E] error",
        "                                       [F] fatal",
        "",
        "Caching:",
        "    -C, --cache FLAG                 Use result caching (FLAG=true) or don't",
        "                                     (FLAG=false), default determined by",
        "                                     configuration parameter AllCops: UseCache.",
        "        --cache-root DIR             Set the cache root directory.",
        "                                     Takes precedence over the configuration",
        "                                     parameter AllCops: CacheRootDirectory and",
        "                                     the $RUBOCOP_CACHE_ROOT environment variable.",
        "",
        "LSP Option:",
        "        --lsp                        Start a language server listening on STDIN.",
        "",
        "Server Options:",
        "        --[no-]server                If a server process has not been started yet, start",
        "                                     the server process and execute inspection with server.",
        "                                     Default is false.",
        "                                     You can specify the server host and port with the",
        "                                     $RUBOCOP_SERVER_HOST and the $RUBOCOP_SERVER_PORT",
        "                                     environment variables.",
        "        --restart-server             Restart server process.",
        "        --start-server               Start server process.",
        "        --stop-server                Stop server process.",
        "        --server-status              Show server status.",
        "        --no-detach                  Run the server process in the foreground.",
        "",
        "Output Options:",
        "    -f, --format FORMATTER           Choose an output formatter. This option",
        "                                     can be specified multiple times to enable",
        "                                     multiple formatters at the same time.",
        "                                       [a]utogenconf",
        "                                       [c]lang",
        "                                       [e]macs",
        "                                       [fi]les",
        "                                       [fu]ubar",
        "                                       [g]ithub",
        "                                       [h]tml",
        "                                       [j]son",
        "                                       [ju]nit",
        "                                       [m]arkdown",
        "                                       [o]ffenses",
        "                                       [pa]cman",
        "                                       [p]rogress (default)",
        "                                       [q]uiet",
        "                                       [s]imple",
        "                                       [t]ap",
        "                                       [w]orst",
        "                                       custom formatter class name",
        "    -D, --[no-]display-cop-names     Display cop names in offense messages.",
        "                                     Default is true.",
        "    -E, --extra-details              Display extra details in offense messages.",
        "    -S, --display-style-guide        Display style guide URLs in offense messages.",
        "    -o, --out FILE                   Write output to a file instead of STDOUT.",
        "                                     This option applies to the previously",
        "                                     specified --format, or the default format",
        "                                     if no format is specified.",
        "        --stderr                     Write all output to stderr except for the",
        "                                     autocorrected source. This is especially useful",
        "                                     when combined with --autocorrect and --stdin.",
        "        --display-time               Display elapsed time in seconds.",
        "        --display-only-failed        Only output offense messages. Omit passing",
        "                                     cops. Only valid for --format junit.",
        "        --display-only-fail-level-offenses",
        "                                     Only output offense messages at",
        "                                     the specified --fail-level or above.",
        "        --display-only-correctable   Only output correctable offense messages.",
        "        --display-only-safe-correctable",
        "                                     Only output safe-correctable offense messages",
        "                                     when combined with --display-only-correctable.",
        "",
        "Autocorrection:",
        "    -a, --autocorrect                Autocorrect offenses (only when it's safe).",
        "        --auto-correct               (same, deprecated)",
        "        --safe-auto-correct          (same, deprecated)",
        "    -A, --autocorrect-all            Autocorrect offenses (safe and unsafe).",
        "        --auto-correct-all           (same, deprecated)",
        "        --disable-uncorrectable      Used with --autocorrect to annotate any",
        "                                     offenses that do not support autocorrect",
        "                                     with `rubocop:todo` comments.",
        "",
        "Config Generation:",
        "        --auto-gen-config            Generate a configuration file acting as a",
        "                                     TODO list.",
        "        --regenerate-todo            Regenerate the TODO configuration file using",
        "                                     the last configuration. If there is no existing",
        "                                     TODO file, acts like --auto-gen-config.",
        "        --exclude-limit COUNT        Set the limit for how many files to explicitly exclude.",
        "                                     If there are more files than the limit, the cop will",
        "                                     be disabled instead. Default is 15.",
        "        --no-exclude-limit           Do not set the limit for how many files to exclude.",
        "        --[no-]offense-counts        Include offense counts in configuration",
        "                                     file generated by --auto-gen-config.",
        "                                     Default is true.",
        "        --[no-]auto-gen-only-exclude Generate only Exclude parameters and not Max",
        "                                     when running --auto-gen-config, except if the",
        "                                     number of files with offenses is bigger than",
        "                                     exclude-limit. Default is false.",
        "        --[no-]auto-gen-timestamp    Include the date and time when the --auto-gen-config",
        "                                     was run in the file it generates. Default is true.",
        "        --[no-]auto-gen-enforced-style",
        "                                     Add a setting to the TODO configuration file to enforce",
        "                                     the style used, rather than a per-file exclusion",
        "                                     if one style is used in all files for cop with",
        "                                     EnforcedStyle as a configurable option",
        "                                     when the --auto-gen-config was run",
        "                                     in the file it generates. Default is true.",
        "",
        "Additional Modes:",
        "    -L, --list-target-files          List all files RuboCop will inspect.",
        "        --show-cops [COP1,COP2,...]  Shows the given cops, or all cops by",
        "                                     default, and their configurations for the",
        "                                     current directory.",
        "                                     You can use `*` as a wildcard.",
        "        --show-docs-url [COP1,COP2,...]",
        "                                     Display url to documentation for the given",
        "                                     cops, or base url by default.",
        "",
        "General Options:",
        "        --init                       Generate a .rubocop.yml file in the current directory.",
        "    -c, --config FILE                Specify configuration file.",
        "    -d, --debug                      Display debug info.",
        "        --plugin FILE                Load a RuboCop plugin.",
        "    -r, --require FILE               Require Ruby file.",
        "        --[no-]color                 Force color output on or off.",
        "    -v, --version                    Display version.",
        "    -V, --verbose-version            Display verbose version.",
        "",
        "Profiling Options:",
        "        --profile                    Profile rubocop.",
        "        --memory                     Profile rubocop memory usage."
    ],
    "ruff": [
        "Ruff: An extremely fast Python linter and code formatter.",
        "",
        "Usage: ruff [OPTIONS] <COMMAND>",
        "",
        "Commands:",
        "  check    Run Ruff on the given files or directories",
        "  rule     Explain a rule (or all rules)",
        "  config   List or describe the available configuration options",
        "  linter   List all supported upstream linters",
        "  clean    Clear any caches in the current directory and any subdirectories",
        "  format   Run the Ruff formatter on the given files or directories",
        "  server   Run the language server",
        "  analyze  Run analysis over Python source code",
        "  version  Display Ruff's version",
        "  help     Print this message or the help of the given subcommand(s)",
        "",
        "Options:",
        "  -h, --help     Print help",
        "  -V, --version  Print version",
        "",
        "Log levels:",
        "  -v, --verbose  Enable verbose logging",
        "  -q, --quiet    Print diagnostics, but nothing else",
        "  -s, --silent   Disable all logging (but still exit with status code \"1\" upon detecting",
        "                 diagnostics)",
        "",
        "Global options:",
        "      --config <CONFIG_OPTION>  Either a path to a TOML configuration file (`pyproject.toml` or",
        "                                `ruff.toml`), or a TOML `<KEY> = <VALUE>` pair (such as you might",
        "                                find in a `ruff.toml` configuration file) overriding a specific",
        "                                configuration option. Overrides of individual settings using this",
        "                                option always take precedence over all configuration files,",
        "                                including configuration files that were also specified using",
        "                                `--config`",
        "      --isolated                Ignore all configuration files",
        "",
        "For help with a specific command, see: `ruff help <command>`."
    ],
    "ruff-format": [
        "Ruff: An extremely fast Python linter and code formatter.",
        "",
        "Usage: ruff [OPTIONS] <COMMAND>",
        "",
        "Commands:",
        "  check    Run Ruff on the given files or directories",
        "  rule     Explain a rule (or all rules)",
        "  config   List or describe the available configuration options",
        "  linter   List all supported upstream linters",
        "  clean    Clear any caches in the current directory and any subdirectories",
        "  format   Run the Ruff formatter on the given files or directories",
        "  server   Run the language server",
        "  analyze  Run analysis over Python source code",
        "  version  Display Ruff's version",
        "  help     Print this message or the help of the given subcommand(s)",
        "",
        "Options:",
        "  -h, --help     Print help",
        "  -V, --version  Print version",
        "",
        "Log levels:",
        "  -v, --verbose  Enable verbose logging",
        "  -q, --quiet    Print diagnostics, but nothing else",
        "  -s, --silent   Disable all logging (but still exit with status code \"1\" upon detecting",
        "                 diagnostics)",
        "",
        "Global options:",
        "      --config <CONFIG_OPTION>  Either a path to a TOML configuration file (`pyproject.toml` or",
        "                                `ruff.toml`), or a TOML `<KEY> = <VALUE>` pair (such as you might",
        "                                find in a `ruff.toml` configuration file) overriding a specific",
        "                                configuration option. Overrides of individual settings using this",
        "                                option always take precedence over all configuration files,",
        "                                including configuration files that were also specified using",
        "                                `--config`",
        "      --isolated                Ignore all configuration files",
        "",
        "For help with a specific command, see: `ruff help <command>`."
    ],
    "scalafix": [
        "Scalafix 0.14.2",
        "Usage: scalafix [options] [<path> ...]",
        "",
        "Scalafix is a refactoring and linting tool. Scalafix supports both syntactic and",
        "semantic linter and rewrite rules. Syntactic rules can run on source code",
        "without compilation. Semantic rules can run on source code that has been",
        "compiled with the SemanticDB compiler plugin.",
        "",
        "Common options:",
        "",
        "  --rules | -r [String ...] (default: [])",
        "    Scalafix rules to run, for example ExplicitResultTypes. The syntax for rules is",
        "    documented in",
        "    https://scalacenter.github.io/scalafix/docs/users/configuration#rules",
        "",
        "  --files | -f [<path> ...] (default: [])",
        "    Files or directories (recursively visited) to fix.",
        "",
        "  --config <path> (default: null)",
        "    File path to a .scalafix.conf configuration file. Defaults to .scalafix.conf in",
        "    the current working directory, if any.",
        "",
        "  --check",
        "    Check that all files have been fixed with scalafix, exiting with non-zero code",
        "    on violations. Won't write to files.",
        "",
        "  --stdout",
        "    Print fixed output to stdout instead of writing in-place.",
        "",
        "  --diff",
        "    If set, only apply scalafix to added and edited files in git diff against the",
        "    master branch.",
        "",
        "  --diff-base String (default: null)",
        "    If set, only apply scalafix to added and edited files in git diff against a",
        "    provided branch, commit or tag.",
        "",
        "  --syntactic",
        "    Run only syntactic rules, ignore semantic rules even if they are explicitly",
        "    configured in .scalafix.conf or via --rules",
        "",
        "  --triggered",
        "    Overlay the default rules & rule settings in .scalafix.conf with the `triggered`",
        "    section",
        "",
        "  --verbose",
        "    Print out additional diagnostics while running scalafix.",
        "",
        "  --help | -h",
        "    Print out this help message and exit",
        "",
        "  --version | -v",
        "    Print out version number and exit",
        "",
        "Semantic options:",
        "",
        "  --classpath Classpath (default: \"<classpath>\")",
        "    Full classpath of the files to fix, required for semantic rules. The source",
        "    files that should be fixed must be compiled with semanticdb-scalac.",
        "    Dependencies are required by rules like ExplicitResultTypes, but the",
        "    dependencies do not need to be compiled with semanticdb-scalac.",
        "",
        "  --sourceroot <path> (default: null)",
        "    Absolute path passed to semanticdb with -P:semanticdb:sourceroot:<path>.",
        "    Relative filenames persisted in the Semantic DB are absolutized by the",
        "    sourceroot. Defaults to current working directory if not provided.",
        "",
        "  --semanticdb-targetroots [<path> ...] (default: [])",
        "    Absolute paths passed to semanticdb with -P:semanticdb:targetroot:<path>. Used",
        "    to locate semanticdb files. By default, Scalafix will try to locate",
        "    semanticdb files in the classpath",
        "",
        "  --auto-classpath",
        "    If set, automatically infer the --classpath flag by scanning for directories",
        "    with META-INF/semanticdb",
        "",
        "  --auto-classpath-roots [<path> ...] (default: [])",
        "    Additional directories to scan for --auto-classpath",
        "",
        "  --scalac-options [String ...] (default: [])",
        "    The scala compiler options used to compile this --classpath, for example",
        "    -Ywarn-unused-import",
        "",
        "  --scala-version ScalaVersion (default: \"2.13.16\")",
        "    The major or binary Scala version that the provided files are targeting, or the",
        "    full version that was used to compile them when a classpath is provided.",
        "",
        "Tab completions:",
        "",
        "  --bash",
        "    Print out bash tab completions. To install:",
        "    ```",
        "    # macOS, requires \"brew install bash-completion\"",
        "    scalafix --bash > /usr/local/etc/bash_completion.d/scalafix",
        "    # Linux",
        "    scalafix --bash > /etc/bash_completion.d/scalafix",
        "    ```",
        "",
        "  --zsh",
        "    Print out zsh tab completions. To install:",
        "    ```",
        "    scalafix --zsh > /usr/local/share/zsh/site-functions/_scalafix",
        "    unfunction _scalafix",
        "    autoload -U _scalafix",
        "    ```",
        "",
        "Less common options:",
        "",
        "  --exclude [<glob> ...] (default: [])",
        "    Unix-style glob for files to exclude from fixing. The glob syntax is defined by",
        "    `nio.FileSystem.getPathMatcher`.",
        "",
        "  --tool-classpath URLClassLoader (default: \"<classloader>\")",
        "    Additional classpath for compiling and classloading custom rules, as a set of",
        "    filesystem paths, separated by ':' on Unix or ';' on Windows.",
        "",
        "  --charset Charset (default: \"UTF-8\")",
        "    The encoding to use for reading/writing files",
        "",
        "  --no-sys-exit",
        "    If set, throw exception in the end instead of System.exit",
        "",
        "  --no-stale-semanticdb",
        "    Don't error on stale semanticdb files.",
        "",
        "  --settings ScalafixConfig (default: {})",
        "    Custom settings to override .scalafix.conf",
        "",
        "  --out-from String (default: null)",
        "    Write fixed output to custom location instead of in-place. Regex is passed as",
        "    first argument to file.replaceAll(--out-from, --out-to), requires --out-to.",
        "",
        "  --out-to String (default: null)",
        "    Companion of --out-from, string that is passed as second argument to",
        "    fileToFix.replaceAll(--out-from, --out-to)",
        "",
        "  --auto-suppress-linter-errors",
        "    Insert /* scalafix:ok */ suppressions instead of reporting linter errors.",
        "",
        "  --cwd <path> (default: \"/\")",
        "    The current working directory",
        ""
    ],
    "scss-lint": [
        "Usage: scss-lint [options] [scss-files]",
        "    -f, --format Formatter           Specify how to display lints",
        "    -r, --require path               Require Ruby file",
        "    -i, --include-linter linter,...  Specify which linters you want to run",
        "    -x, --exclude-linter linter,...  Specify which linters you don't want to run",
        "    -c, --config config-file         Specify which configuration file you want to use",
        "    -e, --exclude file,...           List of file names to exclude",
        "        --stdin-file-path file-path  Specify the path to assume for the file passed via STDIN",
        "    -o, --out path                   Write output to a file instead of STDOUT",
        "        --[no-]color                 Force output to be colorized",
        "        --show-formatters            Shows available formatters",
        "        --show-linters               Display available linters",
        "    -h, --help                       Display help documentation",
        "    -v, --version                    Display version",
        ""
    ],
    "secretlint": [
        "",
        "  Secretlint CLI that scan secret/credential data.",
        "",
        "  Usage",
        "    $ secretlint [file|glob*]",
        "",
        "  Note",
        "    supported glob syntax is based on microglob",
        "    https://github.com/micromatch/micromatch#matching-features",
        "",
        "  Options",
        "    --init             setup config file. Create .secretlintrc.json file from your package.json",
        "    --format           [String] formatter name. Default: \"stylish\". Available Formatter: checkstyle, compact, jslint-xml, junit, pretty-error, stylish, tap, unix, json, mask-result, table",
        "    --output           [path:String] output file path that is written of reported result.",
        "    --no-color         disable ANSI-color of output.",
        "    --no-terminalLink  disable terminalLink of output.",
        "    --maskSecrets      enable masking of secret values. replace actual secrets with \"***\".",
        "    --secretlintrc     [path:String] path to .secretlintrc config file. Default: .secretlintrc.*",
        "    --secretlintignore [path:String] path to .secretlintignore file. Default: .secretlintignore",
        "    --stdinFileName    [String] filename to process STDIN content. Some rules depend on filename to check content.",
        "",
        "  Options for Developer",
        "    --profile          Enable performance profile.",
        "    --secretlintrcJSON [String] a JSON string of .secretlintrc. use JSON string instead of rc file.",
        "",
        "  Experimental Options",
        "    --locale            [String] locale tag for translating message. Default: en",
        "",
        "  Examples",
        "    $ secretlint ./README.md",
        "    # glob pattern should be wrapped with double quote",
        "    $ secretlint \"**/*\"",
        "    $ secretlint \"source/**/*.ini\"",
        "    # found secrets and mask the secrets",
        "    $ secretlint .zsh_history --format=mask-result --output=.zsh_history",
        "    # lint STDIN content instead of file",
        "    $ echo \"SECRET CONTENT\" | secretlint --stdinFileName=secret.txt",
        "",
        "  Exit Status",
        "    Secretlint exits with the following values:",
        "",
        "    - 0:",
        "      - Linting succeeded, no errors found.",
        "      - Found lint error but --output is specified.",
        "    - 1:",
        "      - Linting failed, errors found.",
        "    - 2:",
        "      - Unexpected error occurred, fatal error.",
        ""
    ],
    "selene": [
        "selene 0.28.0",
        "",
        "USAGE:",
        "    selene [FLAGS] [OPTIONS] <files>...",
        "    selene <SUBCOMMAND>",
        "",
        "FLAGS:",
        "        --allow-warnings    Pass when only warnings occur",
        "    -h, --help              Prints help information",
        "        --no-exclude",
        "    -n, --no-summary        Suppress summary information",
        "    -q, --quiet             Display only the necessary information. Equivalent to --display-style=\"quiet\"",
        "    -V, --version           Prints version information",
        "",
        "OPTIONS:",
        "        --color <color>                     [default: auto]  [possible values: Always, Auto, Never]",
        "        --config <config>                  A toml file to configure the behavior of selene [default: selene.toml]",
        "        --display-style <display-style>    Sets the display method [possible values: Json, Json2, Rich, Quiet]",
        "        --num-threads <num-threads>        Number of threads to run on, default to the numbers of logical cores on your",
        "                                           system [default: 4]",
        "        --pattern <pattern>...             A glob to match files with to check",
        "",
        "ARGS:",
        "    <files>...",
        "",
        "SUBCOMMANDS:",
        "    capabilities           Prints the capabilities of the current build",
        "    generate-roblox-std",
        "    help                   Prints this message or the help of the given subcommand(s)",
        "    update-roblox-std",
        "    upgrade-std",
        "    validate-config"
    ],
    "semgrep": [
        "NAME",
        "       semgrep scan - run semgrep rules on files",
        "",
        "SYNOPSIS",
        "       semgrep scan [OPTION]\u2026 [TARGETS]\u2026",
        "",
        "DESCRIPTION",
        "       Searches TARGET paths for matches to rules or patterns. Defaults to",
        "       searching entire current working directory.",
        "",
        "       To get started quickly, run",
        "",
        "       semgrep --config auto .",
        "",
        "       This will automatically fetch rules for your project from the Semgrep",
        "       Registry. NOTE: Using `--config auto` will log in to the Semgrep",
        "       Registry with your project URL.",
        "",
        "       For more information about Semgrep, go to https://semgrep.dev.",
        "",
        "       NOTE: By default, Semgrep will report pseudonymous usage metrics to",
        "       its server if you pull your configuration from the Semgrep registry.",
        "       To learn more about how and why these metrics are collected, please",
        "       see https://semgrep.dev/docs/metrics. To modify this behavior, see the",
        "       --metrics option below.",
        "",
        "ARGUMENTS",
        "       TARGETS",
        "           Files or folders to be scanned by semgrep.",
        "",
        "OPTIONS",
        "       -a, --autofix",
        "           Apply autofix patches. WARNING: data loss can occur with this",
        "           flag. Make sure your files are stored in a version control system.",
        "           Note that this mode is experimental and not guaranteed to function",
        "           properly.",
        "",
        "       --allow-local-builds",
        "           Experimental: allow building projects contained in the repository.",
        "           This allows Semgrep to identify dependencies and dependency",
        "           relationships when lockfiles are not present or are insufficient.",
        "           However, building code may inherently require the execution of",
        "           code contained in the scanned project or in its dependencies,",
        "           which is a security risk.",
        "",
        "       --allow-untrusted-validators",
        "           Allows running rules with validators from origins other than",
        "           semgrep.dev. Avoid running rules from origins you don't trust.",
        "",
        "       --baseline-commit=VAL (absent SEMGREP_BASELINE_COMMIT env)",
        "           Only show results that are not found in this commit hash. Aborts",
        "           run if not currently in a git directory, there are unstaged",
        "           changes, or given baseline hash doesn't exist.",
        "",
        "       -d, --dump-command-for-core",
        "           <internal, do not use>",
        "",
        "       --dataflow-traces",
        "           Explain how non-local values reach the location of a finding (only",
        "           affects text and SARIF output).",
        "",
        "       --debug",
        "           All of --verbose, but with additional debugging information.",
        "",
        "       --develop",
        "           Living on the edge.",
        "",
        "       --diff-depth=VAL (absent=2)",
        "           The depth of the Pro (interfile) differential scan, the number of",
        "           steps (both in the caller and callee sides) from the targets in",
        "           the call graph tracked by the deep preprocessor. Only applied in",
        "           differential scan mode. Default to 2.",
        "",
        "       --disable-nosem",
        "           negates --enable-nosem",
        "",
        "       --disable-version-check",
        "           negates --enable-version-check",
        "",
        "       --dryrun",
        "           If --dryrun, does not write autofixes to a file. This will print",
        "           the changes to the console. This lets you see the changes before",
        "           you commit to them. Only works with the --autofix flag. Otherwise",
        "           does nothing.",
        "",
        "       --dump-ast",
        "           If --dump-ast, shows AST of the input file or passed expression",
        "           and then exit (can use --json).",
        "",
        "       --dump-engine-path",
        "           <internal, do not use>",
        "",
        "       -e VAL, --pattern=VAL",
        "           Code search pattern. See",
        "           https://semgrep.dev/docs/writing-rules/pattern-syntax for",
        "           information on pattern features.",
        "",
        "       --emacs",
        "           Output results in Emacs single-line format.",
        "",
        "       --emacs-output=VAL",
        "           Write a copy of the emacs output to a file or post to URL.",
        "",
        "       --enable-nosem",
        "           Enables 'nosem'. Findings will not be reported on lines containing",
        "           a 'nosem' comment at the end. Enabled by default.",
        "",
        "       --enable-version-check (absent SEMGREP_ENABLE_VERSION_CHECK env)",
        "           Checks Semgrep servers to see if the latest version is run;",
        "           disabling this may reduce exit time after returning results.",
        "",
        "       --error",
        "           Exit 1 if there are findings. Useful for CI and scripts.",
        "",
        "       --exclude=PATTERN",
        "           Skip any file or directory whose path that matches PATTERN.",
        "           '--exclude=*.py' will ignore the following: 'foo.py',",
        "           'src/foo.py', 'foo.py/bar.sh'. '--exclude=tests' will ignore",
        "           'tests/foo.py' as well as 'a/b/tests/c/foo.py'. Multiple",
        "           '--exclude' options may be specified. PATTERN is a glob-style",
        "           pattern that uses the same syntax as gitignore and semgrepignore,",
        "           which is documented at",
        "           https://git-scm.com/docs/gitignore#_pattern_format",
        "",
        "       --exclude-minified-files",
        "           Skip minified files. These are files that are > 7% whitespace, or",
        "           who have a large number of bytes per line. By default minified",
        "           files are scanned",
        "",
        "       --exclude-rule=VAL",
        "           Skip any rule with the given id. Can add multiple times.",
        "",
        "       --experimental",
        "           Enable experimental features.",
        "",
        "       -f VAL, -c VAL, --config=VAL (absent SEMGREP_RULES env)",
        "           YAML configuration file, directory of YAML files ending in",
        "           .yml|.yaml, URL of a configuration file, or Semgrep registry entry",
        "           name. Use --config auto to automatically obtain rules tailored to",
        "           this project; your project URL will be used to log in to the",
        "           Semgrep registry. To run multiple rule files simultaneously, use",
        "           --config before every YAML, URL, or Semgrep registry entry name.",
        "           For example `semgrep --config p/python --config",
        "           myrules/myrule.yaml` See",
        "           https://semgrep.dev/docs/writing-rules/rule-syntax for information",
        "           on configuration file format.",
        "",
        "       --files-with-matches",
        "           Output only the names of files containing matches. REQUIRES",
        "           --experimental",
        "",
        "       --force-color (absent SEMGREP_FORCE_COLOR env)",
        "           Always include ANSI color in the output, even if not writing to a",
        "           TTY; defaults to using the TTY status",
        "",
        "       --gitlab-sast",
        "           Output results in GitLab SAST format.",
        "",
        "       --gitlab-sast-output=VAL",
        "           Write a copy of the GitLab SAST output to a file or post to URL.",
        "",
        "       --gitlab-secrets",
        "           Output results in GitLab Secrets format.",
        "",
        "       --gitlab-secrets-output=VAL",
        "           Write a copy of the GitLab Secrets output to a file or post to",
        "           URL.",
        "",
        "       --historical-secrets",
        "           Scans git history using Secrets rules.",
        "",
        "       --include=PATTERN",
        "           Specify files or directories that should be scanned by semgrep,",
        "           excluding other files. This filter is applied after these other",
        "           filters: '--exclude' options, any filtering done by git (or other",
        "           SCM), and filtering by '.semgrepignore' files. Multiple",
        "           '--include' options can be specified. A file path is selected if",
        "           it matches at least one of the include patterns. PATTERN is a",
        "           glob-style pattern such as 'foo.*' that must match the path. For",
        "           example, specifying the language with '-l javascript' might",
        "           preselect files 'src/foo.jsx' and 'lib/bar.js'. Specifying one of",
        "           '--include=src', '--include=*.jsx', or '--include=src/foo.*' will",
        "           restrict the selection to the single file 'src/foo.jsx'. A choice",
        "           of multiple '--include' patterns can be specified. For example,",
        "           '--include=foo.* --include=bar.*' will select both 'src/foo.jsx'",
        "           and 'lib/bar.js'. Glob-style patterns follow the syntax supported",
        "           by gitignore and semgrepignore, which is documented at",
        "           https://git-scm.com/docs/gitignore#_pattern_format",
        "",
        "       --incremental-output",
        "           Output results incrementally. REQUIRES --experimental",
        "",
        "       --interfile-timeout=VAL (absent=0)",
        "           Maximum time to spend on interfile analysis. If set to 0 will not",
        "           have time limit. Defaults to 0 s for all CLI scans. For CI scans,",
        "           it defaults to 3 hours.",
        "",
        "       -j VAL, --jobs=VAL (absent=4)",
        "           Number of subprocesses to use to run checks in parallel. Defaults",
        "           to the number of cores detected on the system (1 if using --pro).",
        "",
        "       --json",
        "           Output results in Semgrep's JSON format.",
        "",
        "       --json-output=VAL",
        "           Write a copy of the json output to a file or post to URL.",
        "",
        "       --junit-xml",
        "           Output results in JUnit XML format.",
        "",
        "       --junit-xml-output=VAL",
        "           Write a copy of the JUnit XML output to a file or post to URL.",
        "",
        "       -l VAL, --lang=VAL",
        "           Parse pattern and all files in specified language. Must be used",
        "           with -e/--pattern.",
        "",
        "       --legacy",
        "           Prefer old (legacy) behavior.",
        "",
        "       --matching-explanations",
        "           Add debugging information in the JSON output to trace how",
        "           different parts of a rule are matched (a.k.a., \"Inspect Rule\" in",
        "           the Semgrep playground)",
        "",
        "       --max-chars-per-line=VAL (absent=160)",
        "           Maximum number of characters to show per line.",
        "",
        "       --max-lines-per-finding=VAL (absent=10)",
        "           Maximum number of lines of code that will be shown for each match",
        "           before trimming (set to 0 for unlimited).",
        "",
        "       --max-log-list-entries=VAL (absent=100)",
        "           Maximum number of entries that will be shown in the log (e.g.,",
        "           list of rule ids, list of skipped files). A zero or negative value",
        "           disables this filter. Defaults to 100",
        "",
        "       --max-memory=VAL (absent=0)",
        "           Maximum system memory in MiB to use during the interfile",
        "           pre-processing phase, or when running a rule on a single file. If",
        "           set to 0, will not have memory limit. Defaults to 0. For CI scans",
        "           that use the Pro Engine, defaults to 5000 MiB.",
        "",
        "       --max-target-bytes=VAL (absent=1000000)",
        "           Maximum size for a file to be scanned by Semgrep, e.g '1.5MB'. Any",
        "           input program larger than this will be ignored. A zero or negative",
        "           value disables this filter. Defaults to 1000000 bytes",
        "",
        "       --metrics=VAL (absent=auto or SEMGREP_SEND_METRICS env)",
        "           Configures how usage metrics are sent to the Semgrep server. If",
        "           'auto', metrics are sent whenever the --config value pulls from",
        "           the Semgrep server. If 'on', metrics are always sent. If 'off',",
        "           metrics are disabled altogether and not sent. If absent, the",
        "           SEMGREP_SEND_METRICS environment variable value will be used. If",
        "           no environment variable, defaults to 'auto'.",
        "",
        "       --no-autofix",
        "           negates -a/--autofix",
        "",
        "       --no-dryrun",
        "           negates --dryrun",
        "",
        "       --no-error",
        "           negates --error",
        "",
        "       --no-exclude-minified-files",
        "           negates --exclude-minified-files",
        "",
        "       --no-force-color",
        "           negates --force-color",
        "",
        "       --no-git-ignore",
        "           negates --use-git-ignore",
        "",
        "       --no-rewrite-rule-ids",
        "           negates --rewrite-rule-ids",
        "",
        "       --no-secrets-validation",
        "           Disables secret validation.",
        "",
        "       --no-semgrepignore-v2",
        "           negates --semgrepignore-v2",
        "",
        "       --no-strict",
        "           negates --strict",
        "",
        "       --no-test-ignore-todo",
        "           negates --test-ignore-todo",
        "",
        "       --no-time",
        "           negates --time",
        "",
        "       --no-trace",
        "           negates --trace",
        "",
        "       -o VAL, --output=VAL",
        "           Save search results to a file or post to URL. Default is to print",
        "           to stdout.",
        "",
        "       --optimizations=VAL (absent=all)",
        "           Turn on/off optimizations. Default = 'all'. Use 'none' to turn all",
        "           optimizations off.",
        "",
        "       --oss-only",
        "           Run using only the OSS engine, even if the Semgrep Pro toggle is",
        "           on. This may still run Pro rules, but only using the OSS features.",
        "",
        "       --pro",
        "           Inter-file analysis and Pro languages (currently Apex, C#, and",
        "           Elixir. Requires Semgrep Pro Engine. See",
        "           https://semgrep.dev/products/pro-engine/ for more.",
        "",
        "       --pro-intrafile",
        "           Intra-file inter-procedural taint analysis. Implies",
        "           --pro-languages. Requires Semgrep Pro Engine. See",
        "           https://semgrep.dev/products/pro-engine/ for more.",
        "",
        "       --pro-languages",
        "           Enable Pro languages (currently Apex, C#, and Elixir). Requires",
        "           Semgrep Pro Engine. See https://semgrep.dev/products/pro-engine/",
        "           for more.",
        "",
        "       --pro-path-sensitive",
        "           Path sensitivity. Implies --pro-intrafile. Requires Semgrep Pro",
        "           Engine. See https://semgrep.dev/products/pro-engine/ for more.",
        "",
        "       --profile",
        "           <undocumented>",
        "",
        "       --project-root=VAL",
        "           Semgrep normally determines the type of project (git or novcs) and",
        "           the project root automatically. The project root is then used to",
        "           locate and use '.gitignore' and '.semgrepignore' files which",
        "           determine target files that should be ignored by semgrep. This",
        "           option forces the project root to be a specific folder and assumes",
        "           a local project without version control (novcs). This option is",
        "           useful to ensure the '.semgrepignore' file that may exist at the",
        "           project root is consulted when the scanning root is not the",
        "           current folder '.'. A valid project root must be a folder (path",
        "           referencing a directory) whose physical path is a prefix of the",
        "           physical path of the scanning roots passed on the command line.",
        "           For example, the command 'semgrep scan --project-root . src' is",
        "           valid if '.' is '/home/me' and 'src' is a directory or a symbolic",
        "           link to a '/home/me/sources' directory or a symbolic link to a",
        "           'sources' directory but not if it is a symbolic link to a",
        "           directory '/var/sources' (assuming '/var' is not a symbolic link).",
        "           REQUIRES --experimental",
        "",
        "       -q, --quiet",
        "           Only output findings.",
        "",
        "       --remote=VAL",
        "           Remote will quickly check out and scan a remote git repository of",
        "           the format \"http[s]://<WEBSITE>/.../<REPO>.git\". Must be run with",
        "           --pro. Incompatible with --project-root. Note this requires an",
        "           empty CWD as this command will clone the repository into the CWD.",
        "           REQUIRES --experimental",
        "",
        "       --replacement=VAL",
        "           An autofix expression that will be applied to any matches found",
        "           with --pattern. Only valid with a command-line specified pattern.",
        "",
        "       --rewrite-rule-ids",
        "           Rewrite rule ids when they appear in nested sub-directories (Rule",
        "           'foo' in test/rules.yaml will be renamed 'test.foo').",
        "",
        "       --sarif",
        "           Output results in SARIF format.",
        "",
        "       --sarif-output=VAL",
        "           Write a copy of the SARIF output to a file or post to URL.",
        "",
        "       --scan-unknown-extensions",
        "           If true, target files specified directly on the command line will",
        "           bypass normal language detection. They will be analyzed according",
        "           to the value of --lang if applicable, or otherwise with the",
        "           analyzers/languages specified in the Semgrep rule(s) regardless of",
        "           file extension or file type. This setting doesn't apply to target",
        "           files discovered by scanning folders. Defaults to false.",
        "",
        "       --secrets",
        "           Run Semgrep Secrets product, including support for secret",
        "           validation. Requires access to Secrets, contact",
        "           support@semgrep.com for more information.",
        "",
        "       --semgrepignore-v2",
        "           Under development. Not currently recommended.",
        "",
        "       --severity=VAL",
        "           Report findings only from rules matching the supplied severity",
        "           level. By default all applicable rules are run. Can add multiple",
        "           times. Each should be one of INFO, WARNING, or ERROR.",
        "",
        "       --show-supported-languages",
        "           Print a list of languages that are currently supported by Semgrep.",
        "",
        "       --skip-unknown-extensions",
        "           negates --scan-unknown-extensions",
        "",
        "       --strict",
        "           Return a nonzero exit code when WARN level errors are encountered.",
        "           Fails early if invalid configuration files are present. Defaults",
        "           to --no-strict.",
        "",
        "       --test",
        "           Run test suite.",
        "",
        "       --test-ignore-todo",
        "           If --test-ignore-todo, ignores rules marked as '#todoruleid:' in",
        "           test files.",
        "",
        "       --text",
        "           Output results in text format.",
        "",
        "       --text-output=VAL",
        "           Write a copy of the text output to a file or post to URL.",
        "",
        "       --time",
        "           Include a timing summary with the results. If output format is",
        "           json, provides times for each pair (rule, target). This feature is",
        "           meant for internal use and may be changed or removed without",
        "           warning. At the current moment, --trace is better supported.",
        "",
        "       --timeout=VAL (absent=5.)",
        "           Maximum time to spend running a rule on a single file in seconds.",
        "           If set to 0 will not have time limit. Defaults to 5.0 s.",
        "",
        "       --timeout-threshold=VAL (absent=3)",
        "           Maximum number of rules that can time out on a file before the",
        "           file is skipped. If set to 0 will not have limit. Defaults to 3.",
        "",
        "       --trace",
        "           Record traces from Semgrep scans to help debugging. This feature",
        "           is meant for internal use and may be changed or removed without",
        "           warning.",
        "",
        "       --trace-endpoint=VAL (absent SEMGREP_OTEL_ENDPOINT env)",
        "           Endpoint to send OpenTelemetry traces to, if `--trace` is present.",
        "           The value may be `semgrep-prod` (default), `semgrep-dev`,",
        "           `semgrep-local`, or any valid URL. This feature is meant for",
        "           internal use and may be changed or removed without warning.",
        "",
        "       --use-git-ignore",
        "           '--no-git-ignore' causes semgrep to not call 'git' and not consult",
        "           '.gitignore' files to determine which files semgrep should scan.",
        "           As a result of '--no-git-ignore', gitignored files and git",
        "           submodules will be scanned. This flag has no effect if the",
        "           scanning root is not in a git repository. '--use-git-ignore' is",
        "           semgrep's default behavior.",
        "",
        "       -v, --verbose",
        "           Show more details about what rules are running, which files failed",
        "           to parse, etc.",
        "",
        "       --validate",
        "           Validate configuration file(s). This will check YAML files for",
        "           errors and run 'p/semgrep-rule-lints' on the YAML files. No search",
        "           is performed.",
        "",
        "       --version",
        "           Show the version and exit.",
        "",
        "       --vim",
        "           Output results in vim single-line format.",
        "",
        "       --vim-output=VAL",
        "           Write a copy of the vim output to a file or post to URL.",
        "",
        "       --x-ignore-semgrepignore-files",
        "           [INTERNAL] Ignore all '.semgrepignore' files found in the project",
        "           tree for the purpose of selecting target files to be scanned by",
        "           semgrep. Other filters may still apply. THIS OPTION IS NOT PART OF",
        "           THE SEMGREP API AND MAY CHANGE OR DISAPPEAR WITHOUT NOTICE.",
        "",
        "       --x-ls",
        "           [INTERNAL] List the selected target files before any rule-specific",
        "           or language-specific filtering. Then exit. The default output",
        "           format is one path per line. THIS OPTION IS NOT PART OF THE",
        "           SEMGREP API AND MAY CHANGE OR DISAPPEAR WITHOUT NOTICE.",
        "",
        "       --x-ls-long",
        "           [INTERNAL] Show selected targets and skipped targets with reasons",
        "           why they were skipped, using an unspecified output format. Implies",
        "           --x-ls. THIS OPTION IS NOT PART OF THE SEMGREP API AND MAY CHANGE",
        "           OR DISAPPEAR WITHOUT NOTICE.",
        "",
        "       --x-tr",
        "           <internal, do not use>",
        "",
        "COMMON OPTIONS",
        "       --help[=FMT] (default=auto)",
        "           Show this help in format FMT. The value FMT must be one of auto,",
        "           pager, groff or plain. With auto, the format is pager or plain",
        "           whenever the TERM env var is dumb or undefined.",
        "",
        "EXIT STATUS",
        "       semgrep scan exits with:",
        "",
        "       0   on success.",
        "",
        "       123 on indiscriminate errors reported on standard error.",
        "",
        "       124 on command line parsing errors.",
        "",
        "       125 on unexpected internal errors (bugs).",
        "",
        "ENVIRONMENT",
        "       These environment variables affect the execution of semgrep scan:",
        "",
        "       SEMGREP_BASELINE_COMMIT",
        "           See option --baseline-commit.",
        "",
        "       SEMGREP_ENABLE_VERSION_CHECK",
        "           See option --enable-version-check.",
        "",
        "       SEMGREP_FORCE_COLOR",
        "           See option --force-color.",
        "",
        "       SEMGREP_OTEL_ENDPOINT",
        "           See option --trace-endpoint.",
        "",
        "       SEMGREP_RULES",
        "           See option --config.",
        "",
        "       SEMGREP_SEND_METRICS",
        "           See option --metrics.",
        "",
        "AUTHORS",
        "       Semgrep Inc. <support@semgrep.com>",
        "",
        "BUGS",
        "       If you encounter an issue, please report it at",
        "       https://github.com/semgrep/semgrep/issues",
        ""
    ],
    "sfdx-scanner": [
        "evaluate a selection of rules against a codebase",
        "",
        "USAGE",
        "  $ sfdx scanner:run -t <array> [-c <array>] [-r <array>] [-e <array>] [-f",
        "  csv|html|json|junit|sarif|table|xml] [-o <string>] [--tsconfig <string>]",
        "  [--eslintconfig <string>] [--pmdconfig <string>] [--env <string>] [-v |",
        "  --json] [--verbose] [--loglevel",
        "  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]",
        "",
        "OPTIONS",
        "  -c, --category=category",
        "      categor(ies) of rules to run",
        "",
        "  -e, --engine=engine",
        "      engine(s) to run",
        "",
        "  -f, --format=(csv|html|json|junit|sarif|table|xml)",
        "      format of results",
        "",
        "  -o, --outfile=outfile",
        "      location of output file",
        "",
        "  -r, --ruleset=ruleset",
        "      [deprecated] ruleset(s) of rules to run",
        "",
        "  -t, --target=target",
        "      (required) location of source code",
        "",
        "  -v, --violations-cause-error",
        "      throws an error when violations are detected",
        "",
        "  --env=env",
        "      JSON-formatted string, overrides ESLint's default environment variables",
        "",
        "  --eslintconfig=eslintconfig",
        "      location of eslintrc config to customize eslint engine",
        "",
        "  --json",
        "      format output as json",
        "",
        "  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA",
        "  L)",
        "      [default: warn] logging level for this command invocation",
        "",
        "  --pmdconfig=pmdconfig",
        "      location of PMD rule reference XML file to customize rule selection",
        "",
        "  --tsconfig=tsconfig",
        "      location of tsconfig.json file",
        "",
        "  --verbose",
        "      emit additional command output to stdout",
        "",
        "EXAMPLE",
        "  Invoking without specifying any rules causes all rules to be run.",
        "    E.g., $ sfdx scanner:run --format xml --target \"somefile.js\"",
        "      Evaluates all rules against somefile.js.",
        "",
        "    Specifying multiple categories is treated as a logical OR.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category",
        "  \"Design,Best Practices\"",
        "        Evaluates all rules in the Design or Best Practices categories.",
        "",
        "    Categories can be excluded by specifying the negation operator, the values",
        "  must be enclosed in single quotes.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category",
        "  '!Design,!Best Practices'",
        "        Evaluates all rules except those in the Design or Best Practices categories.",
        "",
        "    Wrap globs in quotes.",
        "      Unix example:    $ sfdx scanner:run --target './**/*.js,!./**/IgnoreMe.js' ...",
        "      Windows example: > sfdx scanner:run --target \".\\**\\*.js,!.\\**\\IgnoreMe.js\" ...",
        "        Evaluate rules against all .js files below the current directory, except for",
        "  IgnoreMe.js.",
        "",
        "    Specify tsconfig.json if the current working directory does not contain the",
        "  tsconfig.json that corresponds to the TypeScript files being scanned.",
        "      E.g., sfdx scanner:run --target \"/my-project/**/*.ts\" --tsconfig",
        "  \"/my-project/tsconfig.json\"",
        "        Scans the project contained in '/my-project' if the current working directory",
        "  is another directory.",
        "",
        "    Use --env to override the default ESLint environment variables to add",
        "  frameworks.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --env '{\"jasmine\": true}'",
        "        Evaluates rules against somefile.js, including Jasmine in the environment",
        "  variables.",
        "",
        "    Use --violations-cause-error to throw exit with a non-zero code when",
        "  violations are found.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --violations-cause-error",
        "        Evaluates rules against somefile.js. If any rules are violated, the exit code",
        "  will be the severity of the most severe violation.",
        "",
        "    Use --engine to include or exclude engines. Any engine listed will be run,",
        "  regardless of its current 'disabled' attribute.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --engine \"eslint-lwc,pmd\"",
        "        Evaluates rules against somefile.js, using eslint-lwc and pmd engines.",
        "",
        "    To use PMD with your own rule reference file, use --pmdconfig. Note that rule",
        "  filters are not applied.",
        "      E.g, $ sfdx scanner:run --target \"src\" --pmdconfig \"pmd_rule_ref.xml\"",
        "",
        "    To use Eslint with your own .eslintrc.json file, use --eslintconfig. Make sure",
        "  that the directory you run the command from has all the NPM dependencies",
        "  installed.",
        "      E.g., $ sfdx scanner:run --target \"src\" --eslintconfig",
        "  \"/home/my/setup/.eslintrc.json\"",
        "",
        "",
        " \u203a   Error: EEXIT: 0",
        " \u203a   Code: EEXIT",
        "NAME                                               LANGUAGES    CATEGORIES        RULESETS [DEP]                                    ENGINE",
        "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "VfCsrf                                             visualforce  Security          Basic VF                                          pmd",
        "VfHtmlStyleTagXss                                  visualforce  Security                                                            pmd",
        "VfUnescapeEl                                       visualforce  Security          Basic VF                                          pmd",
        "ApexAssertionsShouldIncludeMessage                 apex         Best Practices                                                      pmd",
        "ApexUnitTestClassShouldHaveAsserts                 apex         Best Practices    ApexUnit,Default ruleset...,quickstart            pmd",
        "ApexUnitTestMethodShouldHaveIsTestAnnotation       apex         Best Practices                                                      pmd",
        "ApexUnitTestShouldNotUseSeeAllDataTrue             apex         Best Practices    ApexUnit,Default ruleset...,quickstart            pmd",
        "AvoidGlobalModifier                                apex         Best Practices    Style,Default ruleset...,quickstart               pmd",
        "AvoidLogicInTrigger                                apex         Best Practices    Style,Default ruleset...,quickstart               pmd",
        "DebugsShouldUseLoggingLevel                        apex         Best Practices    quickstart                                        pmd",
        "UnusedLocalVariable                                apex         Best Practices                                                      pmd",
        "AvoidDmlStatementsInLoops                          apex         Performance       Default ruleset...,Performance                    pmd",
        "AvoidSoqlInLoops                                   apex         Performance       Default ruleset...,Performance                    pmd",
        "AvoidSoslInLoops                                   apex         Performance       Default ruleset...,Performance                    pmd",
        "OperationWithLimitsInLoop                          apex         Performance       quickstart                                        pmd",
        "ApexBadCrypto                                      apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexCRUDViolation                                  apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexCSRF                                           apex         Security          Security                                          pmd",
        "ApexDangerousMethods                               apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexInsecureEndpoint                               apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexOpenRedirect                                   apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexSharingViolations                              apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexSOQLInjection                                  apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexSuggestUsingNamedCred                          apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexXSSFromEscapeFalse                             apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexXSSFromURLParam                                apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ClassNamingConventions                             apex         Code Style        Style,Default ruleset...,quickstart               pmd",
        "IfElseStmtsMustUseBraces                           apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "IfStmtsMustUseBraces                               apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "FieldDeclarationsShouldBeAtStart                   apex         Code Style                                                          pmd",
        "FieldNamingConventions                             apex         Code Style        quickstart                                        pmd",
        "ForLoopsMustUseBraces                              apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "FormalParameterNamingConventions                   apex         Code Style        quickstart                                        pmd",
        "LocalVariableNamingConventions                     apex         Code Style        quickstart                                        pmd",
        "MethodNamingConventions                            apex         Code Style        Style,Default ruleset...,quickstart               pmd",
        "OneDeclarationPerLine                              apex         Code Style        Default ruleset...,quickstart                     pmd",
        "PropertyNamingConventions                          apex         Code Style        quickstart                                        pmd",
        "VariableNamingConventions                          apex         Code Style        Style,Default ruleset...                          pmd",
        "WhileLoopsMustUseBraces                            apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "AvoidDeeplyNestedIfStmts                           apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "CyclomaticComplexity                               apex         Design            Default ruleset...,Metrics tempora...,quickstart  pmd",
        "CognitiveComplexity                                apex         Design                                                              pmd",
        "ExcessiveClassLength                               apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "ExcessiveParameterList                             apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "ExcessivePublicCount                               apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "NcssConstructorCount                               apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "NcssMethodCount                                    apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "NcssTypeCount                                      apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "StdCyclomaticComplexity                            apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "TooManyFields                                      apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "ApexDoc                                            apex         Documentation     Default ruleset...,quickstart                     pmd",
        "ApexCSRF                                           apex         Error Prone       Default ruleset...,quickstart                     pmd",
        "AvoidDirectAccessTriggerMap                        apex         Error Prone       Style,Default ruleset...,quickstart               pmd",
        "AvoidHardcodingId                                  apex         Error Prone       Style,Default ruleset...,quickstart               pmd",
        "AvoidNonExistentAnnotations                        apex         Error Prone       Default ruleset...,quickstart                     pmd",
        "EmptyCatchBlock                                    apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyIfStmt                                        apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyStatementBlock                                apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyTryOrFinallyBlock                             apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyWhileStmt                                     apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "MethodWithSameNameAsEnclosingClass                 apex         Error Prone       Style,Default ruleset...,quickstart               pmd",
        "OverrideBothEqualsAndHashcode                      apex         Error Prone                                                         pmd",
        "TestMethodsMustBeInTestClasses                     apex         Error Prone                                                         pmd",
        "constructor-super                                  javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "for-direction                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "getter-return                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-async-promise-executor                          javascript   Possible Errors   Possible Errors                                   eslint",
        "no-case-declarations                               javascript   Best Practices    Best Practices                                    eslint",
        "no-class-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-compare-neg-zero                                javascript   Possible Errors   Possible Errors                                   eslint",
        "no-cond-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-const-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-constant-condition                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-control-regex                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-debugger                                        javascript   Possible Errors   Possible Errors                                   eslint",
        "no-delete-var                                      javascript   Variables         Variables                                         eslint",
        "no-dupe-args                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-dupe-class-members                              javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-dupe-keys                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-duplicate-case                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty                                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-character-class                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-pattern                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-ex-assign                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-boolean-cast                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-semi                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-fallthrough                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-func-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-global-assign                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-inner-declarations                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-invalid-regexp                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-irregular-whitespace                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-misleading-character-class                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-mixed-spaces-and-tabs                           javascript   Stylistic Issues  Stylistic Issues                                  eslint",
        "no-new-symbol                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-obj-calls                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-octal                                           javascript   Best Practices    Best Practices                                    eslint",
        "no-prototype-builtins                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-redeclare                                       javascript   Best Practices    Best Practices                                    eslint",
        "no-regex-spaces                                    javascript   Possible Errors   Possible Errors                                   eslint",
        "no-self-assign                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-shadow-restricted-names                         javascript   Variables         Variables                                         eslint",
        "no-sparse-arrays                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-this-before-super                               javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-undef                                           javascript   Variables         Variables                                         eslint",
        "no-unexpected-multiline                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unreachable                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-finally                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-negation                                 javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unused-labels                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-unused-vars                                     javascript   Variables         Variables                                         eslint",
        "no-useless-catch                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-useless-escape                                  javascript   Best Practices    Best Practices                                    eslint",
        "no-with                                            javascript   Best Practices    Best Practices                                    eslint",
        "require-yield                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "use-isnan                                          javascript   Possible Errors   Possible Errors                                   eslint",
        "valid-typeof                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "constructor-super                                  typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "for-direction                                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-async-promise-executor                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-case-declarations                               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-class-assign                                    typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-compare-neg-zero                                typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-cond-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-constant-condition                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-control-regex                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-debugger                                        typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-delete-var                                      typescript   Variables         Variables                                         eslint-typescript",
        "no-duplicate-case                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty                                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-character-class                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-pattern                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-ex-assign                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-extra-boolean-cast                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-fallthrough                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-func-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-global-assign                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-inner-declarations                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-invalid-regexp                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-irregular-whitespace                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-misleading-character-class                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-mixed-spaces-and-tabs                           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "no-obj-calls                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-octal                                           typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-prototype-builtins                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-regex-spaces                                    typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-self-assign                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-shadow-restricted-names                         typescript   Variables         Variables                                         eslint-typescript",
        "no-sparse-arrays                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unexpected-multiline                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-finally                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-negation                                 typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unused-labels                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-catch                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-escape                                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-var                                             typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-with                                            typescript   Best Practices    Best Practices                                    eslint-typescript",
        "prefer-const                                       typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-rest-params                                 typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-spread                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "require-yield                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "use-isnan                                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "@typescript-eslint/adjacent-overload-signatures    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/await-thenable                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/ban-types                       typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/consistent-type-assertions      typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/explicit-function-return-type   typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/member-delimiter-style          typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-array-constructor            typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-empty-function               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-empty-interface              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-explicit-any                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-for-in-array                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-inferrable-types             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-new                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-promises             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-namespace                    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-non-null-assertion           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-this-alias                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unnecessary-type-assertion   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unused-vars                  typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-use-before-define            typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-var-requires                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-includes                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-namespace-keyword        typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-regexp-exec              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-string-starts-ends-with  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/require-await                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/triple-slash-reference          typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/type-annotation-spacing         typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/unbound-method                  typescript   Best Practices    Best Practices                                    eslint-typescript"
    ],
    "sfdx-scanner-apex": [
        "Scan a codebase with all the rules in the registry, or use parameters to filter the rules based on rulename, category, or ruleset.",
        "",
        "USAGE",
        "  $ sf scanner run [--verbose] [-c <value>...] [-f",
        "    csv|html|json|junit|sarif|table|xml] [-o <value>] [-s <value> | --json]",
        "    [--normalize-severity] [-p <value>...] [-r <value>...] [-e eslint|eslint-lwc",
        "    |eslint-typescript|pmd|pmd-appexchange|retire-js|sfge|cpd...] [-t",
        "    <value>...] [--tsconfig <value>] [--eslintconfig <value>] [--pmdconfig",
        "    <value>] [--env <value>] [--verbose-violations]",
        "",
        "FLAGS",
        "  -c, --category=<value>...         One or more categories of rules to run.",
        "  -e, --engine=<option>...          Specify which engines to run.",
        "                                    <options: eslint|eslint-lwc|eslint-typescrip",
        "                                    t|pmd|pmd-appexchange|retire-js|sfge|cpd>",
        "  -f, --format=<option>             The output format for results written",
        "                                    directly to the console.",
        "                                    <options:",
        "                                    csv|html|json|junit|sarif|table|xml>",
        "  -o, --outfile=<value>             File to write output to.",
        "  -p, --projectdir=<value>...       The relative or absolute root project",
        "                                    directories used to set the context for",
        "                                    Graph Engine's analysis.",
        "  -r, --ruleset=<value>...          [Deprecated] Rulesets to run.",
        "  -s, --severity-threshold=<value>  An error will be thrown when a violation is",
        "                                    found with a severity equal to or greater",
        "                                    than the specified level.",
        "  -t, --target=<value>...           Source code location.",
        "      --env=<value>                 [Deprecated] Override ESLint's default",
        "                                    environment variables, in JSON-formatted",
        "                                    string.",
        "      --eslintconfig=<value>        Specify the location of eslintrc config to",
        "                                    customize eslint engine. The --tsconfig flag",
        "                                    can\u2019t be used with --eslintconfig flag.",
        "      --normalize-severity          Include normalized severity levels 1 (high),",
        "                                    2 (moderate), and 3 (low) with the results.",
        "      --pmdconfig=<value>           Location of PMD rule reference XML file to",
        "                                    customize rule selection.",
        "      --tsconfig=<value>            Location of tsconfig.json file used by the",
        "                                    eslint-typescript engine. The --tsconfig",
        "                                    flag can\u2019t be used with --eslintconfig flag.",
        "      --verbose                     Emit additional command output to stdout.",
        "      --verbose-violations          Includes Retire-js violation-message details",
        "                                    about each vulnerability in the results,",
        "                                    including summary, common vulnerabilities",
        "                                    and exposures (CVE), and URLs.",
        "",
        "GLOBAL FLAGS",
        "  --json  Format output as json.",
        "",
        "COMMANDS",
        "  scanner run dfa  Scan codebase with all DFA rules by default.",
        "",
        " \u203a   Warning: Plugin @salesforce/sfdx-scanner (4.10.0) differs from the version",
        " \u203a    specified by sf (4.9.0)",
        "Warning: We plan to stop supporting v4.x of Code Analyzer in the coming months. We highly recommend that you start using v5.x, which is currently in Beta. For information on v5.x, see https://developer.salesforce.com/docs/platform/salesforce-code-analyzer/guide/code-analyzer.html.",
        " name                                                   languages   categories            rulesets [dep] engine            is dfa is pilot",
        " \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        " VfCsrf                                                 visualforce Security                             pmd               N      N",
        " VfHtmlStyleTagXss                                      visualforce Security                             pmd               N      N",
        " VfUnescapeEl                                           visualforce Security                             pmd               N      N",
        " ApexAssertionsShouldIncludeMessage                     apex        Best Practices                       pmd               N      N",
        " ApexUnitTestClassShouldHaveAsserts                     apex        Best Practices        quickstart     pmd               N      N",
        " ApexUnitTestClassShouldHaveRunAs                       apex        Best Practices        quickstart     pmd               N      N",
        " ApexUnitTestMethodShouldHaveIsTestAnnotation           apex        Best Practices                       pmd               N      N",
        " ApexUnitTestShouldNotUseSeeAllDataTrue                 apex        Best Practices        quickstart     pmd               N      N",
        " AvoidGlobalModifier                                    apex        Best Practices        quickstart     pmd               N      N",
        " AvoidLogicInTrigger                                    apex        Best Practices        quickstart     pmd               N      N",
        " DebugsShouldUseLoggingLevel                            apex        Best Practices        quickstart     pmd               N      N",
        " UnusedLocalVariable                                    apex        Best Practices                       pmd               N      N",
        " QueueableWithoutFinalizer                              apex        Best Practices                       pmd               N      N",
        " AvoidDebugStatements                                   apex        Performance                          pmd               N      N",
        " AvoidNonRestrictiveQueries                             apex        Performance                          pmd               N      N",
        " EagerlyLoadedDescribeSObjectResult                     apex        Performance                          pmd               N      N",
        " OperationWithHighCostInLoop                            apex        Performance           quickstart     pmd               N      N",
        " OperationWithLimitsInLoop                              apex        Performance           quickstart     pmd               N      N",
        " ApexBadCrypto                                          apex        Security              quickstart     pmd               N      N",
        " ApexCRUDViolation                                      apex        Security              quickstart     pmd               N      N",
        " ApexDangerousMethods                                   apex        Security              quickstart     pmd               N      N",
        " ApexInsecureEndpoint                                   apex        Security              quickstart     pmd               N      N",
        " ApexOpenRedirect                                       apex        Security              quickstart     pmd               N      N",
        " ApexSharingViolations                                  apex        Security              quickstart     pmd               N      N",
        " ApexSOQLInjection                                      apex        Security              quickstart     pmd               N      N",
        " ApexSuggestUsingNamedCred                              apex        Security              quickstart     pmd               N      N",
        " ApexXSSFromEscapeFalse                                 apex        Security              quickstart     pmd               N      N",
        " ApexXSSFromURLParam                                    apex        Security              quickstart     pmd               N      N",
        " ClassNamingConventions                                 apex        Code Style            quickstart     pmd               N      N",
        " IfElseStmtsMustUseBraces                               apex        Code Style            quickstart     pmd               N      N",
        " IfStmtsMustUseBraces                                   apex        Code Style            quickstart     pmd               N      N",
        " FieldDeclarationsShouldBeAtStart                       apex        Code Style                           pmd               N      N",
        " FieldNamingConventions                                 apex        Code Style            quickstart     pmd               N      N",
        " ForLoopsMustUseBraces                                  apex        Code Style            quickstart     pmd               N      N",
        " FormalParameterNamingConventions                       apex        Code Style            quickstart     pmd               N      N",
        " LocalVariableNamingConventions                         apex        Code Style            quickstart     pmd               N      N",
        " MethodNamingConventions                                apex        Code Style            quickstart     pmd               N      N",
        " OneDeclarationPerLine                                  apex        Code Style            quickstart     pmd               N      N",
        " PropertyNamingConventions                              apex        Code Style            quickstart     pmd               N      N",
        " WhileLoopsMustUseBraces                                apex        Code Style            quickstart     pmd               N      N",
        " AvoidDeeplyNestedIfStmts                               apex        Design                quickstart     pmd               N      N",
        " UnusedMethod                                           apex        Design                               pmd               N      N",
        " CyclomaticComplexity                                   apex        Design                quickstart     pmd               N      N",
        " CognitiveComplexity                                    apex        Design                               pmd               N      N",
        " ExcessiveClassLength                                   apex        Design                quickstart     pmd               N      N",
        " ExcessiveParameterList                                 apex        Design                quickstart     pmd               N      N",
        " ExcessivePublicCount                                   apex        Design                quickstart     pmd               N      N",
        " NcssConstructorCount                                   apex        Design                quickstart     pmd               N      N",
        " NcssMethodCount                                        apex        Design                quickstart     pmd               N      N",
        " NcssTypeCount                                          apex        Design                quickstart     pmd               N      N",
        " StdCyclomaticComplexity                                apex        Design                quickstart     pmd               N      N",
        " TooManyFields                                          apex        Design                quickstart     pmd               N      N",
        " ApexDoc                                                apex        Documentation         quickstart     pmd               N      N",
        " ApexCSRF                                               apex        Error Prone           quickstart     pmd               N      N",
        " AvoidDirectAccessTriggerMap                            apex        Error Prone           quickstart     pmd               N      N",
        " AvoidHardcodingId                                      apex        Error Prone           quickstart     pmd               N      N",
        " AvoidNonExistentAnnotations                            apex        Error Prone           quickstart     pmd               N      N",
        " EmptyCatchBlock                                        apex        Error Prone           quickstart     pmd               N      N",
        " EmptyIfStmt                                            apex        Error Prone           quickstart     pmd               N      N",
        " EmptyStatementBlock                                    apex        Error Prone           quickstart     pmd               N      N",
        " EmptyTryOrFinallyBlock                                 apex        Error Prone           quickstart     pmd               N      N",
        " EmptyWhileStmt                                         apex        Error Prone           quickstart     pmd               N      N",
        " InaccessibleAuraEnabledGetter                          apex        Error Prone                          pmd               N      N",
        " MethodWithSameNameAsEnclosingClass                     apex        Error Prone           quickstart     pmd               N      N",
        " OverrideBothEqualsAndHashcode                          apex        Error Prone                          pmd               N      N",
        " TestMethodsMustBeInTestClasses                         apex        Error Prone                          pmd               N      N",
        " constructor-super                                      javascript  problem               problem        eslint            N      N",
        " for-direction                                          javascript  problem               problem        eslint            N      N",
        " getter-return                                          javascript  problem               problem        eslint            N      N",
        " no-async-promise-executor                              javascript  problem               problem        eslint            N      N",
        " no-case-declarations                                   javascript  suggestion            suggestion     eslint            N      N",
        " no-class-assign                                        javascript  problem               problem        eslint            N      N",
        " no-compare-neg-zero                                    javascript  problem               problem        eslint            N      N",
        " no-cond-assign                                         javascript  problem               problem        eslint            N      N",
        " no-const-assign                                        javascript  problem               problem        eslint            N      N",
        " no-constant-condition                                  javascript  problem               problem        eslint            N      N",
        " no-control-regex                                       javascript  problem               problem        eslint            N      N",
        " no-debugger                                            javascript  problem               problem        eslint            N      N",
        " no-delete-var                                          javascript  suggestion            suggestion     eslint            N      N",
        " no-dupe-args                                           javascript  problem               problem        eslint            N      N",
        " no-dupe-class-members                                  javascript  problem               problem        eslint            N      N",
        " no-dupe-else-if                                        javascript  problem               problem        eslint            N      N",
        " no-dupe-keys                                           javascript  problem               problem        eslint            N      N",
        " no-duplicate-case                                      javascript  problem               problem        eslint            N      N",
        " no-empty                                               javascript  suggestion            suggestion     eslint            N      N",
        " no-empty-character-class                               javascript  problem               problem        eslint            N      N",
        " no-empty-pattern                                       javascript  problem               problem        eslint            N      N",
        " no-ex-assign                                           javascript  problem               problem        eslint            N      N",
        " no-extra-boolean-cast                                  javascript  suggestion            suggestion     eslint            N      N",
        " no-fallthrough                                         javascript  problem               problem        eslint            N      N",
        " no-func-assign                                         javascript  problem               problem        eslint            N      N",
        " no-global-assign                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-import-assign                                       javascript  problem               problem        eslint            N      N",
        " no-inner-declarations                                  javascript  problem               problem        eslint            N      N",
        " no-invalid-regexp                                      javascript  problem               problem        eslint            N      N",
        " no-irregular-whitespace                                javascript  problem               problem        eslint            N      N",
        " no-loss-of-precision                                   javascript  problem               problem        eslint            N      N",
        " no-misleading-character-class                          javascript  problem               problem        eslint            N      N",
        " no-new-symbol                                          javascript  problem               problem        eslint            N      N",
        " no-nonoctal-decimal-escape                             javascript  suggestion            suggestion     eslint            N      N",
        " no-obj-calls                                           javascript  problem               problem        eslint            N      N",
        " no-octal                                               javascript  suggestion            suggestion     eslint            N      N",
        " no-prototype-builtins                                  javascript  problem               problem        eslint            N      N",
        " no-redeclare                                           javascript  suggestion            suggestion     eslint            N      N",
        " no-regex-spaces                                        javascript  suggestion            suggestion     eslint            N      N",
        " no-self-assign                                         javascript  problem               problem        eslint            N      N",
        " no-setter-return                                       javascript  problem               problem        eslint            N      N",
        " no-shadow-restricted-names                             javascript  suggestion            suggestion     eslint            N      N",
        " no-sparse-arrays                                       javascript  problem               problem        eslint            N      N",
        " no-this-before-super                                   javascript  problem               problem        eslint            N      N",
        " no-undef                                               javascript  problem               problem        eslint            N      N",
        " no-unexpected-multiline                                javascript  problem               problem        eslint            N      N",
        " no-unreachable                                         javascript  problem               problem        eslint            N      N",
        " no-unsafe-finally                                      javascript  problem               problem        eslint            N      N",
        " no-unsafe-negation                                     javascript  problem               problem        eslint            N      N",
        " no-unsafe-optional-chaining                            javascript  problem               problem        eslint            N      N",
        " no-unused-labels                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-unused-vars                                         javascript  problem               problem        eslint            N      N",
        " no-useless-backreference                               javascript  problem               problem        eslint            N      N",
        " no-useless-catch                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-useless-escape                                      javascript  suggestion            suggestion     eslint            N      N",
        " no-with                                                javascript  suggestion            suggestion     eslint            N      N",
        " require-yield                                          javascript  suggestion            suggestion     eslint            N      N",
        " use-isnan                                              javascript  problem               problem        eslint            N      N",
        " valid-typeof                                           javascript  problem               problem        eslint            N      N",
        " for-direction                                          typescript  problem               problem        eslint-typescript N      N",
        " no-async-promise-executor                              typescript  problem               problem        eslint-typescript N      N",
        " no-case-declarations                                   typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-class-assign                                        typescript  problem               problem        eslint-typescript N      N",
        " no-compare-neg-zero                                    typescript  problem               problem        eslint-typescript N      N",
        " no-cond-assign                                         typescript  problem               problem        eslint-typescript N      N",
        " no-constant-condition                                  typescript  problem               problem        eslint-typescript N      N",
        " no-control-regex                                       typescript  problem               problem        eslint-typescript N      N",
        " no-debugger                                            typescript  problem               problem        eslint-typescript N      N",
        " no-delete-var                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-dupe-else-if                                        typescript  problem               problem        eslint-typescript N      N",
        " no-duplicate-case                                      typescript  problem               problem        eslint-typescript N      N",
        " no-empty                                               typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-empty-character-class                               typescript  problem               problem        eslint-typescript N      N",
        " no-empty-pattern                                       typescript  problem               problem        eslint-typescript N      N",
        " no-ex-assign                                           typescript  problem               problem        eslint-typescript N      N",
        " no-extra-boolean-cast                                  typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-fallthrough                                         typescript  problem               problem        eslint-typescript N      N",
        " no-global-assign                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-inner-declarations                                  typescript  problem               problem        eslint-typescript N      N",
        " no-invalid-regexp                                      typescript  problem               problem        eslint-typescript N      N",
        " no-irregular-whitespace                                typescript  problem               problem        eslint-typescript N      N",
        " no-misleading-character-class                          typescript  problem               problem        eslint-typescript N      N",
        " no-nonoctal-decimal-escape                             typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-octal                                               typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-prototype-builtins                                  typescript  problem               problem        eslint-typescript N      N",
        " no-regex-spaces                                        typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-self-assign                                         typescript  problem               problem        eslint-typescript N      N",
        " no-shadow-restricted-names                             typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-sparse-arrays                                       typescript  problem               problem        eslint-typescript N      N",
        " no-unexpected-multiline                                typescript  problem               problem        eslint-typescript N      N",
        " no-unsafe-finally                                      typescript  problem               problem        eslint-typescript N      N",
        " no-unsafe-optional-chaining                            typescript  problem               problem        eslint-typescript N      N",
        " no-unused-labels                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-useless-backreference                               typescript  problem               problem        eslint-typescript N      N",
        " no-useless-catch                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-useless-escape                                      typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-var                                                 typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-with                                                typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-const                                           typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-rest-params                                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-spread                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " require-yield                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " use-isnan                                              typescript  problem               problem        eslint-typescript N      N",
        " valid-typeof                                           typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/await-thenable                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/ban-ts-comment                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/ban-types                           typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-array-constructor                typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-base-to-string                   typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-duplicate-enum-values            typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-duplicate-type-constituents      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-explicit-any                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-extra-non-null-assertion         typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-floating-promises                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-for-in-array                     typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-implied-eval                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-loss-of-precision                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-misused-new                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-misused-promises                 typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-namespace                        typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-non-null-asserted-optional-chain typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-redundant-type-constituents      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-this-alias                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unnecessary-type-assertion       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unnecessary-type-constraint      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-argument                  typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-assignment                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-call                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-declaration-merging       typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-enum-comparison           typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-member-access             typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-return                    typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unused-vars                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-var-requires                     typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/prefer-as-const                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/require-await                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/restrict-plus-operands              typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/restrict-template-expressions       typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/triple-slash-reference              typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/unbound-method                      typescript  problem               problem        eslint-typescript N      N",
        " insecure-bundled-dependencies                          javascript  Insecure Dependencies                retire-js         N      N",
        " AvoidDatabaseOperationInLoop                           apex        Performance                          sfge              Y      N",
        " AvoidMultipleMassSchemaLookups                         apex        Performance                          sfge              Y      N",
        " ApexFlsViolationRule                                   apex        Security                             sfge              Y      N",
        " RemoveUnusedMethod                                     apex        Performance                          sfge              Y      Y",
        " PerformNullCheckOnSoqlVariables                        apex        Performance                          sfge              Y      N",
        " UseWithSharingOnDatabaseOperation                      apex        Security                             sfge              Y      N",
        " ApexNullPointerExceptionRule                           apex        Error Prone                          sfge              Y      N",
        " UnimplementedTypeRule                                  apex        Performance                          sfge              N      N"
    ],
    "sfdx-scanner-aura": [
        "Scan a codebase with all the rules in the registry, or use parameters to filter the rules based on rulename, category, or ruleset.",
        "",
        "USAGE",
        "  $ sf scanner run [--verbose] [-c <value>...] [-f",
        "    csv|html|json|junit|sarif|table|xml] [-o <value>] [-s <value> | --json]",
        "    [--normalize-severity] [-p <value>...] [-r <value>...] [-e eslint|eslint-lwc",
        "    |eslint-typescript|pmd|pmd-appexchange|retire-js|sfge|cpd...] [-t",
        "    <value>...] [--tsconfig <value>] [--eslintconfig <value>] [--pmdconfig",
        "    <value>] [--env <value>] [--verbose-violations]",
        "",
        "FLAGS",
        "  -c, --category=<value>...         One or more categories of rules to run.",
        "  -e, --engine=<option>...          Specify which engines to run.",
        "                                    <options: eslint|eslint-lwc|eslint-typescrip",
        "                                    t|pmd|pmd-appexchange|retire-js|sfge|cpd>",
        "  -f, --format=<option>             The output format for results written",
        "                                    directly to the console.",
        "                                    <options:",
        "                                    csv|html|json|junit|sarif|table|xml>",
        "  -o, --outfile=<value>             File to write output to.",
        "  -p, --projectdir=<value>...       The relative or absolute root project",
        "                                    directories used to set the context for",
        "                                    Graph Engine's analysis.",
        "  -r, --ruleset=<value>...          [Deprecated] Rulesets to run.",
        "  -s, --severity-threshold=<value>  An error will be thrown when a violation is",
        "                                    found with a severity equal to or greater",
        "                                    than the specified level.",
        "  -t, --target=<value>...           Source code location.",
        "      --env=<value>                 [Deprecated] Override ESLint's default",
        "                                    environment variables, in JSON-formatted",
        "                                    string.",
        "      --eslintconfig=<value>        Specify the location of eslintrc config to",
        "                                    customize eslint engine. The --tsconfig flag",
        "                                    can\u2019t be used with --eslintconfig flag.",
        "      --normalize-severity          Include normalized severity levels 1 (high),",
        "                                    2 (moderate), and 3 (low) with the results.",
        "      --pmdconfig=<value>           Location of PMD rule reference XML file to",
        "                                    customize rule selection.",
        "      --tsconfig=<value>            Location of tsconfig.json file used by the",
        "                                    eslint-typescript engine. The --tsconfig",
        "                                    flag can\u2019t be used with --eslintconfig flag.",
        "      --verbose                     Emit additional command output to stdout.",
        "      --verbose-violations          Includes Retire-js violation-message details",
        "                                    about each vulnerability in the results,",
        "                                    including summary, common vulnerabilities",
        "                                    and exposures (CVE), and URLs.",
        "",
        "GLOBAL FLAGS",
        "  --json  Format output as json.",
        "",
        "COMMANDS",
        "  scanner run dfa  Scan codebase with all DFA rules by default.",
        "",
        " \u203a   Warning: Plugin @salesforce/sfdx-scanner (4.10.0) differs from the version",
        " \u203a    specified by sf (4.9.0)",
        "Warning: We plan to stop supporting v4.x of Code Analyzer in the coming months. We highly recommend that you start using v5.x, which is currently in Beta. For information on v5.x, see https://developer.salesforce.com/docs/platform/salesforce-code-analyzer/guide/code-analyzer.html.",
        " name                                                   languages   categories            rulesets [dep] engine            is dfa is pilot",
        " \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        " VfCsrf                                                 visualforce Security                             pmd               N      N",
        " VfHtmlStyleTagXss                                      visualforce Security                             pmd               N      N",
        " VfUnescapeEl                                           visualforce Security                             pmd               N      N",
        " ApexAssertionsShouldIncludeMessage                     apex        Best Practices                       pmd               N      N",
        " ApexUnitTestClassShouldHaveAsserts                     apex        Best Practices        quickstart     pmd               N      N",
        " ApexUnitTestClassShouldHaveRunAs                       apex        Best Practices        quickstart     pmd               N      N",
        " ApexUnitTestMethodShouldHaveIsTestAnnotation           apex        Best Practices                       pmd               N      N",
        " ApexUnitTestShouldNotUseSeeAllDataTrue                 apex        Best Practices        quickstart     pmd               N      N",
        " AvoidGlobalModifier                                    apex        Best Practices        quickstart     pmd               N      N",
        " AvoidLogicInTrigger                                    apex        Best Practices        quickstart     pmd               N      N",
        " DebugsShouldUseLoggingLevel                            apex        Best Practices        quickstart     pmd               N      N",
        " UnusedLocalVariable                                    apex        Best Practices                       pmd               N      N",
        " QueueableWithoutFinalizer                              apex        Best Practices                       pmd               N      N",
        " AvoidDebugStatements                                   apex        Performance                          pmd               N      N",
        " AvoidNonRestrictiveQueries                             apex        Performance                          pmd               N      N",
        " EagerlyLoadedDescribeSObjectResult                     apex        Performance                          pmd               N      N",
        " OperationWithHighCostInLoop                            apex        Performance           quickstart     pmd               N      N",
        " OperationWithLimitsInLoop                              apex        Performance           quickstart     pmd               N      N",
        " ApexBadCrypto                                          apex        Security              quickstart     pmd               N      N",
        " ApexCRUDViolation                                      apex        Security              quickstart     pmd               N      N",
        " ApexDangerousMethods                                   apex        Security              quickstart     pmd               N      N",
        " ApexInsecureEndpoint                                   apex        Security              quickstart     pmd               N      N",
        " ApexOpenRedirect                                       apex        Security              quickstart     pmd               N      N",
        " ApexSharingViolations                                  apex        Security              quickstart     pmd               N      N",
        " ApexSOQLInjection                                      apex        Security              quickstart     pmd               N      N",
        " ApexSuggestUsingNamedCred                              apex        Security              quickstart     pmd               N      N",
        " ApexXSSFromEscapeFalse                                 apex        Security              quickstart     pmd               N      N",
        " ApexXSSFromURLParam                                    apex        Security              quickstart     pmd               N      N",
        " ClassNamingConventions                                 apex        Code Style            quickstart     pmd               N      N",
        " IfElseStmtsMustUseBraces                               apex        Code Style            quickstart     pmd               N      N",
        " IfStmtsMustUseBraces                                   apex        Code Style            quickstart     pmd               N      N",
        " FieldDeclarationsShouldBeAtStart                       apex        Code Style                           pmd               N      N",
        " FieldNamingConventions                                 apex        Code Style            quickstart     pmd               N      N",
        " ForLoopsMustUseBraces                                  apex        Code Style            quickstart     pmd               N      N",
        " FormalParameterNamingConventions                       apex        Code Style            quickstart     pmd               N      N",
        " LocalVariableNamingConventions                         apex        Code Style            quickstart     pmd               N      N",
        " MethodNamingConventions                                apex        Code Style            quickstart     pmd               N      N",
        " OneDeclarationPerLine                                  apex        Code Style            quickstart     pmd               N      N",
        " PropertyNamingConventions                              apex        Code Style            quickstart     pmd               N      N",
        " WhileLoopsMustUseBraces                                apex        Code Style            quickstart     pmd               N      N",
        " AvoidDeeplyNestedIfStmts                               apex        Design                quickstart     pmd               N      N",
        " UnusedMethod                                           apex        Design                               pmd               N      N",
        " CyclomaticComplexity                                   apex        Design                quickstart     pmd               N      N",
        " CognitiveComplexity                                    apex        Design                               pmd               N      N",
        " ExcessiveClassLength                                   apex        Design                quickstart     pmd               N      N",
        " ExcessiveParameterList                                 apex        Design                quickstart     pmd               N      N",
        " ExcessivePublicCount                                   apex        Design                quickstart     pmd               N      N",
        " NcssConstructorCount                                   apex        Design                quickstart     pmd               N      N",
        " NcssMethodCount                                        apex        Design                quickstart     pmd               N      N",
        " NcssTypeCount                                          apex        Design                quickstart     pmd               N      N",
        " StdCyclomaticComplexity                                apex        Design                quickstart     pmd               N      N",
        " TooManyFields                                          apex        Design                quickstart     pmd               N      N",
        " ApexDoc                                                apex        Documentation         quickstart     pmd               N      N",
        " ApexCSRF                                               apex        Error Prone           quickstart     pmd               N      N",
        " AvoidDirectAccessTriggerMap                            apex        Error Prone           quickstart     pmd               N      N",
        " AvoidHardcodingId                                      apex        Error Prone           quickstart     pmd               N      N",
        " AvoidNonExistentAnnotations                            apex        Error Prone           quickstart     pmd               N      N",
        " EmptyCatchBlock                                        apex        Error Prone           quickstart     pmd               N      N",
        " EmptyIfStmt                                            apex        Error Prone           quickstart     pmd               N      N",
        " EmptyStatementBlock                                    apex        Error Prone           quickstart     pmd               N      N",
        " EmptyTryOrFinallyBlock                                 apex        Error Prone           quickstart     pmd               N      N",
        " EmptyWhileStmt                                         apex        Error Prone           quickstart     pmd               N      N",
        " InaccessibleAuraEnabledGetter                          apex        Error Prone                          pmd               N      N",
        " MethodWithSameNameAsEnclosingClass                     apex        Error Prone           quickstart     pmd               N      N",
        " OverrideBothEqualsAndHashcode                          apex        Error Prone                          pmd               N      N",
        " TestMethodsMustBeInTestClasses                         apex        Error Prone                          pmd               N      N",
        " constructor-super                                      javascript  problem               problem        eslint            N      N",
        " for-direction                                          javascript  problem               problem        eslint            N      N",
        " getter-return                                          javascript  problem               problem        eslint            N      N",
        " no-async-promise-executor                              javascript  problem               problem        eslint            N      N",
        " no-case-declarations                                   javascript  suggestion            suggestion     eslint            N      N",
        " no-class-assign                                        javascript  problem               problem        eslint            N      N",
        " no-compare-neg-zero                                    javascript  problem               problem        eslint            N      N",
        " no-cond-assign                                         javascript  problem               problem        eslint            N      N",
        " no-const-assign                                        javascript  problem               problem        eslint            N      N",
        " no-constant-condition                                  javascript  problem               problem        eslint            N      N",
        " no-control-regex                                       javascript  problem               problem        eslint            N      N",
        " no-debugger                                            javascript  problem               problem        eslint            N      N",
        " no-delete-var                                          javascript  suggestion            suggestion     eslint            N      N",
        " no-dupe-args                                           javascript  problem               problem        eslint            N      N",
        " no-dupe-class-members                                  javascript  problem               problem        eslint            N      N",
        " no-dupe-else-if                                        javascript  problem               problem        eslint            N      N",
        " no-dupe-keys                                           javascript  problem               problem        eslint            N      N",
        " no-duplicate-case                                      javascript  problem               problem        eslint            N      N",
        " no-empty                                               javascript  suggestion            suggestion     eslint            N      N",
        " no-empty-character-class                               javascript  problem               problem        eslint            N      N",
        " no-empty-pattern                                       javascript  problem               problem        eslint            N      N",
        " no-ex-assign                                           javascript  problem               problem        eslint            N      N",
        " no-extra-boolean-cast                                  javascript  suggestion            suggestion     eslint            N      N",
        " no-fallthrough                                         javascript  problem               problem        eslint            N      N",
        " no-func-assign                                         javascript  problem               problem        eslint            N      N",
        " no-global-assign                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-import-assign                                       javascript  problem               problem        eslint            N      N",
        " no-inner-declarations                                  javascript  problem               problem        eslint            N      N",
        " no-invalid-regexp                                      javascript  problem               problem        eslint            N      N",
        " no-irregular-whitespace                                javascript  problem               problem        eslint            N      N",
        " no-loss-of-precision                                   javascript  problem               problem        eslint            N      N",
        " no-misleading-character-class                          javascript  problem               problem        eslint            N      N",
        " no-new-symbol                                          javascript  problem               problem        eslint            N      N",
        " no-nonoctal-decimal-escape                             javascript  suggestion            suggestion     eslint            N      N",
        " no-obj-calls                                           javascript  problem               problem        eslint            N      N",
        " no-octal                                               javascript  suggestion            suggestion     eslint            N      N",
        " no-prototype-builtins                                  javascript  problem               problem        eslint            N      N",
        " no-redeclare                                           javascript  suggestion            suggestion     eslint            N      N",
        " no-regex-spaces                                        javascript  suggestion            suggestion     eslint            N      N",
        " no-self-assign                                         javascript  problem               problem        eslint            N      N",
        " no-setter-return                                       javascript  problem               problem        eslint            N      N",
        " no-shadow-restricted-names                             javascript  suggestion            suggestion     eslint            N      N",
        " no-sparse-arrays                                       javascript  problem               problem        eslint            N      N",
        " no-this-before-super                                   javascript  problem               problem        eslint            N      N",
        " no-undef                                               javascript  problem               problem        eslint            N      N",
        " no-unexpected-multiline                                javascript  problem               problem        eslint            N      N",
        " no-unreachable                                         javascript  problem               problem        eslint            N      N",
        " no-unsafe-finally                                      javascript  problem               problem        eslint            N      N",
        " no-unsafe-negation                                     javascript  problem               problem        eslint            N      N",
        " no-unsafe-optional-chaining                            javascript  problem               problem        eslint            N      N",
        " no-unused-labels                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-unused-vars                                         javascript  problem               problem        eslint            N      N",
        " no-useless-backreference                               javascript  problem               problem        eslint            N      N",
        " no-useless-catch                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-useless-escape                                      javascript  suggestion            suggestion     eslint            N      N",
        " no-with                                                javascript  suggestion            suggestion     eslint            N      N",
        " require-yield                                          javascript  suggestion            suggestion     eslint            N      N",
        " use-isnan                                              javascript  problem               problem        eslint            N      N",
        " valid-typeof                                           javascript  problem               problem        eslint            N      N",
        " for-direction                                          typescript  problem               problem        eslint-typescript N      N",
        " no-async-promise-executor                              typescript  problem               problem        eslint-typescript N      N",
        " no-case-declarations                                   typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-class-assign                                        typescript  problem               problem        eslint-typescript N      N",
        " no-compare-neg-zero                                    typescript  problem               problem        eslint-typescript N      N",
        " no-cond-assign                                         typescript  problem               problem        eslint-typescript N      N",
        " no-constant-condition                                  typescript  problem               problem        eslint-typescript N      N",
        " no-control-regex                                       typescript  problem               problem        eslint-typescript N      N",
        " no-debugger                                            typescript  problem               problem        eslint-typescript N      N",
        " no-delete-var                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-dupe-else-if                                        typescript  problem               problem        eslint-typescript N      N",
        " no-duplicate-case                                      typescript  problem               problem        eslint-typescript N      N",
        " no-empty                                               typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-empty-character-class                               typescript  problem               problem        eslint-typescript N      N",
        " no-empty-pattern                                       typescript  problem               problem        eslint-typescript N      N",
        " no-ex-assign                                           typescript  problem               problem        eslint-typescript N      N",
        " no-extra-boolean-cast                                  typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-fallthrough                                         typescript  problem               problem        eslint-typescript N      N",
        " no-global-assign                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-inner-declarations                                  typescript  problem               problem        eslint-typescript N      N",
        " no-invalid-regexp                                      typescript  problem               problem        eslint-typescript N      N",
        " no-irregular-whitespace                                typescript  problem               problem        eslint-typescript N      N",
        " no-misleading-character-class                          typescript  problem               problem        eslint-typescript N      N",
        " no-nonoctal-decimal-escape                             typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-octal                                               typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-prototype-builtins                                  typescript  problem               problem        eslint-typescript N      N",
        " no-regex-spaces                                        typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-self-assign                                         typescript  problem               problem        eslint-typescript N      N",
        " no-shadow-restricted-names                             typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-sparse-arrays                                       typescript  problem               problem        eslint-typescript N      N",
        " no-unexpected-multiline                                typescript  problem               problem        eslint-typescript N      N",
        " no-unsafe-finally                                      typescript  problem               problem        eslint-typescript N      N",
        " no-unsafe-optional-chaining                            typescript  problem               problem        eslint-typescript N      N",
        " no-unused-labels                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-useless-backreference                               typescript  problem               problem        eslint-typescript N      N",
        " no-useless-catch                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-useless-escape                                      typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-var                                                 typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-with                                                typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-const                                           typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-rest-params                                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-spread                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " require-yield                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " use-isnan                                              typescript  problem               problem        eslint-typescript N      N",
        " valid-typeof                                           typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/await-thenable                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/ban-ts-comment                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/ban-types                           typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-array-constructor                typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-base-to-string                   typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-duplicate-enum-values            typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-duplicate-type-constituents      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-explicit-any                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-extra-non-null-assertion         typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-floating-promises                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-for-in-array                     typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-implied-eval                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-loss-of-precision                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-misused-new                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-misused-promises                 typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-namespace                        typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-non-null-asserted-optional-chain typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-redundant-type-constituents      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-this-alias                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unnecessary-type-assertion       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unnecessary-type-constraint      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-argument                  typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-assignment                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-call                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-declaration-merging       typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-enum-comparison           typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-member-access             typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-return                    typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unused-vars                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-var-requires                     typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/prefer-as-const                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/require-await                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/restrict-plus-operands              typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/restrict-template-expressions       typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/triple-slash-reference              typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/unbound-method                      typescript  problem               problem        eslint-typescript N      N",
        " insecure-bundled-dependencies                          javascript  Insecure Dependencies                retire-js         N      N",
        " AvoidDatabaseOperationInLoop                           apex        Performance                          sfge              Y      N",
        " AvoidMultipleMassSchemaLookups                         apex        Performance                          sfge              Y      N",
        " ApexFlsViolationRule                                   apex        Security                             sfge              Y      N",
        " RemoveUnusedMethod                                     apex        Performance                          sfge              Y      Y",
        " PerformNullCheckOnSoqlVariables                        apex        Performance                          sfge              Y      N",
        " UseWithSharingOnDatabaseOperation                      apex        Security                             sfge              Y      N",
        " ApexNullPointerExceptionRule                           apex        Error Prone                          sfge              Y      N",
        " UnimplementedTypeRule                                  apex        Performance                          sfge              N      N"
    ],
    "sfdx-scanner-lwc": [
        "Scan a codebase with all the rules in the registry, or use parameters to filter the rules based on rulename, category, or ruleset.",
        "",
        "USAGE",
        "  $ sf scanner run [--verbose] [-c <value>...] [-f",
        "    csv|html|json|junit|sarif|table|xml] [-o <value>] [-s <value> | --json]",
        "    [--normalize-severity] [-p <value>...] [-r <value>...] [-e eslint|eslint-lwc",
        "    |eslint-typescript|pmd|pmd-appexchange|retire-js|sfge|cpd...] [-t",
        "    <value>...] [--tsconfig <value>] [--eslintconfig <value>] [--pmdconfig",
        "    <value>] [--env <value>] [--verbose-violations]",
        "",
        "FLAGS",
        "  -c, --category=<value>...         One or more categories of rules to run.",
        "  -e, --engine=<option>...          Specify which engines to run.",
        "                                    <options: eslint|eslint-lwc|eslint-typescrip",
        "                                    t|pmd|pmd-appexchange|retire-js|sfge|cpd>",
        "  -f, --format=<option>             The output format for results written",
        "                                    directly to the console.",
        "                                    <options:",
        "                                    csv|html|json|junit|sarif|table|xml>",
        "  -o, --outfile=<value>             File to write output to.",
        "  -p, --projectdir=<value>...       The relative or absolute root project",
        "                                    directories used to set the context for",
        "                                    Graph Engine's analysis.",
        "  -r, --ruleset=<value>...          [Deprecated] Rulesets to run.",
        "  -s, --severity-threshold=<value>  An error will be thrown when a violation is",
        "                                    found with a severity equal to or greater",
        "                                    than the specified level.",
        "  -t, --target=<value>...           Source code location.",
        "      --env=<value>                 [Deprecated] Override ESLint's default",
        "                                    environment variables, in JSON-formatted",
        "                                    string.",
        "      --eslintconfig=<value>        Specify the location of eslintrc config to",
        "                                    customize eslint engine. The --tsconfig flag",
        "                                    can\u2019t be used with --eslintconfig flag.",
        "      --normalize-severity          Include normalized severity levels 1 (high),",
        "                                    2 (moderate), and 3 (low) with the results.",
        "      --pmdconfig=<value>           Location of PMD rule reference XML file to",
        "                                    customize rule selection.",
        "      --tsconfig=<value>            Location of tsconfig.json file used by the",
        "                                    eslint-typescript engine. The --tsconfig",
        "                                    flag can\u2019t be used with --eslintconfig flag.",
        "      --verbose                     Emit additional command output to stdout.",
        "      --verbose-violations          Includes Retire-js violation-message details",
        "                                    about each vulnerability in the results,",
        "                                    including summary, common vulnerabilities",
        "                                    and exposures (CVE), and URLs.",
        "",
        "GLOBAL FLAGS",
        "  --json  Format output as json.",
        "",
        "COMMANDS",
        "  scanner run dfa  Scan codebase with all DFA rules by default.",
        "",
        " \u203a   Warning: Plugin @salesforce/sfdx-scanner (4.10.0) differs from the version",
        " \u203a    specified by sf (4.9.0)",
        "Warning: We plan to stop supporting v4.x of Code Analyzer in the coming months. We highly recommend that you start using v5.x, which is currently in Beta. For information on v5.x, see https://developer.salesforce.com/docs/platform/salesforce-code-analyzer/guide/code-analyzer.html.",
        " name                                                   languages   categories            rulesets [dep] engine            is dfa is pilot",
        " \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        " VfCsrf                                                 visualforce Security                             pmd               N      N",
        " VfHtmlStyleTagXss                                      visualforce Security                             pmd               N      N",
        " VfUnescapeEl                                           visualforce Security                             pmd               N      N",
        " ApexAssertionsShouldIncludeMessage                     apex        Best Practices                       pmd               N      N",
        " ApexUnitTestClassShouldHaveAsserts                     apex        Best Practices        quickstart     pmd               N      N",
        " ApexUnitTestClassShouldHaveRunAs                       apex        Best Practices        quickstart     pmd               N      N",
        " ApexUnitTestMethodShouldHaveIsTestAnnotation           apex        Best Practices                       pmd               N      N",
        " ApexUnitTestShouldNotUseSeeAllDataTrue                 apex        Best Practices        quickstart     pmd               N      N",
        " AvoidGlobalModifier                                    apex        Best Practices        quickstart     pmd               N      N",
        " AvoidLogicInTrigger                                    apex        Best Practices        quickstart     pmd               N      N",
        " DebugsShouldUseLoggingLevel                            apex        Best Practices        quickstart     pmd               N      N",
        " UnusedLocalVariable                                    apex        Best Practices                       pmd               N      N",
        " QueueableWithoutFinalizer                              apex        Best Practices                       pmd               N      N",
        " AvoidDebugStatements                                   apex        Performance                          pmd               N      N",
        " AvoidNonRestrictiveQueries                             apex        Performance                          pmd               N      N",
        " EagerlyLoadedDescribeSObjectResult                     apex        Performance                          pmd               N      N",
        " OperationWithHighCostInLoop                            apex        Performance           quickstart     pmd               N      N",
        " OperationWithLimitsInLoop                              apex        Performance           quickstart     pmd               N      N",
        " ApexBadCrypto                                          apex        Security              quickstart     pmd               N      N",
        " ApexCRUDViolation                                      apex        Security              quickstart     pmd               N      N",
        " ApexDangerousMethods                                   apex        Security              quickstart     pmd               N      N",
        " ApexInsecureEndpoint                                   apex        Security              quickstart     pmd               N      N",
        " ApexOpenRedirect                                       apex        Security              quickstart     pmd               N      N",
        " ApexSharingViolations                                  apex        Security              quickstart     pmd               N      N",
        " ApexSOQLInjection                                      apex        Security              quickstart     pmd               N      N",
        " ApexSuggestUsingNamedCred                              apex        Security              quickstart     pmd               N      N",
        " ApexXSSFromEscapeFalse                                 apex        Security              quickstart     pmd               N      N",
        " ApexXSSFromURLParam                                    apex        Security              quickstart     pmd               N      N",
        " ClassNamingConventions                                 apex        Code Style            quickstart     pmd               N      N",
        " IfElseStmtsMustUseBraces                               apex        Code Style            quickstart     pmd               N      N",
        " IfStmtsMustUseBraces                                   apex        Code Style            quickstart     pmd               N      N",
        " FieldDeclarationsShouldBeAtStart                       apex        Code Style                           pmd               N      N",
        " FieldNamingConventions                                 apex        Code Style            quickstart     pmd               N      N",
        " ForLoopsMustUseBraces                                  apex        Code Style            quickstart     pmd               N      N",
        " FormalParameterNamingConventions                       apex        Code Style            quickstart     pmd               N      N",
        " LocalVariableNamingConventions                         apex        Code Style            quickstart     pmd               N      N",
        " MethodNamingConventions                                apex        Code Style            quickstart     pmd               N      N",
        " OneDeclarationPerLine                                  apex        Code Style            quickstart     pmd               N      N",
        " PropertyNamingConventions                              apex        Code Style            quickstart     pmd               N      N",
        " WhileLoopsMustUseBraces                                apex        Code Style            quickstart     pmd               N      N",
        " AvoidDeeplyNestedIfStmts                               apex        Design                quickstart     pmd               N      N",
        " UnusedMethod                                           apex        Design                               pmd               N      N",
        " CyclomaticComplexity                                   apex        Design                quickstart     pmd               N      N",
        " CognitiveComplexity                                    apex        Design                               pmd               N      N",
        " ExcessiveClassLength                                   apex        Design                quickstart     pmd               N      N",
        " ExcessiveParameterList                                 apex        Design                quickstart     pmd               N      N",
        " ExcessivePublicCount                                   apex        Design                quickstart     pmd               N      N",
        " NcssConstructorCount                                   apex        Design                quickstart     pmd               N      N",
        " NcssMethodCount                                        apex        Design                quickstart     pmd               N      N",
        " NcssTypeCount                                          apex        Design                quickstart     pmd               N      N",
        " StdCyclomaticComplexity                                apex        Design                quickstart     pmd               N      N",
        " TooManyFields                                          apex        Design                quickstart     pmd               N      N",
        " ApexDoc                                                apex        Documentation         quickstart     pmd               N      N",
        " ApexCSRF                                               apex        Error Prone           quickstart     pmd               N      N",
        " AvoidDirectAccessTriggerMap                            apex        Error Prone           quickstart     pmd               N      N",
        " AvoidHardcodingId                                      apex        Error Prone           quickstart     pmd               N      N",
        " AvoidNonExistentAnnotations                            apex        Error Prone           quickstart     pmd               N      N",
        " EmptyCatchBlock                                        apex        Error Prone           quickstart     pmd               N      N",
        " EmptyIfStmt                                            apex        Error Prone           quickstart     pmd               N      N",
        " EmptyStatementBlock                                    apex        Error Prone           quickstart     pmd               N      N",
        " EmptyTryOrFinallyBlock                                 apex        Error Prone           quickstart     pmd               N      N",
        " EmptyWhileStmt                                         apex        Error Prone           quickstart     pmd               N      N",
        " InaccessibleAuraEnabledGetter                          apex        Error Prone                          pmd               N      N",
        " MethodWithSameNameAsEnclosingClass                     apex        Error Prone           quickstart     pmd               N      N",
        " OverrideBothEqualsAndHashcode                          apex        Error Prone                          pmd               N      N",
        " TestMethodsMustBeInTestClasses                         apex        Error Prone                          pmd               N      N",
        " constructor-super                                      javascript  problem               problem        eslint            N      N",
        " for-direction                                          javascript  problem               problem        eslint            N      N",
        " getter-return                                          javascript  problem               problem        eslint            N      N",
        " no-async-promise-executor                              javascript  problem               problem        eslint            N      N",
        " no-case-declarations                                   javascript  suggestion            suggestion     eslint            N      N",
        " no-class-assign                                        javascript  problem               problem        eslint            N      N",
        " no-compare-neg-zero                                    javascript  problem               problem        eslint            N      N",
        " no-cond-assign                                         javascript  problem               problem        eslint            N      N",
        " no-const-assign                                        javascript  problem               problem        eslint            N      N",
        " no-constant-condition                                  javascript  problem               problem        eslint            N      N",
        " no-control-regex                                       javascript  problem               problem        eslint            N      N",
        " no-debugger                                            javascript  problem               problem        eslint            N      N",
        " no-delete-var                                          javascript  suggestion            suggestion     eslint            N      N",
        " no-dupe-args                                           javascript  problem               problem        eslint            N      N",
        " no-dupe-class-members                                  javascript  problem               problem        eslint            N      N",
        " no-dupe-else-if                                        javascript  problem               problem        eslint            N      N",
        " no-dupe-keys                                           javascript  problem               problem        eslint            N      N",
        " no-duplicate-case                                      javascript  problem               problem        eslint            N      N",
        " no-empty                                               javascript  suggestion            suggestion     eslint            N      N",
        " no-empty-character-class                               javascript  problem               problem        eslint            N      N",
        " no-empty-pattern                                       javascript  problem               problem        eslint            N      N",
        " no-ex-assign                                           javascript  problem               problem        eslint            N      N",
        " no-extra-boolean-cast                                  javascript  suggestion            suggestion     eslint            N      N",
        " no-fallthrough                                         javascript  problem               problem        eslint            N      N",
        " no-func-assign                                         javascript  problem               problem        eslint            N      N",
        " no-global-assign                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-import-assign                                       javascript  problem               problem        eslint            N      N",
        " no-inner-declarations                                  javascript  problem               problem        eslint            N      N",
        " no-invalid-regexp                                      javascript  problem               problem        eslint            N      N",
        " no-irregular-whitespace                                javascript  problem               problem        eslint            N      N",
        " no-loss-of-precision                                   javascript  problem               problem        eslint            N      N",
        " no-misleading-character-class                          javascript  problem               problem        eslint            N      N",
        " no-new-symbol                                          javascript  problem               problem        eslint            N      N",
        " no-nonoctal-decimal-escape                             javascript  suggestion            suggestion     eslint            N      N",
        " no-obj-calls                                           javascript  problem               problem        eslint            N      N",
        " no-octal                                               javascript  suggestion            suggestion     eslint            N      N",
        " no-prototype-builtins                                  javascript  problem               problem        eslint            N      N",
        " no-redeclare                                           javascript  suggestion            suggestion     eslint            N      N",
        " no-regex-spaces                                        javascript  suggestion            suggestion     eslint            N      N",
        " no-self-assign                                         javascript  problem               problem        eslint            N      N",
        " no-setter-return                                       javascript  problem               problem        eslint            N      N",
        " no-shadow-restricted-names                             javascript  suggestion            suggestion     eslint            N      N",
        " no-sparse-arrays                                       javascript  problem               problem        eslint            N      N",
        " no-this-before-super                                   javascript  problem               problem        eslint            N      N",
        " no-undef                                               javascript  problem               problem        eslint            N      N",
        " no-unexpected-multiline                                javascript  problem               problem        eslint            N      N",
        " no-unreachable                                         javascript  problem               problem        eslint            N      N",
        " no-unsafe-finally                                      javascript  problem               problem        eslint            N      N",
        " no-unsafe-negation                                     javascript  problem               problem        eslint            N      N",
        " no-unsafe-optional-chaining                            javascript  problem               problem        eslint            N      N",
        " no-unused-labels                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-unused-vars                                         javascript  problem               problem        eslint            N      N",
        " no-useless-backreference                               javascript  problem               problem        eslint            N      N",
        " no-useless-catch                                       javascript  suggestion            suggestion     eslint            N      N",
        " no-useless-escape                                      javascript  suggestion            suggestion     eslint            N      N",
        " no-with                                                javascript  suggestion            suggestion     eslint            N      N",
        " require-yield                                          javascript  suggestion            suggestion     eslint            N      N",
        " use-isnan                                              javascript  problem               problem        eslint            N      N",
        " valid-typeof                                           javascript  problem               problem        eslint            N      N",
        " for-direction                                          typescript  problem               problem        eslint-typescript N      N",
        " no-async-promise-executor                              typescript  problem               problem        eslint-typescript N      N",
        " no-case-declarations                                   typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-class-assign                                        typescript  problem               problem        eslint-typescript N      N",
        " no-compare-neg-zero                                    typescript  problem               problem        eslint-typescript N      N",
        " no-cond-assign                                         typescript  problem               problem        eslint-typescript N      N",
        " no-constant-condition                                  typescript  problem               problem        eslint-typescript N      N",
        " no-control-regex                                       typescript  problem               problem        eslint-typescript N      N",
        " no-debugger                                            typescript  problem               problem        eslint-typescript N      N",
        " no-delete-var                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-dupe-else-if                                        typescript  problem               problem        eslint-typescript N      N",
        " no-duplicate-case                                      typescript  problem               problem        eslint-typescript N      N",
        " no-empty                                               typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-empty-character-class                               typescript  problem               problem        eslint-typescript N      N",
        " no-empty-pattern                                       typescript  problem               problem        eslint-typescript N      N",
        " no-ex-assign                                           typescript  problem               problem        eslint-typescript N      N",
        " no-extra-boolean-cast                                  typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-fallthrough                                         typescript  problem               problem        eslint-typescript N      N",
        " no-global-assign                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-inner-declarations                                  typescript  problem               problem        eslint-typescript N      N",
        " no-invalid-regexp                                      typescript  problem               problem        eslint-typescript N      N",
        " no-irregular-whitespace                                typescript  problem               problem        eslint-typescript N      N",
        " no-misleading-character-class                          typescript  problem               problem        eslint-typescript N      N",
        " no-nonoctal-decimal-escape                             typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-octal                                               typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-prototype-builtins                                  typescript  problem               problem        eslint-typescript N      N",
        " no-regex-spaces                                        typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-self-assign                                         typescript  problem               problem        eslint-typescript N      N",
        " no-shadow-restricted-names                             typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-sparse-arrays                                       typescript  problem               problem        eslint-typescript N      N",
        " no-unexpected-multiline                                typescript  problem               problem        eslint-typescript N      N",
        " no-unsafe-finally                                      typescript  problem               problem        eslint-typescript N      N",
        " no-unsafe-optional-chaining                            typescript  problem               problem        eslint-typescript N      N",
        " no-unused-labels                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-useless-backreference                               typescript  problem               problem        eslint-typescript N      N",
        " no-useless-catch                                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-useless-escape                                      typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-var                                                 typescript  suggestion            suggestion     eslint-typescript N      N",
        " no-with                                                typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-const                                           typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-rest-params                                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " prefer-spread                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " require-yield                                          typescript  suggestion            suggestion     eslint-typescript N      N",
        " use-isnan                                              typescript  problem               problem        eslint-typescript N      N",
        " valid-typeof                                           typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/await-thenable                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/ban-ts-comment                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/ban-types                           typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-array-constructor                typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-base-to-string                   typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-duplicate-enum-values            typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-duplicate-type-constituents      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-explicit-any                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-extra-non-null-assertion         typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-floating-promises                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-for-in-array                     typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-implied-eval                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-loss-of-precision                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-misused-new                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-misused-promises                 typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-namespace                        typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-non-null-asserted-optional-chain typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-redundant-type-constituents      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-this-alias                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unnecessary-type-assertion       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unnecessary-type-constraint      typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-argument                  typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-assignment                typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-call                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-declaration-merging       typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-enum-comparison           typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-member-access             typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unsafe-return                    typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-unused-vars                      typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/no-var-requires                     typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/prefer-as-const                     typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/require-await                       typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/restrict-plus-operands              typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/restrict-template-expressions       typescript  problem               problem        eslint-typescript N      N",
        " @typescript-eslint/triple-slash-reference              typescript  suggestion            suggestion     eslint-typescript N      N",
        " @typescript-eslint/unbound-method                      typescript  problem               problem        eslint-typescript N      N",
        " insecure-bundled-dependencies                          javascript  Insecure Dependencies                retire-js         N      N",
        " AvoidDatabaseOperationInLoop                           apex        Performance                          sfge              Y      N",
        " AvoidMultipleMassSchemaLookups                         apex        Performance                          sfge              Y      N",
        " ApexFlsViolationRule                                   apex        Security                             sfge              Y      N",
        " RemoveUnusedMethod                                     apex        Performance                          sfge              Y      Y",
        " PerformNullCheckOnSoqlVariables                        apex        Performance                          sfge              Y      N",
        " UseWithSharingOnDatabaseOperation                      apex        Security                             sfge              Y      N",
        " ApexNullPointerExceptionRule                           apex        Error Prone                          sfge              Y      N",
        " UnimplementedTypeRule                                  apex        Performance                          sfge              N      N"
    ],
    "shellcheck": [
        "Usage: shellcheck [OPTIONS...] FILES...",
        "  -a                  --check-sourced            Include warnings from sourced files",
        "  -C[WHEN]            --color[=WHEN]             Use color (auto, always, never)",
        "  -i CODE1,CODE2..    --include=CODE1,CODE2..    Consider only given types of warnings",
        "  -e CODE1,CODE2..    --exclude=CODE1,CODE2..    Exclude types of warnings",
        "                      --extended-analysis=bool   Perform dataflow analysis (default true)",
        "  -f FORMAT           --format=FORMAT            Output format (checkstyle, diff, gcc, json, json1, quiet, tty)",
        "                      --list-optional            List checks disabled by default",
        "                      --norc                     Don't look for .shellcheckrc files",
        "                      --rcfile=RCFILE            Prefer the specified configuration file over searching for one",
        "  -o check1,check2..  --enable=check1,check2..   List of optional checks to enable (or 'all')",
        "  -P SOURCEPATHS      --source-path=SOURCEPATHS  Specify path when looking for sourced files (\"SCRIPTDIR\" for script's dir)",
        "  -s SHELLNAME        --shell=SHELLNAME          Specify dialect (sh, bash, dash, ksh, busybox)",
        "  -S SEVERITY         --severity=SEVERITY        Minimum severity of errors to consider (error, warning, info, style)",
        "  -V                  --version                  Print version information",
        "  -W NUM              --wiki-link-count=NUM      The number of wiki links to show, when applicable",
        "  -x                  --external-sources         Allow 'source' outside of FILES",
        "                      --help                     Show this usage summary and exit",
        ""
    ],
    "shfmt": [
        "usage: shfmt [flags] [path ...]",
        "",
        "shfmt formats shell programs. If the only argument is a dash ('-') or no",
        "arguments are given, standard input will be used. If a given path is a",
        "directory, all shell scripts found under that directory will be used.",
        "",
        "  --version  show version and exit",
        "",
        "  -l,  --list      list files whose formatting differs from shfmt's",
        "  -w,  --write     write result to file instead of stdout",
        "  -d,  --diff      error with a diff when the formatting differs",
        "  -s,  --simplify  simplify the code",
        "  -mn, --minify    minify the code to reduce its size (implies -s)",
        "  --apply-ignore   always apply EditorConfig ignore rules",
        "  --filename str   provide a name for the standard input file",
        "",
        "Parser options:",
        "",
        "  -ln, --language-dialect str  bash/posix/mksh/bats, default \"auto\"",
        "  -p,  --posix                 shorthand for -ln=posix",
        "",
        "Printer options:",
        "",
        "  -i,  --indent uint       0 for tabs (default), >0 for number of spaces",
        "  -bn, --binary-next-line  binary ops like && and | may start a line",
        "  -ci, --case-indent       switch cases will be indented",
        "  -sr, --space-redirects   redirect operators will be followed by a space",
        "  -kp, --keep-padding      keep column alignment paddings",
        "  -fn, --func-next-line    function opening braces are placed on a separate line",
        "",
        "Utilities:",
        "",
        "  -f, --find   recursively find all shell files and print the paths",
        "  --to-json    print syntax tree to stdout as a typed JSON",
        "  --from-json  read syntax tree from stdin as a typed JSON",
        "",
        "Formatting options can also be read from EditorConfig files; see 'man shfmt'",
        "for a detailed description of the tool's behavior.",
        "For more information and to report bugs, see https://github.com/mvdan/sh."
    ],
    "snakefmt": [
        "Usage: snakefmt [OPTIONS] [SRC]...",
        "",
        "  The uncompromising Snakemake code formatter.",
        "",
        "  SRC specifies directories and files to format. Directories will be searched",
        "  for file names that conform to the include/exclude patterns provided.",
        "",
        "  Files are modified in-place by default; use diff, check, or  `snakefmt - <",
        "  Snakefile` to avoid this.",
        "",
        "Options:",
        "  -l, --line-length INT  Lines longer than INT will be wrapped. [default: 88]",
        "  --check                Don't write the files back, just return the status.",
        "                         Return code 0 means nothing would change. Return code",
        "                         1 means some files would be reformatted. Return code",
        "                         123 means there was an error.",
        "  -d, --diff             Don't write the files back, just output a diff for",
        "                         each file to stdout.",
        "  --compact-diff         Same as --diff but only shows lines that would change",
        "                         plus a few lines of context.",
        "  --include PATTERN      A regular expression that matches files and",
        "                         directories that should be included on recursive",
        "                         searches.  An empty value means all files are",
        "                         included regardless of the name.  Use forward slashes",
        "                         for directories on all platforms (Windows, too).",
        "                         Exclusions are calculated first, inclusions later.",
        "                         [default: (\\.smk$|^Snakefile)]",
        "  --exclude PATTERN      A regular expression that matches files and",
        "                         directories that should be excluded on recursive",
        "                         searches.  An empty value means no paths are",
        "                         excluded. Use forward slashes for directories on all",
        "                         platforms (Windows, too). Exclusions are calculated",
        "                         first, inclusions later.  [default: (\\.snakemake/|\\.e",
        "                         ggs/|\\.git/|\\.hg/|\\.mypy_cache/|\\.nox/|\\.tox/|\\.venv/",
        "                         |\\.svn/|_build/|buck-",
        "                         out/|/build/|/dist/|\\.template/)]",
        "  -c, --config PATH      Read configuration from PATH. By default, will try to",
        "                         read from `./pyproject.toml`",
        "  -h, --help             Show this message and exit.",
        "  -V, --version          Show the version and exit.",
        "  -v, --verbose          Turns on debug-level logger."
    ],
    "snakemake": [
        "usage: snakemake [-h] [--dry-run] [--profile PROFILE]",
        "                 [--workflow-profile WORKFLOW_PROFILE] [--cache [RULE ...]]",
        "                 [--snakefile FILE] [--cores N] [--jobs N] [--local-cores N]",
        "                 [--resources NAME=INT [NAME=INT ...]]",
        "                 [--set-threads RULE=THREADS [RULE=THREADS ...]]",
        "                 [--max-threads MAX_THREADS]",
        "                 [--set-resources RULE:RESOURCE=VALUE [RULE:RESOURCE=VALUE ...]]",
        "                 [--set-scatter NAME=SCATTERITEMS [NAME=SCATTERITEMS ...]]",
        "                 [--set-resource-scopes RESOURCE=[global|local]",
        "                 [RESOURCE=[global|local] ...]]",
        "                 [--default-resources [NAME=INT ...]]",
        "                 [--preemptible-rules [PREEMPTIBLE_RULES ...]]",
        "                 [--preemptible-retries PREEMPTIBLE_RETRIES]",
        "                 [--configfile FILE [FILE ...]] [--config [KEY=VALUE ...]]",
        "                 [--envvars VARNAME [VARNAME ...]] [--directory DIR] [--touch]",
        "                 [--keep-going]",
        "                 [--rerun-triggers {code,input,mtime,params,software-env} [{code,input,mtime,params,software-env} ...]]",
        "                 [--force] [--executor {local,dryrun,touch}] [--forceall]",
        "                 [--forcerun [TARGET ...]]",
        "                 [--consider-ancient RULE=INPUTITEMS [RULE=INPUTITEMS ...]]",
        "                 [--prioritize TARGET [TARGET ...]]",
        "                 [--batch RULE=BATCH/BATCHES] [--until TARGET [TARGET ...]]",
        "                 [--omit-from TARGET [TARGET ...]] [--rerun-incomplete]",
        "                 [--shadow-prefix DIR] [--scheduler [{ilp,greedy}]]",
        "                 [--wms-monitor [WMS_MONITOR]]",
        "                 [--wms-monitor-arg [NAME=VALUE ...]]",
        "                 [--scheduler-ilp-solver {PULP_CBC_CMD}]",
        "                 [--conda-base-path CONDA_BASE_PATH] [--no-subworkflows]",
        "                 [--precommand PRECOMMAND] [--groups GROUPS [GROUPS ...]]",
        "                 [--group-components GROUP_COMPONENTS [GROUP_COMPONENTS ...]]",
        "                 [--report [FILE]] [--report-stylesheet CSSFILE]",
        "                 [--reporter PLUGIN] [--draft-notebook TARGET]",
        "                 [--edit-notebook TARGET] [--notebook-listen IP:PORT]",
        "                 [--lint [{text,json}]] [--generate-unit-tests [TESTPATH]]",
        "                 [--containerize] [--export-cwl FILE] [--list-rules]",
        "                 [--list-target-rules] [--dag] [--rulegraph] [--filegraph]",
        "                 [--d3dag] [--summary] [--detailed-summary] [--archive FILE]",
        "                 [--cleanup-metadata FILE [FILE ...]] [--cleanup-shadow]",
        "                 [--skip-script-cleanup] [--unlock]",
        "                 [--list-changes {input,params,code}] [--list-input-changes]",
        "                 [--list-params-changes] [--list-untracked]",
        "                 [--delete-all-output | --delete-temp-output]",
        "                 [--keep-incomplete] [--drop-metadata] [--version]",
        "                 [--printshellcmds] [--debug-dag] [--nocolor]",
        "                 [--quiet [{all,host,progress,rules} ...]]",
        "                 [--print-compilation] [--verbose] [--force-use-threads]",
        "                 [--allow-ambiguity] [--nolock] [--ignore-incomplete]",
        "                 [--max-inventory-time SECONDS] [--latency-wait SECONDS]",
        "                 [--wait-for-files [FILE ...]] [--wait-for-files-file FILE]",
        "                 [--queue-input-wait-time SECONDS] [--notemp] [--all-temp]",
        "                 [--unneeded-temp-files FILE [FILE ...]]",
        "                 [--keep-storage-local-copies]",
        "                 [--target-files-omit-workdir-adjustment]",
        "                 [--allowed-rules ALLOWED_RULES [ALLOWED_RULES ...]]",
        "                 [--max-jobs-per-timespan MAX_JOBS_PER_TIMESPAN]",
        "                 [--max-jobs-per-second MAX_JOBS_PER_SECOND]",
        "                 [--max-status-checks-per-second MAX_STATUS_CHECKS_PER_SECOND]",
        "                 [--seconds-between-status-checks SECONDS_BETWEEN_STATUS_CHECKS]",
        "                 [--retries RETRIES] [--wrapper-prefix WRAPPER_PREFIX]",
        "                 [--default-storage-provider DEFAULT_STORAGE_PROVIDER]",
        "                 [--default-storage-prefix DEFAULT_STORAGE_PREFIX]",
        "                 [--local-storage-prefix LOCAL_STORAGE_PREFIX]",
        "                 [--remote-job-local-storage-prefix REMOTE_JOB_LOCAL_STORAGE_PREFIX]",
        "                 [--shared-fs-usage {input-output,persistence,software-deployment,source-cache,sources,storage-local-copies,none} [{input-output,persistence,software-deployment,source-cache,sources,storage-local-copies,none} ...]]",
        "                 [--scheduler-greediness SCHEDULER_GREEDINESS]",
        "                 [--scheduler-subsample SCHEDULER_SUBSAMPLE] [--no-hooks]",
        "                 [--debug] [--runtime-profile FILE]",
        "                 [--local-groupid LOCAL_GROUPID] [--attempt ATTEMPT]",
        "                 [--show-failed-logs] [--log-handler-script FILE]",
        "                 [--log-service {none,slack,wms}] [--job-deploy-sources]",
        "                 [--benchmark-extended] [--container-image IMAGE]",
        "                 [--immediate-submit] [--jobscript SCRIPT] [--jobname NAME]",
        "                 [--flux]",
        "                 [--software-deployment-method {apptainer,conda,env-modules} [{apptainer,conda,env-modules} ...]]",
        "                 [--container-cleanup-images] [--use-conda]",
        "                 [--conda-not-block-search-path-envvars] [--list-conda-envs]",
        "                 [--conda-prefix DIR] [--conda-cleanup-envs]",
        "                 [--conda-cleanup-pkgs [{tarballs,cache}]]",
        "                 [--conda-create-envs-only] [--conda-frontend {conda,mamba}]",
        "                 [--use-apptainer] [--apptainer-prefix DIR]",
        "                 [--apptainer-args ARGS] [--use-envmodules]",
        "                 [--scheduler-solver-path SCHEDULER_SOLVER_PATH]",
        "                 [--deploy-sources QUERY CHECKSUM]",
        "                 [--target-jobs TARGET_JOBS [TARGET_JOBS ...]]",
        "                 [--mode {default,remote,subprocess}]",
        "                 [--report-html-path VALUE]",
        "                 [--report-html-stylesheet-path VALUE]",
        "                 [targets ...]",
        "",
        "Snakemake is a Python based language and execution environment for GNU Make-",
        "like workflows.",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "",
        "EXECUTION:",
        "  targets               Targets to build. May be rules or files.",
        "  --dry-run, --dryrun, -n",
        "                        Do not execute anything, and display what would be",
        "                        done. If you have a very large workflow, use --dry-run",
        "                        --quiet to just print a summary of the DAG of jobs.",
        "                        (default: False)",
        "  --profile PROFILE     Name of profile to use for configuring Snakemake.",
        "                        Snakemake will search for a corresponding folder in",
        "                        /etc/xdg/snakemake and /root/.config/snakemake.",
        "                        Alternatively, this can be an absolute or relative",
        "                        path. The profile folder has to contain a file",
        "                        'config.yaml'. This file can be used to set default",
        "                        values for command line options in YAML format. For",
        "                        example, '--cluster qsub' becomes 'cluster: qsub' in",
        "                        the YAML file. Profiles can be obtained from",
        "                        https://github.com/snakemake-profiles. The profile can",
        "                        also be set via the environment variable",
        "                        $SNAKEMAKE_PROFILE. To override this variable and use",
        "                        no profile at all, provide the value 'none' to this",
        "                        argument. [env var: SNAKEMAKE_PROFILE]",
        "  --workflow-profile WORKFLOW_PROFILE",
        "                        Path (relative to current directory) to workflow",
        "                        specific profile folder to use for configuring",
        "                        Snakemake with parameters specific for this workflow",
        "                        (like resources). If this flag is not used, Snakemake",
        "                        will by default use 'profiles/default' if present",
        "                        (searched both relative to current directory and",
        "                        relative to Snakefile, in this order). For skipping",
        "                        any workflow specific profile provide the special",
        "                        value 'none'. Settings made in the workflow profile",
        "                        will override settings made in the general profile",
        "                        (see --profile). The profile folder has to contain a",
        "                        file 'config.yaml'. This file can be used to set",
        "                        default values for command line options in YAML",
        "                        format. For example, '--executor slurm' becomes",
        "                        'executor: slurm' in the YAML file. It is advisable to",
        "                        use the workflow profile to set or overwrite e.g.",
        "                        workflow specific resources like the amount of threads",
        "                        of a particular rule or the amount of memory needed.",
        "                        Note that in such cases, the arguments may be given as",
        "                        nested YAML mappings in the profile, e.g. 'set-",
        "                        threads: myrule: 4' instead of 'set-threads:",
        "                        myrule=4'.",
        "  --cache [RULE ...]    Store output files of given rules in a central cache",
        "                        given by the environment variable",
        "                        $SNAKEMAKE_OUTPUT_CACHE. Likewise, retrieve output",
        "                        files of the given rules from this cache if they have",
        "                        been created before (by anybody writing to the same",
        "                        cache), instead of actually executing the rules.",
        "                        Output files are identified by hashing all steps,",
        "                        parameters and software stack (conda envs or",
        "                        containers) needed to create them.",
        "  --snakefile FILE, -s FILE",
        "                        The workflow definition in form of a snakefile.",
        "                        Usually, you should not need to specify this. By",
        "                        default, Snakemake will search for 'Snakefile',",
        "                        'snakefile', 'workflow/Snakefile',",
        "                        'workflow/snakefile' beneath the current working",
        "                        directory, in this order. Only if you definitely want",
        "                        a different layout, you need to use this parameter.",
        "  --cores N, -c N       Use at most N CPU cores/jobs in parallel. If N is",
        "                        omitted or 'all', the limit is set to the number of",
        "                        available CPU cores. In case of cluster/cloud",
        "                        execution, this argument sets the maximum number of",
        "                        cores requested from the cluster or cloud scheduler.",
        "                        (See https://snakemake.readthedocs.io/en/stable/snakef",
        "                        iles/rules.html#resources-remote-execution for more",
        "                        info.) This number is available to rules via",
        "                        workflow.cores.",
        "  --jobs N, -j N        Use at most N CPU cluster/cloud jobs in parallel. For",
        "                        local execution this is an alias for --cores (it is",
        "                        though recommended to use --cores in that case). Note:",
        "                        Set to 'unlimited' to allow any number of parallel",
        "                        jobs.",
        "  --local-cores N       In cluster/cloud mode, use at most N cores of the host",
        "                        machine in parallel (default: number of CPU cores of",
        "                        the host). The cores are used to execute local rules.",
        "                        This option is ignored when not in cluster/cloud mode.",
        "                        (default: <available CPU count>)",
        "  --resources NAME=INT [NAME=INT ...], --res NAME=INT [NAME=INT ...]",
        "                        Define additional resources that shall constrain the",
        "                        scheduling analogously to --cores (see above). A",
        "                        resource is defined as a name and an integer value.",
        "                        E.g. --resources mem_mb=1000. Rules can use resources",
        "                        by defining the resource keyword, e.g. resources:",
        "                        mem_mb=600. If now two rules require 600 of the",
        "                        resource 'mem_mb' they won't be run in parallel by the",
        "                        scheduler. In cluster/cloud mode, this argument will",
        "                        also constrain the amount of resources requested from",
        "                        the server. (See https://snakemake.readthedocs.io/en/s",
        "                        table/snakefiles/rules.html#resources-remote-execution",
        "                        for more info.) (default: )",
        "  --set-threads RULE=THREADS [RULE=THREADS ...]",
        "                        Overwrite thread usage of rules. This allows to fine-",
        "                        tune workflow parallelization. In particular, this is",
        "                        helpful to target certain cluster nodes by e.g.",
        "                        shifting a rule to use more, or less threads than",
        "                        defined in the workflow. Thereby, THREADS has to be a",
        "                        positive integer, and RULE has to be the name of the",
        "                        rule. (default: )",
        "  --max-threads MAX_THREADS",
        "                        Define a global maximum number of threads available to",
        "                        any rule. Rules requesting more threads (via the",
        "                        threads keyword) will have their values reduced to the",
        "                        maximum. This can be useful when you want to restrict",
        "                        the maximum number of threads without modifying the",
        "                        workflow definition or overwriting rules individually",
        "                        with --set-threads.",
        "  --set-resources RULE:RESOURCE=VALUE [RULE:RESOURCE=VALUE ...]",
        "                        Overwrite resource usage of rules. This allows to",
        "                        fine-tune workflow resources. In particular, this is",
        "                        helpful to target certain cluster nodes by e.g.",
        "                        defining a certain partition for a rule, or overriding",
        "                        a temporary directory. Thereby, VALUE has to be a",
        "                        positive integer or a string, RULE has to be the name",
        "                        of the rule, and RESOURCE has to be the name of the",
        "                        resource. (default: )",
        "  --set-scatter NAME=SCATTERITEMS [NAME=SCATTERITEMS ...]",
        "                        Overwrite number of scatter items of scattergather",
        "                        processes. This allows to fine-tune workflow",
        "                        parallelization. Thereby, SCATTERITEMS has to be a",
        "                        positive integer, and NAME has to be the name of the",
        "                        scattergather process defined via a scattergather",
        "                        directive in the workflow. (default: )",
        "  --set-resource-scopes RESOURCE=[global|local] [RESOURCE=[global|local] ...]",
        "                        Overwrite resource scopes. A scope determines how a",
        "                        constraint is reckoned in cluster execution. With",
        "                        RESOURCE=local, a constraint applied to RESOURCE using",
        "                        --resources will be considered the limit for each",
        "                        group submission. With RESOURCE=global, the constraint",
        "                        will apply across all groups cumulatively. By default,",
        "                        only `mem_mb` and `disk_mb` are considered local, all",
        "                        other resources are global. This may be modified in",
        "                        the snakefile using the `resource_scopes:` directive.",
        "                        Note that number of threads, specified via --cores, is",
        "                        always considered local. (See https://snakemake.readth",
        "                        edocs.io/en/stable/snakefiles/rules.html#resources-",
        "                        remote-execution for more info) (default: )",
        "  --default-resources [NAME=INT ...], --default-res [NAME=INT ...]",
        "                        Define default values of resources for rules that do",
        "                        not define their own values. In addition to plain",
        "                        integers, python expressions over inputsize are",
        "                        allowed (e.g. '2*input.size_mb'). The inputsize is the",
        "                        sum of the sizes of all input files of a rule. By",
        "                        default, Snakemake assumes a default for mem_mb,",
        "                        disk_mb, and tmpdir (see below). This option allows to",
        "                        add further defaults (e.g. account and partition for",
        "                        slurm) or to overwrite these default values. The",
        "                        defaults are 'mem_mb=min(max(2*input.size_mb, 1000),",
        "                        8000)', 'disk_mb=max(2*input.size_mb, 1000)' (i.e.,",
        "                        default disk and mem usage is twice the input file",
        "                        size but at least 1GB), and the system temporary",
        "                        directory (as given by $TMPDIR, $TEMP, or $TMP) is",
        "                        used for the tmpdir resource. The tmpdir resource is",
        "                        automatically used by shell commands, scripts and",
        "                        wrappers to store temporary data (as it is mirrored",
        "                        into $TMPDIR, $TEMP, and $TMP for the executed",
        "                        subprocesses). If this argument is not specified at",
        "                        all, Snakemake just uses the tmpdir resource as",
        "                        outlined above.",
        "  --preemptible-rules [PREEMPTIBLE_RULES ...]",
        "                        Define which rules shall use a preemptible machine",
        "                        which can be prematurely killed by e.g. a cloud",
        "                        provider (also called spot instances). This is",
        "                        currently only supported by the Google Life Sciences",
        "                        executor and ignored by all other executors. If no",
        "                        rule names are provided, all rules are considered to",
        "                        be preemptible.",
        "  --preemptible-retries PREEMPTIBLE_RETRIES",
        "                        Number of retries that shall be made in order to",
        "                        finish a job from of rule that has been marked as",
        "                        preemptible via the --preemptible-rules setting.",
        "  --configfile FILE [FILE ...], --configfiles FILE [FILE ...]",
        "                        Specify or overwrite the config file of the workflow",
        "                        (see the docs). Values specified in JSON or YAML",
        "                        format are available in the global config dictionary",
        "                        inside the workflow. Multiple files overwrite each",
        "                        other in the given order. Thereby missing keys in",
        "                        previous config files are extended by following",
        "                        configfiles. Note that this order also includes a",
        "                        config file defined in the workflow definition itself",
        "                        (which will come first). (default: )",
        "  --config [KEY=VALUE ...], -C [KEY=VALUE ...]",
        "                        Set or overwrite values in the workflow config object.",
        "                        The workflow config object is accessible as variable",
        "                        config inside the workflow. Default values can be set",
        "                        by providing a YAML JSON file (see --configfile and",
        "                        Documentation).",
        "  --envvars VARNAME [VARNAME ...]",
        "                        Environment variables to pass to cloud jobs.",
        "  --directory DIR, -d DIR",
        "                        Specify working directory (relative paths in the",
        "                        snakefile will use this as their origin).",
        "  --touch, -t           Touch output files (mark them up to date without",
        "                        really changing them) instead of running their",
        "                        commands. This is used to pretend that the rules were",
        "                        executed, in order to fool future invocations of",
        "                        snakemake. Fails if a file does not yet exist. Note",
        "                        that this will only touch files that would otherwise",
        "                        be recreated by Snakemake (e.g. because their input",
        "                        files are newer). For enforcing a touch, combine this",
        "                        with --force, --forceall, or --forcerun. Note however",
        "                        that you lose the provenance information when the",
        "                        files have been created in reality. Hence, this should",
        "                        be used only as a last resort. (default: False)",
        "  --keep-going, -k      Go on with independent jobs if a job fails. (default:",
        "                        False)",
        "  --rerun-triggers {code,input,mtime,params,software-env} [{code,input,mtime,params,software-env} ...]",
        "                        Define what triggers the rerunning of a job. By",
        "                        default, all triggers are used, which guarantees that",
        "                        results are consistent with the workflow code and",
        "                        configuration. If you rather prefer the traditional",
        "                        way of just considering file modification dates, use '",
        "                        --rerun-trigger mtime'. (default: code input mtime",
        "                        params software-env)",
        "  --force, -f           Force the execution of the selected target or the",
        "                        first rule regardless of already created output.",
        "                        (default: False)",
        "  --executor {local,dryrun,touch}, -e {local,dryrun,touch}",
        "                        Specify a custom executor, available via an executor",
        "                        plugin: snakemake_executor_<name>",
        "  --forceall, -F        Force the execution of the selected (or the first)",
        "                        rule and all rules it is dependent on regardless of",
        "                        already created output. (default: False)",
        "  --forcerun [TARGET ...], -R [TARGET ...]",
        "                        Force the re-execution or creation of the given rules",
        "                        or files. Use this option if you changed a rule and",
        "                        want to have all its output in your workflow updated.",
        "  --consider-ancient RULE=INPUTITEMS [RULE=INPUTITEMS ...]",
        "                        Consider given input items of given rules as ancient,",
        "                        i.e. not triggering re-runs if they are newer than the",
        "                        output files. Putting this into a workflow specific",
        "                        profile (or specifying as argument) allows to overrule",
        "                        rerun triggers caused by file modification dates where",
        "                        the user knows better. RULE is the name of the rule,",
        "                        INPUTITEMS is a comma separated list of input items of",
        "                        the rule (given as name or index (0-based)). (default:",
        "                        )",
        "  --prioritize TARGET [TARGET ...], -P TARGET [TARGET ...]",
        "                        Tell the scheduler to assign creation of given targets",
        "                        (and all their dependencies) highest priority.",
        "  --batch RULE=BATCH/BATCHES",
        "                        Only create the given BATCH of the input files of the",
        "                        given RULE. This can be used to iteratively run parts",
        "                        of very large workflows. Only the execution plan of",
        "                        the relevant part of the workflow has to be",
        "                        calculated, thereby speeding up DAG computation. It is",
        "                        recommended to provide the most suitable rule for",
        "                        batching when documenting a workflow. It should be",
        "                        some aggregating rule that would be executed only",
        "                        once, and has a large number of input files. For",
        "                        example, it can be a rule that aggregates over",
        "                        samples.",
        "  --until TARGET [TARGET ...], -U TARGET [TARGET ...]",
        "                        Runs the pipeline until it reaches the specified rules",
        "                        or files. Only runs jobs that are dependencies of the",
        "                        specified rule or files, does not run sibling DAGs.",
        "  --omit-from TARGET [TARGET ...], -O TARGET [TARGET ...]",
        "                        Prevent the execution or creation of the given rules",
        "                        or files as well as any rules or files that are",
        "                        downstream of these targets in the DAG. Also runs jobs",
        "                        in sibling DAGs that are independent of the rules or",
        "                        files specified here.",
        "  --rerun-incomplete, --ri",
        "                        Re-run all jobs the output of which is recognized as",
        "                        incomplete. (default: False)",
        "  --shadow-prefix DIR   Specify a directory in which the 'shadow' directory is",
        "                        created. If not supplied, the value is set to the",
        "                        '.snakemake' directory relative to the working",
        "                        directory.",
        "  --scheduler [{ilp,greedy}]",
        "                        Specifies if jobs are selected by a greedy algorithm",
        "                        or by solving an ilp. The ilp scheduler aims to reduce",
        "                        runtime and hdd usage by best possible use of",
        "                        resources. (default: greedy)",
        "  --wms-monitor [WMS_MONITOR]",
        "                        IP and port of workflow management system to monitor",
        "                        the execution of snakemake (e.g.",
        "                        http://127.0.0.1:5000) Note that if your service",
        "                        requires an authorization token, you must export",
        "                        WMS_MONITOR_TOKEN in the environment.",
        "  --wms-monitor-arg [NAME=VALUE ...]",
        "                        If the workflow management service accepts extra",
        "                        arguments, provide. them in key value pairs with",
        "                        --wms-monitor-arg. For example, to run an existing",
        "                        workflow using a wms monitor, you can provide the pair",
        "                        id=12345 and the arguments will be provided to the",
        "                        endpoint to first interact with the workflow",
        "  --scheduler-ilp-solver {PULP_CBC_CMD}",
        "                        Specifies solver to be utilized when selecting ilp-",
        "                        scheduler. (default: COIN_CMD)",
        "  --conda-base-path CONDA_BASE_PATH",
        "                        Path of conda base installation (home of conda, mamba,",
        "                        activate) (internal use only).",
        "  --no-subworkflows, --nosw",
        "                        Do not evaluate or execute subworkflows. (default:",
        "                        False)",
        "  --precommand PRECOMMAND",
        "                        Only used in case of remote execution. Command to be",
        "                        executed before Snakemake executes each job on the",
        "                        remote compute node.",
        "",
        "GROUPING:",
        "  --groups GROUPS [GROUPS ...]",
        "                        Assign rules to groups (this overwrites any group",
        "                        definitions from the workflow). (default: )",
        "  --group-components GROUP_COMPONENTS [GROUP_COMPONENTS ...]",
        "                        Set the number of connected components a group is",
        "                        allowed to span. By default, this is 1, but this flag",
        "                        allows to extend this. This can be used to run e.g. 3",
        "                        jobs of the same rule in the same group, although they",
        "                        are not connected. It can be helpful for putting",
        "                        together many small jobs or benefitting of shared",
        "                        memory setups. (default: )",
        "",
        "REPORTS:",
        "  --report [FILE]       Create an HTML report with results and statistics.",
        "                        This can be either a .html file or a .zip file. In the",
        "                        former case, all results are embedded into the .html",
        "                        (this only works for small data). In the latter case,",
        "                        results are stored along with a file report.html in",
        "                        the zip archive. If no filename is given, an embedded",
        "                        report.html is the default.",
        "  --report-stylesheet CSSFILE",
        "                        Custom stylesheet to use for report. In particular,",
        "                        this can be used for branding the report with e.g. a",
        "                        custom logo, see docs.",
        "  --reporter PLUGIN     Specify a custom report plugin. By default,",
        "                        Snakemake's builtin html reporter will be used. For",
        "                        custom reporters, check out their command line options",
        "                        starting with --report-.",
        "",
        "NOTEBOOKS:",
        "  --draft-notebook TARGET",
        "                        Draft a skeleton notebook for the rule used to",
        "                        generate the given target file. This notebook can then",
        "                        be opened in a jupyter server, executed and",
        "                        implemented until ready. After saving, it will",
        "                        automatically be reused in non-interactive mode by",
        "                        Snakemake for subsequent jobs.",
        "  --edit-notebook TARGET",
        "                        Interactively edit the notebook associated with the",
        "                        rule used to generate the given target file. This will",
        "                        start a local jupyter notebook server. Any changes to",
        "                        the notebook should be saved, and the server has to be",
        "                        stopped by closing the notebook and hitting the 'Quit'",
        "                        button on the jupyter dashboard. Afterwards, the",
        "                        updated notebook will be automatically stored in the",
        "                        path defined in the rule. If the notebook is not yet",
        "                        present, this will create an empty draft.",
        "  --notebook-listen IP:PORT",
        "                        The IP address and PORT the notebook server used for",
        "                        editing the notebook (--edit-notebook) will listen on.",
        "                        (default: localhost:8888)",
        "",
        "UTILITIES:",
        "  --lint [{text,json}]  Perform linting on the given workflow. This will print",
        "                        snakemake specific suggestions to improve code quality",
        "                        (work in progress, more lints to be added in the",
        "                        future). If no argument is provided, plain text output",
        "                        is used.",
        "  --generate-unit-tests [TESTPATH]",
        "                        Automatically generate unit tests for each workflow",
        "                        rule. This assumes that all input files of each job",
        "                        are already present. Rules without a job with present",
        "                        input files will be skipped (a warning will be",
        "                        issued). For each rule, one test case will be created",
        "                        in the specified test folder (.tests/unit by default).",
        "                        After successful execution, tests can be run with",
        "                        'pytest TESTPATH'.",
        "  --containerize        Print a Dockerfile that provides an execution",
        "                        environment for the workflow, including all conda",
        "                        environments. (default: False)",
        "  --export-cwl FILE     Compile workflow to CWL and store it in given FILE.",
        "  --list-rules, --list, -l",
        "                        Show available rules in given Snakefile. (default:",
        "                        False)",
        "  --list-target-rules, --lt",
        "                        Show available target rules in given Snakefile.",
        "                        (default: False)",
        "  --dag                 Do not execute anything and print the directed acyclic",
        "                        graph of jobs in the dot language. Recommended use on",
        "                        Unix systems: snakemake --dag | dot | display. Note",
        "                        print statements in your Snakefile may interfere with",
        "                        visualization. (default: False)",
        "  --rulegraph           Do not execute anything and print the dependency graph",
        "                        of rules in the dot language. This will be less",
        "                        crowded than above DAG of jobs, but also show less",
        "                        information. Note that each rule is displayed once,",
        "                        hence the displayed graph will be cyclic if a rule",
        "                        appears in several steps of the workflow. Use this if",
        "                        above option leads to a DAG that is too large.",
        "                        Recommended use on Unix systems: snakemake --rulegraph",
        "                        | dot | display. Note print statements in your",
        "                        Snakefile may interfere with visualization. (default:",
        "                        False)",
        "  --filegraph           Do not execute anything and print the dependency graph",
        "                        of rules with their input and output files in the dot",
        "                        language. This is an intermediate solution between",
        "                        above DAG of jobs and the rule graph. Note that each",
        "                        rule is displayed once, hence the displayed graph will",
        "                        be cyclic if a rule appears in several steps of the",
        "                        workflow. Use this if above option leads to a DAG that",
        "                        is too large. Recommended use on Unix systems:",
        "                        snakemake --filegraph | dot | display. Note print",
        "                        statements in your Snakefile may interfere with",
        "                        visualization. (default: False)",
        "  --d3dag               Print the DAG in D3.js compatible JSON format.",
        "                        (default: False)",
        "  --summary, -S         Print a summary of all files created by the workflow.",
        "                        The has the following columns: filename, modification",
        "                        time, rule version, status, plan. Thereby rule version",
        "                        contains the version the file was created with (see",
        "                        the version keyword of rules), and status denotes",
        "                        whether the file is missing, its input files are newer",
        "                        or if version or implementation of the rule changed",
        "                        since file creation. Finally the last column denotes",
        "                        whether the file will be updated or created during the",
        "                        next workflow execution. (default: False)",
        "  --detailed-summary, -D",
        "                        Print a summary of all files created by the workflow.",
        "                        The has the following columns: filename, modification",
        "                        time, rule version, input file(s), shell command,",
        "                        status, plan. Thereby rule version contains the",
        "                        version the file was created with (see the version",
        "                        keyword of rules), and status denotes whether the file",
        "                        is missing, its input files are newer or if version or",
        "                        implementation of the rule changed since file",
        "                        creation. The input file and shell command columns are",
        "                        self explanatory. Finally the last column denotes",
        "                        whether the file will be updated or created during the",
        "                        next workflow execution. (default: False)",
        "  --archive FILE        Archive the workflow into the given tar archive FILE.",
        "                        The archive will be created such that the workflow can",
        "                        be re-executed on a vanilla system. The function needs",
        "                        conda and git to be installed. It will archive every",
        "                        file that is under git version control. Note that it",
        "                        is best practice to have the Snakefile, config files,",
        "                        and scripts under version control. Hence, they will be",
        "                        included in the archive. Further, it will add input",
        "                        files that are not generated by by the workflow itself",
        "                        and conda environments. Note that symlinks are",
        "                        dereferenced. Supported formats are .tar, .tar.gz,",
        "                        .tar.bz2 and .tar.xz.",
        "  --cleanup-metadata FILE [FILE ...], --cm FILE [FILE ...]",
        "                        Cleanup the metadata of given files. That means that",
        "                        snakemake removes any tracked version info, and any",
        "                        marks that files are incomplete.",
        "  --cleanup-shadow      Cleanup old shadow directories which have not been",
        "                        deleted due to failures or power loss. (default:",
        "                        False)",
        "  --skip-script-cleanup",
        "                        Don't delete wrapper scripts used for execution",
        "                        (default: False)",
        "  --unlock              Remove a lock on the working directory. (default:",
        "                        False)",
        "  --list-changes {input,params,code}, --lc {input,params,code}",
        "                        List all output files for which the given items (code,",
        "                        input, params) have changed since creation.",
        "  --list-input-changes, --li",
        "                        List all output files for which the defined input",
        "                        files have changed in the Snakefile (e.g. new input",
        "                        files were added in the rule definition or files were",
        "                        renamed). For listing input file modification in the",
        "                        filesystem, use --summary. (default: False)",
        "  --list-params-changes, --lp",
        "                        List all output files for which the defined params",
        "                        have changed in the Snakefile. (default: False)",
        "  --list-untracked, --lu",
        "                        List all files in the working directory that are not",
        "                        used in the workflow. This can be used e.g. for",
        "                        identifying leftover files. Hidden files and",
        "                        directories are ignored. (default: False)",
        "  --delete-all-output   Remove all files generated by the workflow. Use",
        "                        together with --dry-run to list files without actually",
        "                        deleting anything. Note that this will not recurse",
        "                        into subworkflows. Write-protected files are not",
        "                        removed. Nevertheless, use with care! (default: False)",
        "  --delete-temp-output  Remove all temporary files generated by the workflow.",
        "                        Use together with --dry-run to list files without",
        "                        actually deleting anything. Note that this will not",
        "                        recurse into subworkflows. (default: False)",
        "  --keep-incomplete     Do not remove incomplete output files by failed jobs.",
        "                        (default: False)",
        "  --drop-metadata       Drop metadata file tracking information after job",
        "                        finishes. Provenance-information based reports (e.g.",
        "                        --report and the --list_x_changes functions) will be",
        "                        empty or incomplete. (default: False)",
        "  --version, -v         show program's version number and exit",
        "",
        "OUTPUT:",
        "  --printshellcmds, -p  Print out the shell commands that will be executed.",
        "                        (default: False)",
        "  --debug-dag           Print candidate and selected jobs (including their",
        "                        wildcards) while inferring DAG. This can help to debug",
        "                        unexpected DAG topology or errors. (default: False)",
        "  --nocolor             Do not use a colored output. (default: False)",
        "  --quiet [{all,host,progress,rules} ...], -q [{all,host,progress,rules} ...]",
        "                        Do not output certain information. If used without",
        "                        arguments, do not output any progress or rule",
        "                        information. Defining 'all' results in no information",
        "                        being printed at all.",
        "  --print-compilation   Print the python representation of the workflow.",
        "                        (default: False)",
        "  --verbose             Print debugging output. (default: False)",
        "",
        "BEHAVIOR:",
        "  --force-use-threads   Force threads rather than processes. Helpful if shared",
        "                        memory (/dev/shm) is full or unavailable. (default:",
        "                        False)",
        "  --allow-ambiguity, -a",
        "                        Don't check for ambiguous rules and simply use the",
        "                        first if several can produce the same file. This",
        "                        allows the user to prioritize rules by their order in",
        "                        the snakefile. (default: False)",
        "  --nolock              Do not lock the working directory (default: False)",
        "  --ignore-incomplete, --ii",
        "                        Do not check for incomplete output files. (default:",
        "                        False)",
        "  --max-inventory-time SECONDS",
        "                        Spend at most SECONDS seconds to create a file",
        "                        inventory for the working directory. The inventory",
        "                        vastly speeds up file modification and existence",
        "                        checks when computing which jobs need to be executed.",
        "                        However, creating the inventory itself can be slow,",
        "                        e.g. on network file systems. Hence, we do not spend",
        "                        more than a given amount of time and fall back to",
        "                        individual checks for the rest. (default: 20)",
        "  --latency-wait SECONDS, --output-wait SECONDS, -w SECONDS",
        "                        Wait given seconds if an output file of a job is not",
        "                        present after the job finished. This helps if your",
        "                        filesystem suffers from latency (default 5). (default:",
        "                        5)",
        "  --wait-for-files [FILE ...]",
        "                        Wait --latency-wait seconds for these files to be",
        "                        present before executing the workflow. This option is",
        "                        used internally to handle filesystem latency in",
        "                        cluster environments.",
        "  --wait-for-files-file FILE",
        "                        Same behaviour as --wait-for-files, but file list is",
        "                        stored in file instead of being passed on the",
        "                        commandline. This is useful when the list of files is",
        "                        too long to be passed on the commandline.",
        "  --queue-input-wait-time SECONDS",
        "                        Set the interval in seconds to check for new input in",
        "                        rules that use from_queue to obtain input files.",
        "                        (default: 10)",
        "  --notemp, --nt        Ignore temp() declarations. This is useful when",
        "                        running only a part of the workflow, since temp()",
        "                        would lead to deletion of probably needed files by",
        "                        other parts of the workflow. (default: False)",
        "  --all-temp            Mark all output files as temp files. This can be",
        "                        useful for CI testing, in order to save space.",
        "                        (default: False)",
        "  --unneeded-temp-files FILE [FILE ...]",
        "                        Given files will not be uploaded to storage and",
        "                        immediately deleted after job or group job completion.",
        "  --keep-storage-local-copies",
        "                        Keep local copies of remote input files. (default:",
        "                        False)",
        "  --target-files-omit-workdir-adjustment",
        "                        Do not adjust the paths of given target files relative",
        "                        to the working directory. (default: False)",
        "  --allowed-rules ALLOWED_RULES [ALLOWED_RULES ...]",
        "                        Only consider given rules. If omitted, all rules in",
        "                        Snakefile are used. Note that this is intended",
        "                        primarily for internal use and may lead to unexpected",
        "                        results otherwise.",
        "  --max-jobs-per-timespan MAX_JOBS_PER_TIMESPAN",
        "                        Maximal number of job submissions/executions per",
        "                        timespan. Format: <number><timespan>, e.g. 50/1m or",
        "                        0.5/1s.",
        "  --max-jobs-per-second MAX_JOBS_PER_SECOND",
        "                        Maximal number of job submissions/executions per",
        "                        second. Deprecated in favor of --max-jobs-per-",
        "                        timespan.",
        "  --max-status-checks-per-second MAX_STATUS_CHECKS_PER_SECOND",
        "                        Maximal number of job status checks per second,",
        "                        default is 10, fractions allowed. (default: 10)",
        "  --seconds-between-status-checks SECONDS_BETWEEN_STATUS_CHECKS",
        "                        Number of seconds to wait between two rounds of status",
        "                        checks. (default: 10)",
        "  --retries RETRIES, --restart-times RETRIES, -T RETRIES",
        "                        Number of times to restart failing jobs (defaults to",
        "                        0). (default: 0)",
        "  --wrapper-prefix WRAPPER_PREFIX",
        "                        Prefix for URL created from wrapper directive",
        "                        (default: https://github.com/snakemake/snakemake-",
        "                        wrappers/raw/). Set this to a different URL to use",
        "                        your fork or a local clone of the repository, e.g.,",
        "                        use a git URL like",
        "                        'git+file://path/to/your/local/clone@'. (default:",
        "                        https://github.com/snakemake/snakemake-wrappers/raw/)",
        "  --default-storage-provider DEFAULT_STORAGE_PROVIDER",
        "                        Specify default storage provider to be used for all",
        "                        input and output files that don't yet specify one",
        "                        (e.g. 's3'). See",
        "                        https://snakemake.github.io/snakemake-plugin-catalog",
        "                        for available storage provider plugins. If not set or",
        "                        explicitly 'none', no default storage provider will be",
        "                        used.",
        "  --default-storage-prefix DEFAULT_STORAGE_PREFIX",
        "                        Specify prefix for default storage provider. E.g. a",
        "                        bucket name.",
        "  --local-storage-prefix LOCAL_STORAGE_PREFIX",
        "                        Specify prefix for storing local copies of storage",
        "                        files and folders. By default, this is a hidden",
        "                        subfolder in the workdir. It can however be freely",
        "                        chosen, e.g. in order to store those files on a local",
        "                        scratch disk. Environment variables will be expanded.",
        "                        (default: .snakemake/storage)",
        "  --remote-job-local-storage-prefix REMOTE_JOB_LOCAL_STORAGE_PREFIX",
        "                        Specify prefix for storing local copies of storage",
        "                        files and folders in case of remote jobs (e.g. cluster",
        "                        or cloud jobs). This may differ from --local-storage-",
        "                        prefix. If not set, uses value of --local-storage-",
        "                        prefix. By default, this is a hidden subfolder in the",
        "                        workdir. It can however be freely chosen, e.g. in",
        "                        order to store those files on a local scratch disk.",
        "                        Environment variables will be expanded within the",
        "                        remote job.",
        "  --shared-fs-usage {input-output,persistence,software-deployment,source-cache,sources,storage-local-copies,none} [{input-output,persistence,software-deployment,source-cache,sources,storage-local-copies,none} ...]",
        "                        Set assumptions on shared filesystem for non-local",
        "                        workflow execution. To disable any sharing via the",
        "                        filesystem, specify 'none'. Usually, the executor",
        "                        plugin sets this to a correct default. However,",
        "                        sometimes it is worth tuning this setting, e.g. for",
        "                        optimizing cluster performance. For example, when",
        "                        using '--default-storage-provider fs' together with a",
        "                        cluster executor like slurm, you might want to set '--",
        "                        shared-fs-usage persistence software-deployment",
        "                        sources source-cache', such that software deployment",
        "                        and data provenance will be handled by NFS but input",
        "                        and output files will be handled exclusively by the",
        "                        storage provider. (default: input-output persistence",
        "                        software-deployment source-cache sources storage-",
        "                        local-copies)",
        "  --scheduler-greediness SCHEDULER_GREEDINESS, --greediness SCHEDULER_GREEDINESS",
        "                        Set the greediness of scheduling. This value between 0",
        "                        and 1 determines how careful jobs are selected for",
        "                        execution. The default value (1.0) provides the best",
        "                        speed and still acceptable scheduling quality.",
        "  --scheduler-subsample SCHEDULER_SUBSAMPLE",
        "                        Set the number of jobs to be considered for",
        "                        scheduling. If number of ready jobs is greater than",
        "                        this value, this number of jobs is randomly chosen for",
        "                        scheduling; if number of ready jobs is lower, this",
        "                        option has no effect. This can be useful on very large",
        "                        DAGs, where the scheduler can take some time selecting",
        "                        which jobs to run.",
        "  --no-hooks            Do not invoke onstart, onsuccess or onerror hooks",
        "                        after execution. (default: False)",
        "  --debug               Allow to debug rules with e.g. PDB. This flag allows",
        "                        to set breakpoints in run blocks. (default: False)",
        "  --runtime-profile FILE",
        "                        Profile Snakemake and write the output to FILE. This",
        "                        requires yappi to be installed.",
        "  --local-groupid LOCAL_GROUPID",
        "                        Internal use only: Name for local groupid. (default:",
        "                        local)",
        "  --attempt ATTEMPT     Internal use only: define the initial value of the",
        "                        attempt parameter (default: 1). (default: 1)",
        "  --show-failed-logs    Automatically display logs of failed jobs. (default:",
        "                        False)",
        "  --log-handler-script FILE",
        "                        Provide a custom script containing a function 'def",
        "                        log_handler(msg):'. Snakemake will call this function",
        "                        for every logging output (given as a dictionary msg)",
        "                        allowing to e.g. send notifications in the form of",
        "                        e.g. slack messages or emails.",
        "  --log-service {none,slack,wms}",
        "                        Set a specific messaging service for logging output.",
        "                        Snakemake will notify the service on errors and",
        "                        completed execution. Currently slack and workflow",
        "                        management system (wms) are supported.",
        "  --job-deploy-sources  Whether the workflow sources shall be deployed before",
        "                        a remote job is started. Only applies if --no-shared-",
        "                        fs is set or executors are used that imply no shared",
        "                        FS (e.g. the kubernetes executor). (default: False)",
        "  --benchmark-extended  Write extended benchmarking metrics. (default: False)",
        "",
        "REMOTE EXECUTION:",
        "  --container-image IMAGE",
        "                        Docker image to use, e.g., when submitting jobs to",
        "                        kubernetes. Defaults to",
        "                        'https://hub.docker.com/r/snakemake/snakemake', tagged",
        "                        with the same version as the currently running",
        "                        Snakemake instance. Note that overwriting this value",
        "                        is up to your responsibility. Any used image has to",
        "                        contain a working snakemake installation that is",
        "                        compatible with (or ideally the same as) the currently",
        "                        running version. (default:",
        "                        snakemake/snakemake:v8.27.1)",
        "  --immediate-submit, --is",
        "                        Immediately submit all jobs to the cluster instead of",
        "                        waiting for present input files. This will fail,",
        "                        unless you make the cluster aware of job dependencies,",
        "                        e.g. via: $ snakemake --cluster 'sbatch --dependency",
        "                        {dependencies}. Assuming that your submit script (here",
        "                        sbatch) outputs the generated job id to the first",
        "                        stdout line, {dependencies} will be filled with space",
        "                        separated job ids this job depends on. Does not work",
        "                        for workflows that contain checkpoint rules. (default:",
        "                        False)",
        "  --jobscript SCRIPT, --js SCRIPT",
        "                        Provide a custom job script for submission to the",
        "                        cluster. The default script resides as 'jobscript.sh'",
        "                        in the installation directory.",
        "  --jobname NAME, --jn NAME",
        "                        Provide a custom name for the jobscript that is",
        "                        submitted to the cluster (see --cluster). NAME is",
        "                        \"snakejob.{name}.{jobid}.sh\" per default. The wildcard",
        "                        {jobid} has to be present in the name. (default:",
        "                        snakejob.{name}.{jobid}.sh)",
        "",
        "FLUX:",
        "  --flux                Execute your workflow on a flux cluster. Flux can work",
        "                        with both a shared network filesystem (like NFS) or",
        "                        without. If you don't have a shared filesystem,",
        "                        additionally specify --no-shared-fs. (default: False)",
        "",
        "SOFTWARE DEPLOYMENT:",
        "  --software-deployment-method {apptainer,conda,env-modules} [{apptainer,conda,env-modules} ...], --deployment-method {apptainer,conda,env-modules} [{apptainer,conda,env-modules} ...], --deployment {apptainer,conda,env-modules} [{apptainer,conda,env-modules} ...], --sdm {apptainer,conda,env-modules} [{apptainer,conda,env-modules} ...]",
        "                        Specify software environment deployment method.",
        "  --container-cleanup-images",
        "                        Remove unused containers (default: False)",
        "",
        "CONDA:",
        "  --use-conda           If defined in the rule, run job in a conda",
        "                        environment. If this flag is not set, the conda",
        "                        directive is ignored. (default: False)",
        "  --conda-not-block-search-path-envvars",
        "                        Do not block environment variables that modify the",
        "                        search path (R_LIBS, PYTHONPATH, PERL5LIB, PERLLIB)",
        "                        when using conda environments. (default: False)",
        "  --list-conda-envs     List all conda environments and their location on",
        "                        disk. (default: False)",
        "  --conda-prefix DIR    Specify a directory in which the 'conda' and 'conda-",
        "                        archive' directories are created. These are used to",
        "                        store conda environments and their archives,",
        "                        respectively. If not supplied, the value is set to the",
        "                        '.snakemake' directory relative to the invocation",
        "                        directory. If supplied, the `--use-conda` flag must",
        "                        also be set. The value may be given as a relative",
        "                        path, which will be extrapolated to the invocation",
        "                        directory, or as an absolute path. The value can also",
        "                        be provided via the environment variable",
        "                        $SNAKEMAKE_CONDA_PREFIX. In any case, the prefix may",
        "                        contain environment variables which will be properly",
        "                        expanded. Note that if you use remote execution e.g.",
        "                        on a cluster and you have node specific values for",
        "                        this, you should disable assuming shared fs for",
        "                        software-deployment (see --shared-fs-usage).",
        "  --conda-cleanup-envs  Cleanup unused conda environments. (default: False)",
        "  --conda-cleanup-pkgs [{tarballs,cache}]",
        "                        Cleanup conda packages after creating environments. In",
        "                        case of 'tarballs' mode, will clean up all downloaded",
        "                        package tarballs. In case of 'cache' mode, will",
        "                        additionally clean up unused package caches. If mode",
        "                        is omitted, will default to only cleaning up the",
        "                        tarballs.",
        "  --conda-create-envs-only",
        "                        If specified, only creates the job-specific conda",
        "                        environments then exits. The `--use-conda` flag must",
        "                        also be set. (default: False)",
        "  --conda-frontend {conda,mamba}",
        "                        Choose the conda frontend for installing environments.",
        "                        Mamba is much faster and highly recommended. (default:",
        "                        conda)",
        "",
        "APPTAINER/SINGULARITY:",
        "  --use-apptainer, --use-singularity",
        "                        If defined in the rule, run job within a",
        "                        apptainer/singularity container. If this flag is not",
        "                        set, the singularity directive is ignored. (default:",
        "                        False)",
        "  --apptainer-prefix DIR, --singularity-prefix DIR",
        "                        Specify a directory in which apptainer/singularity",
        "                        images will be stored.If not supplied, the value is",
        "                        set to the '.snakemake' directory relative to the",
        "                        invocation directory. If supplied, the `--use-",
        "                        apptainer` flag must also be set. The value may be",
        "                        given as a relative path, which will be extrapolated",
        "                        to the invocation directory, or as an absolute path.",
        "                        If not supplied, APPTAINER_CACHEDIR is used. In any",
        "                        case, the prefix may contain environment variables",
        "                        which will be properly expanded. Note that if you use",
        "                        remote execution e.g. on a cluster and you have node",
        "                        specific values for this, you should disable assuming",
        "                        shared fs for software-deployment (see --shared-fs-",
        "                        usage).",
        "  --apptainer-args ARGS, --singularity-args ARGS",
        "                        Pass additional args to apptainer/singularity.",
        "",
        "ENVIRONMENT MODULES:",
        "  --use-envmodules      If defined in the rule, run job within the given",
        "                        environment modules, loaded in the given order. This",
        "                        can be combined with --use-conda and --use-",
        "                        singularity, which will then be only used as a",
        "                        fallback for rules which don't define environment",
        "                        modules. (default: False)",
        "",
        "INTERNAL:",
        "  --scheduler-solver-path SCHEDULER_SOLVER_PATH",
        "                        Internal use only: Set the PATH to search for",
        "                        scheduler solver binaries.",
        "  --deploy-sources QUERY CHECKSUM",
        "                        Internal use only: Deploy sources archive from given",
        "                        storage provider query to the current working",
        "                        subdirectory and control for archive checksum to",
        "                        proceed.",
        "  --target-jobs TARGET_JOBS [TARGET_JOBS ...]",
        "                        Internal use only: Target particular jobs by",
        "                        RULE:WILDCARD1=VALUE,WILDCARD2=VALUE,...",
        "  --mode {default,remote,subprocess}",
        "                        Internal use only: Set execution mode of Snakemake.",
        "                        (default: default)",
        "",
        "html executor settings:",
        "  --report-html-path VALUE",
        "                        Path to the report file (either .html or .zip). Use",
        "                        zip if your report contains large results or",
        "                        directories with htmlindex as results.",
        "  --report-html-stylesheet-path VALUE",
        "                        Path to a custom stylesheet for the report.",
        "",
        " In general, command-line values override environment variables which override",
        "defaults."
    ],
    "spectral": [
        "spectral lint [documents..]",
        "",
        "lint JSON/YAML documents from files or URLs",
        "",
        "Positionals:",
        "  documents  Location of JSON/YAML documents. Can be either a file, a glob or fetchable resource(s) on the web.  [array] [default: []]",
        "",
        "Options:",
        "      --version                  Show version number  [boolean]",
        "      --help                     Show help  [boolean]",
        "  -e, --encoding                 text encoding to use  [string] [choices: \"utf8\", \"ascii\", \"utf-8\", \"utf16le\", \"ucs2\", \"ucs-2\", \"base64\", \"latin1\"] [default: \"utf8\"]",
        "  -f, --format                   formatters to use for outputting results, more than one can be provided by using multiple flags  [string] [choices: \"json\", \"stylish\", \"junit\", \"html\", \"text\", \"teamcity\", \"pretty\", \"github-actions\", \"sarif\", \"code-climate\", \"gitlab\", \"markdown\"] [default: \"stylish\"]",
        "  -o, --output                   where to output results, can be a single file name, multiple \"output.<format>\" or missing to print to stdout  [string]",
        "      --stdin-filepath           path to a file to pretend that stdin comes from  [string]",
        "      --resolver                 path to custom json-ref-resolver instance  [string]",
        "  -r, --ruleset                  path/URL to a ruleset file  [string]",
        "  -F, --fail-severity            results of this level or above will trigger a failure exit code  [string] [choices: \"error\", \"warn\", \"info\", \"hint\"] [default: \"error\"]",
        "  -D, --display-only-failures    only output results equal to or greater than --fail-severity  [boolean] [default: false]",
        "      --ignore-unknown-format    do not warn about unmatched formats  [boolean] [default: false]",
        "      --fail-on-unmatched-globs  fail on unmatched glob patterns  [boolean] [default: false]",
        "  -v, --verbose                  increase verbosity  [boolean]",
        "  -q, --quiet                    no logging - output only  [boolean]"
    ],
    "sql-lint": [
        "Usage: sql-lint [options]",
        "",
        "Lint sql files and stdin for errors, oddities, and bad practices.",
        "",
        "Options:",
        "  -V, --version                output the version number",
        "  --fix [string]               The .sql string to fix (experimental and alpha)",
        "  -d, --driver <string>        The driver to use, must be one of ['mysql',",
        "                               'postgres']",
        "  -v, --verbose                Brings back information on the what it's linting",
        "                               and the tokens generated",
        "  --format <string>            The format of the output, can be one of",
        "                               ['simple', 'json'] (default: \"simple\")",
        "  --host <string>              The host for the database connection",
        "  --user <string>              The user for the database connection",
        "  --password <string>          The password for the database connection",
        "  --port <string>              The port for the database connection",
        "  --config <string>            The path to the configuration file",
        "  --ignore-errors <string...>  The errors to ignore (comma separated)",
        "  -h, --help                   display help for command"
    ],
    "sqlfluff": [
        "Usage: sqlfluff [OPTIONS] COMMAND [ARGS]...",
        "",
        "  SQLFluff is a modular SQL linter for humans.",
        "",
        "Options:",
        "  --version   Show the version and exit.",
        "  -h, --help  Show this message and exit.",
        "",
        "Commands:",
        "  dialects  Show the current dialects available.",
        "  fix       Fix SQL files.",
        "  format    Autoformat SQL files.",
        "  lint      Lint SQL files via passing a list of files or using stdin.",
        "  parse     Parse SQL files and just spit out the result.",
        "  render    Render SQL files and just spit out the result.",
        "  rules     Show the current rules in use.",
        "  version   Show the version of sqlfluff.",
        "",
        "  Examples:",
        "",
        "  .. code-block:: sh",
        "",
        "     sqlfluff lint --dialect postgres .",
        "",
        "     sqlfluff lint --dialect mysql --rules ST05 my_query.sql",
        "",
        "     sqlfluff fix --dialect sqlite --rules LT10,ST05 src/queries",
        "",
        "     sqlfluff parse --dialect duckdb --templater jinja path/my_query.sql"
    ],
    "standard": [
        "standard - Use JavaScript Standard Style (https://standardjs.com)",
        "",
        "Usage:",
        "    standard <flags> [FILES...]",
        "",
        "    If FILES is omitted, all JavaScript source files (*.js, *.jsx, *.mjs, *.cjs)",
        "    in the current working directory are checked, recursively.",
        "",
        "    Certain paths (node_modules/, coverage/, vendor/, *.min.js, and",
        "    files/folders that begin with '.' like .git/) are automatically ignored.",
        "",
        "    Paths in a project's root .gitignore file are also automatically ignored.",
        "",
        "Flags:",
        "        --fix       Automatically fix problems",
        "        --version   Show current version",
        "    -h, --help      Show usage information",
        "",
        "Flags (advanced):",
        "        --stdin     Read file text from stdin",
        "        --ext       Specify JavaScript file extensions",
        "        --ignore    Specify files to ignore",
        "        --global    Declare global variable",
        "        --plugin    Use custom eslint plugin",
        "        --env       Use custom eslint environment",
        "        --parser    Use custom js parser (e.g. babel-eslint)",
        ""
    ],
    "stylelint": [
        "",
        "  A mighty CSS linter that helps you avoid errors and enforce conventions.",
        "",
        "  Usage: stylelint [input] [options]",
        "",
        "  Input: Files(s), glob(s), or nothing to use stdin.",
        "",
        "    If an input argument is wrapped in quotation marks, it will be passed to",
        "    globby for cross-platform glob support. \"node_modules\" are always ignored.",
        "    You can also pass no input and use stdin, instead.",
        "",
        "  Options:",
        "",
        "    --config, -c <path_or_module>",
        "",
        "      A path to a specific configuration file (JSON, YAML, CommonJS, or ES module),",
        "      or a module name in \"node_modules\" that points to one. If no argument is",
        "      provided, Stylelint will search for configuration files in the following",
        "      places, in this order:",
        "",
        "        - a \"stylelint\" property in \"package.json\"",
        "        - a \".stylelintrc\" file",
        "        - a \".stylelintrc.{cjs,mjs,js,json,yaml,yml}\" file",
        "        - a \"stylelint.config.{cjs,mjs,js}\" file",
        "",
        "      The search will begin in the working directory and move up the directory",
        "      tree until a configuration file is found.",
        "",
        "    --config-basedir <path>",
        "",
        "      An absolute path to the directory that relative paths defining \"extends\",",
        "      \"plugins\", and \"customSyntax\" are *relative to*. Only necessary if these",
        "      values are relative paths.",
        "",
        "    --print-config",
        "",
        "      Print the configuration for the given input file path. Globs are unsupported.",
        "",
        "    --ignore-path, -i <path>",
        "",
        "      A path to a file containing patterns that describe files to ignore. The",
        "      path can be absolute or relative to \"process.cwd()\". You can repeat the",
        "      option to provide multiple paths. By default, Stylelint looks for",
        "      \".stylelintignore\" in \"process.cwd()\". Multiple can be set.",
        "",
        "    --ignore-pattern, --ip <pattern>",
        "",
        "      A pattern of files to ignore (in addition to those in \".stylelintignore\").",
        "      Multiple can be set.",
        "",
        "    --fix [<mode>]",
        "",
        "      Automatically fix problems of certain rules. The modes are as follows:",
        "",
        "        lax          attempting to fix as much as possible even with syntax errors (default)",
        "        strict       only fixing when there are no syntax errors",
        "",
        "    --custom-syntax <name_or_path>",
        "",
        "      A module name or path to a JS file exporting a PostCSS-compatible syntax.",
        "",
        "    --stdin",
        "",
        "      Accept stdin input even if it is empty.",
        "",
        "    --stdin-filename <name>",
        "",
        "      A filename to assign stdin input.",
        "",
        "    --ignore-disables, --id",
        "",
        "      Ignore \"stylelint-disable\" comments.",
        "",
        "    --disable-default-ignores, --di",
        "",
        "      Allow linting of \"node_modules\".",
        "",
        "    --[no-]cache",
        "",
        "      Store the info about processed files in order to only operate on the",
        "      changed ones the next time you run Stylelint. By default, the cache is",
        "      stored in \"./.stylelintcache\". To adjust this, use \"--cache-location\".",
        "      Cache is disabled by default.",
        "",
        "    --cache-location <path>",
        "",
        "      A path to a file or directory to be used for the cache location. If a",
        "      directory is specified, a cache file will be created inside the specified",
        "      folder, with a name derived from a hash of the current working directory.",
        "",
        "      If the directory for the cache does not exist, make sure you add a trailing \"/\"",
        "      on *nix systems or \"\\\" on Windows. Otherwise the path will be assumed to",
        "      be a file.",
        "",
        "    --cache-strategy <strategy>",
        "",
        "      A strategy for the cache to use for detecting changed files. Either one of:",
        "",
        "        metadata     by metadata of a file (default)",
        "        content      by content of a file",
        "",
        "      The \"content\" strategy can be useful in cases where the modification time",
        "      of your files changes even if their contents have not. For example, this can",
        "      happen during git operations like \"git clone\" because git does not track file",
        "      modification time.",
        "",
        "    --formatter, -f <formatter>",
        "",
        "      An output formatter. The variants are as follows:",
        "",
        "        string       human-readable strings (default)",
        "        compact      similar to ESLint's compact formatter",
        "        github       workflow commands for GitHub Actions (DEPRECATED)",
        "        json         JSON format",
        "        tap          TAP format",
        "        unix         C compiler-like format",
        "        verbose      extend \"string\" to include a file list and a tally",
        "",
        "    --custom-formatter <path_or_module>",
        "",
        "      A path to a JS file or module name exporting a custom formatting function.",
        "",
        "    --quiet, -q",
        "",
        "      Only register problems for rules with an \"error\"-level severity (ignore",
        "      \"warning\"-level).",
        "",
        "    --quiet-deprecation-warnings",
        "",
        "      Ignore deprecations warnings.",
        "",
        "    --[no-]color",
        "",
        "      Force enabling/disabling of color.",
        "",
        "    --[no-]validate",
        "",
        "      Force enable/disable the validation of the rules' options.",
        "",
        "    --report-needless-disables, --rd",
        "",
        "      Also report errors for \"stylelint-disable\" comments that are not blocking",
        "      a lint warning. The process will exit with code 2 if needless disables are found.",
        "",
        "    --report-invalid-scope-disables, --risd",
        "",
        "      Report \"stylelint-disable\" comments that used for rules that don't exist",
        "      within the configuration object. The process will exit with code 2 if invalid",
        "      scope disables are found.",
        "",
        "    --report-descriptionless-disables, --rdd",
        "",
        "      Report \"stylelint-disable\" comments without a description. The process will",
        "      exit with code 2 if descriptionless disables are found.",
        "",
        "    --max-warnings, --mw <number>",
        "",
        "      The number of warnings above which the process will exit with code 2.",
        "      Useful when setting \"defaultSeverity\" to \"warning\" and expecting the process",
        "      to fail on warnings (e.g. CI build).",
        "",
        "    --output-file, -o <path>",
        "",
        "      A file path to write a report.",
        "",
        "    --allow-empty-input, --aei",
        "",
        "      When a glob pattern matches no files, the process will exit without throwing an error.",
        "",
        "    --globby-options, --go <json>",
        "",
        "      Options in JSON format passed to globby.",
        "",
        "    --version, -v",
        "",
        "      Show the version.",
        "",
        "    --help, -h",
        "",
        "      Show the help.",
        ""
    ],
    "stylua": [
        "stylua 2.0.0",
        "A utility to format Lua code",
        "",
        "USAGE:",
        "    stylua [OPTIONS] [FILES]...",
        "",
        "ARGS:",
        "    <FILES>...    A list of files to format",
        "",
        "OPTIONS:",
        "    -a, --allow-hidden",
        "            Whether to traverse hidden files/directories",
        "",
        "    -c, --check",
        "            Runs in 'check' mode",
        "",
        "        --color <COLOR>",
        "            Use colored output [default: Auto] [possible values: Always, Auto, Never]",
        "",
        "    -f, --config-path <CONFIG_PATH>",
        "            Specify path to stylua.toml configuration file",
        "",
        "    -g, --glob <GLOB>",
        "            Glob patterns to test against which files to check",
        "",
        "    -h, --help",
        "            Print help information",
        "",
        "        --no-editorconfig",
        "            Disables the EditorConfig feature",
        "",
        "        --num-threads <NUM_THREADS>",
        "            The number of threads to use to format files in parallel [default: 4]",
        "",
        "        --output-format <OUTPUT_FORMAT>",
        "            Configures the diff output when using 'check' mode [default: Standard] [possible values:",
        "            Standard, Unified, Json, Summary]",
        "",
        "        --range-end <RANGE_END>",
        "            An ending range to format files, given as a byte offset from the beginning of the file",
        "",
        "        --range-start <RANGE_START>",
        "            A starting range to format files, given as a byte offset from the beginning of the file",
        "",
        "        --respect-ignores",
        "            Respect .styluaignore and glob matching for file paths provided directly to the tool",
        "",
        "    -s, --search-parent-directories",
        "            Search parent directories for stylua.toml, if not found in current directory. Ignored if",
        "            config_path is provided",
        "",
        "        --stdin-filepath <STDIN_FILEPATH>",
        "            Specify the location of the file that is being passed into stdin. Ignored if not taking",
        "            in input from stdin",
        "",
        "    -v, --verbose",
        "            Enables verbose output",
        "",
        "    -V, --version",
        "            Print version information",
        "",
        "        --verify",
        "            Verifies the output correctness after formatting",
        "",
        "FORMATTING OPTIONS:",
        "        --call-parentheses <CALL_PARENTHESES>",
        "            Specify whether to apply parentheses on function calls with single string or table arg",
        "            [possible values: Always, NoSingleString, NoSingleTable, None, Input]",
        "",
        "        --collapse-simple-statement <COLLAPSE_SIMPLE_STATEMENT>",
        "            Specify whether to collapse simple statements [possible values: Never, FunctionOnly,",
        "            ConditionalOnly, Always]",
        "",
        "        --column-width <COLUMN_WIDTH>",
        "            The column width to use to attempt to wrap lines",
        "",
        "        --indent-type <INDENT_TYPE>",
        "            The type of indents to use [possible values: Tabs, Spaces]",
        "",
        "        --indent-width <INDENT_WIDTH>",
        "            The width of a single indentation level",
        "",
        "        --line-endings <LINE_ENDINGS>",
        "            The type of line endings to use [possible values: Unix, Windows]",
        "",
        "        --quote-style <QUOTE_STYLE>",
        "            The style of quotes to use in string literals [possible values: AutoPreferDouble,",
        "            AutoPreferSingle, ForceDouble, ForceSingle]",
        "",
        "        --sort-requires",
        "            Enable requires sorting",
        "",
        "        --space-after-function-names <SPACE_AFTER_FUNCTION_NAMES>",
        "            [possible values: Never, Definitions, Calls, Always]",
        "",
        "        --syntax <SYNTAX>",
        "            The type of Lua syntax to parse [possible values: All, Lua51]"
    ],
    "swiftlint": [
        "OVERVIEW: A tool to enforce Swift style and conventions.",
        "",
        "USAGE: swiftlint <subcommand>",
        "",
        "OPTIONS:",
        "  --version               Show the version.",
        "  -h, --help              Show help information.",
        "",
        "SUBCOMMANDS:",
        "  analyze                 Run analysis rules",
        "  docs                    Open SwiftLint documentation website in the default",
        "                          web browser",
        "  generate-docs           Generates markdown documentation for selected group",
        "                          of rules",
        "  lint (default)          Print lint warnings and errors",
        "  baseline                Operations on existing baselines",
        "  reporters               Display the list of reporters and their identifiers",
        "  rules                   Display the list of rules and their identifiers",
        "  version                 Display the current version of SwiftLint",
        "",
        "  See 'swiftlint help <subcommand>' for detailed help."
    ],
    "syft": [
        "Generate a packaged-based Software Bill Of Materials (SBOM) from container images and filesystems",
        "",
        "Usage:",
        "  syft [SOURCE] [flags]",
        "  syft [command]",
        "",
        "Examples:",
        "  syft scan alpine:latest                                a summary of discovered packages",
        "  syft scan alpine:latest -o json                        show all possible cataloging details",
        "  syft scan alpine:latest -o cyclonedx                   show a CycloneDX formatted SBOM",
        "  syft scan alpine:latest -o cyclonedx-json              show a CycloneDX JSON formatted SBOM",
        "  syft scan alpine:latest -o spdx                        show a SPDX 2.3 Tag-Value formatted SBOM",
        "  syft scan alpine:latest -o spdx@2.2                    show a SPDX 2.2 Tag-Value formatted SBOM",
        "  syft scan alpine:latest -o spdx-json                   show a SPDX 2.3 JSON formatted SBOM",
        "  syft scan alpine:latest -o spdx-json@2.2               show a SPDX 2.2 JSON formatted SBOM",
        "  syft scan alpine:latest -vv                            show verbose debug information",
        "  syft scan alpine:latest -o template -t my_format.tmpl  show a SBOM formatted according to given template file",
        "",
        "  Supports the following image sources:",
        "    syft scan yourrepo/yourimage:tag     defaults to using images from a Docker daemon. If Docker is not present, the image is pulled directly from the registry.",
        "    syft scan path/to/a/file/or/dir      a Docker tar, OCI tar, OCI directory, SIF container, or generic filesystem directory",
        "",
        "  You can also explicitly specify the scheme to use:",
        "    syft scan docker:yourrepo/yourimage:tag            explicitly use the Docker daemon",
        "    syft scan podman:yourrepo/yourimage:tag            explicitly use the Podman daemon",
        "    syft scan registry:yourrepo/yourimage:tag          pull image directly from a registry (no container runtime required)",
        "    syft scan docker-archive:path/to/yourimage.tar     use a tarball from disk for archives created from \"docker save\"",
        "    syft scan oci-archive:path/to/yourimage.tar        use a tarball from disk for OCI archives (from Skopeo or otherwise)",
        "    syft scan oci-dir:path/to/yourimage                read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)",
        "    syft scan singularity:path/to/yourimage.sif        read directly from a Singularity Image Format (SIF) container on disk",
        "    syft scan dir:path/to/yourproject                  read directly from a path on disk (any directory)",
        "    syft scan file:path/to/yourproject/file            read directly from a path on disk (any single file)",
        "",
        "",
        "Available Commands:",
        "  attest      Generate an SBOM as an attestation for the given [SOURCE] container image",
        "  cataloger   Show available catalogers and configuration",
        "  completion  Generate the autocompletion script for the specified shell",
        "  config      show the syft configuration",
        "  convert     Convert between SBOM formats",
        "  help        Help about any command",
        "  login       Log in to a registry",
        "  scan        Generate an SBOM",
        "  version     show version information",
        "",
        "Flags:",
        "      --base-path string                          base directory for scanning, no links will be followed above this directory, and all paths will be reported relative to this directory",
        "  -c, --config stringArray                        syft configuration file(s) to use",
        "      --enrich stringArray                        enable package data enrichment from local and online sources (options: all, golang, java, javascript)",
        "      --exclude stringArray                       exclude paths from being scanned using a glob expression",
        "      --file string                               file to write the default report output to (default is STDOUT) (DEPRECATED: use: --output FORMAT=PATH)",
        "      --from stringArray                          specify the source behavior to use (e.g. docker, registry, oci-dir, ...)",
        "  -h, --help                                      help for syft",
        "  -o, --output stringArray                        report output format (<format>=<file> to output to a file), formats=[cyclonedx-json cyclonedx-xml github-json spdx-json spdx-tag-value syft-json syft-table syft-text template] (default [syft-table])",
        "      --override-default-catalogers stringArray   set the base set of catalogers to use (defaults to 'image' or 'directory' depending on the scan source)",
        "      --platform string                           an optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux')",
        "      --profile stringArray                       configuration profiles to use",
        "  -q, --quiet                                     suppress all logging output",
        "  -s, --scope string                              selection of layers to catalog, options=[squashed all-layers] (default \"squashed\")",
        "      --select-catalogers stringArray             add, remove, and filter the catalogers to be used",
        "      --source-name string                        set the name of the target being analyzed",
        "      --source-version string                     set the version of the target being analyzed",
        "  -t, --template string                           specify the path to a Go template file",
        "  -v, --verbose count                             increase verbosity (-v = info, -vv = debug)",
        "      --version                                   version for syft",
        "",
        "Use \"syft [command] --help\" for more information about a command."
    ],
    "tekton-lint": [
        "tekton-lint [<options>]  <glob-pattern-to-yaml-files> ...",
        "",
        "Options:",
        "  --watch           Run tekton-lint in watch mode     [boolean] [default: false]",
        "  --color          Forcefully enable/disable colored output",
        "                                                       [boolean] [default: true]",
        "  --format         Format output. Available formatters: vscode | stylish | json",
        "            [string] [choices: \"vscode\", \"stylish\", \"json\"] [default: \"stylish\"]",
        "  --quiet          Report errors only                 [boolean] [default: false]",
        "  --max-warnings   Number of warnings to trigger nonzero exit code",
        "                                                          [number] [default: -1]",
        "  --config         location of the .tektonlintrc.yaml, defaults to cwd",
        "                                                         [string] [default: \"/\"]",
        "  --refresh-cache  If true will delete the cache directory for external tasks",
        "                                                    [boolean] [default: \"false\"]",
        "  --version        Show version number                                 [boolean]",
        "  --help           Show help                                           [boolean]",
        "",
        "Examples:",
        "  tekton-lint \"**/*.yaml\"                   Globstar matching",
        "  tekton-lint path/to/my/pipeline.yaml      Multiple glob patterns",
        "  \"path/to/my/tasks/*.yaml\"",
        "  tekton-lint --watch \"**/*.yaml\"           Watch mode"
    ],
    "terraform-fmt": [
        "Usage: terraform [global options] <subcommand> [args]",
        "",
        "The available commands for execution are listed below.",
        "The primary workflow commands are given first, followed by",
        "less common or more advanced commands.",
        "",
        "Main commands:",
        "  init          Prepare your working directory for other commands",
        "  validate      Check whether the configuration is valid",
        "  plan          Show changes required by the current configuration",
        "  apply         Create or update infrastructure",
        "  destroy       Destroy previously-created infrastructure",
        "",
        "All other commands:",
        "  console       Try Terraform expressions at an interactive command prompt",
        "  fmt           Reformat your configuration in the standard style",
        "  force-unlock  Release a stuck lock on the current workspace",
        "  get           Install or upgrade remote Terraform modules",
        "  graph         Generate a Graphviz graph of the steps in an operation",
        "  import        Associate existing infrastructure with a Terraform resource",
        "  login         Obtain and save credentials for a remote host",
        "  logout        Remove locally-stored credentials for a remote host",
        "  metadata      Metadata related commands",
        "  modules       Show all declared modules in a working directory",
        "  output        Show output values from your root module",
        "  providers     Show the providers required for this configuration",
        "  refresh       Update the state to match remote systems",
        "  show          Show the current state or a saved plan",
        "  state         Advanced state management",
        "  taint         Mark a resource instance as not fully functional",
        "  test          Execute integration tests for Terraform modules",
        "  untaint       Remove the 'tainted' state from a resource instance",
        "  version       Show the current Terraform version",
        "  workspace     Workspace management",
        "",
        "Global options (use these before the subcommand, if any):",
        "  -chdir=DIR    Switch to a different working directory before executing the",
        "                given subcommand.",
        "  -help         Show this help output, or the help for a specified subcommand.",
        "  -version      An alias for the \"version\" subcommand."
    ],
    "terragrunt": [
        "NAME:",
        "   terragrunt - Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in OpenTofu/Terraform to scale. For documentation, see https://terragrunt.gruntwork.io/.",
        "",
        "USAGE:",
        "   terragrunt <command> [options]",
        "",
        "COMMANDS:",
        "   aws-provider-patch     Overwrite settings on nested AWS providers to work around a Terraform bug (issue #13018).",
        "   catalog                Launch the user interface for searching and managing your module catalog.",
        "   graph                  Execute commands on the full graph of dependent modules for the current module, ensuring correct execution order.",
        "   graph-dependencies     Prints the terragrunt dependency graph to stdout.",
        "   hclfmt                 Recursively find hcl files and rewrite them into a canonical format.",
        "   hclvalidate            Find all hcl files from the config stack and validate them.",
        "   output-module-groups   Output groups of modules ordered by command (apply or destroy) as a list of list in JSON (useful for CI use cases).",
        "   render-json            Render the final terragrunt config, with all variables, includes, and functions resolved, as json.",
        "   run-all                Run a terraform command against a 'stack' by running the specified command in each subfolder.",
        "   scaffold               Scaffold a new Terragrunt module.",
        "   terragrunt-info        Emits limited terragrunt state on stdout and exits.",
        "   validate-inputs        Checks if the terragrunt configured inputs align with the terraform defined variables.",
        "   *                      Terragrunt forwards all other commands directly to Terraform",
        "",
        "GLOBAL OPTIONS:",
        "   --experiment value                                Enables specific experiments. For a list of available experiments, see https://terragrunt.gruntwork.io/docs/reference/experiment-mode . [$TERRAGRUNT_EXPERIMENT]",
        "   --experiment-mode                                 Enables experiment mode for Terragrunt. For more information, see https://terragrunt.gruntwork.io/docs/reference/experiment-mode . [$TERRAGRUNT_EXPERIMENT_MODE]",
        "   --feature value                                   Set feature flags for the HCL code. [$TERRAGRUNT_FEATURE]",
        "   --strict-control value                            Enables specific strict controls. For a list of available controls, see https://terragrunt.gruntwork.io/docs/reference/strict-mode . [$TERRAGRUNT_STRICT_CONTROL]",
        "   --strict-mode                                     Enables strict mode for Terragrunt. For more information, see https://terragrunt.gruntwork.io/docs/reference/strict-mode . [$TERRAGRUNT_STRICT_MODE]",
        "   --terragrunt-auth-provider-cmd value              The command and arguments that can be used to fetch authentication configurations. [$TERRAGRUNT_AUTH_PROVIDER_CMD]",
        "   --terragrunt-config value                         The path to the Terragrunt config file. Default is terragrunt.hcl. [$TERRAGRUNT_CONFIG]",
        "   --terragrunt-debug                                Write terragrunt-debug.tfvars to working folder to help root-cause issues. [$TERRAGRUNT_DEBUG]",
        "   --terragrunt-disable-bucket-update                When this flag is set Terragrunt will not update the remote state bucket. [$TERRAGRUNT_DISABLE_BUCKET_UPDATE]",
        "   --terragrunt-disable-command-validation           When this flag is set, Terragrunt will not validate the terraform command. [$TERRAGRUNT_DISABLE_COMMAND_VALIDATION]",
        "   --terragrunt-download-dir value                   The path to download OpenTofu/Terraform modules into. Default is .terragrunt-cache in the working directory. [$TERRAGRUNT_DOWNLOAD]",
        "   --terragrunt-exclude-dir value                    Unix-style glob of directories to exclude when running *-all commands. [$TERRAGRUNT_EXCLUDE_DIR]",
        "   --terragrunt-excludes-file value                  Path to a file with a list of directories that need to be excluded when running *-all commands. (default: .terragrunt-excludes) [$TERRAGRUNT_EXCLUDES_FILE]",
        "   --terragrunt-fail-on-state-bucket-creation        When this flag is set Terragrunt will fail if the remote state bucket needs to be created. [$TERRAGRUNT_FAIL_ON_STATE_BUCKET_CREATION]",
        "   --terragrunt-fetch-dependency-output-from-state   The option fetches dependency output directly from the state file instead of init dependencies and running terraform on them. [$TERRAGRUNT_FETCH_DEPENDENCY_OUTPUT_FROM_STATE]",
        "   --terragrunt-forward-tf-stdout                    If specified, the output of OpenTofu/Terraform commands will be printed as is, without being integrated into the Terragrunt log. [$TERRAGRUNT_FORWARD_TF_STDOUT]",
        "   --terragrunt-iam-assume-role-duration value       Session duration for IAM Assume Role session. Can also be set via the TERRAGRUNT_IAM_ASSUME_ROLE_DURATION environment variable. [$TERRAGRUNT_IAM_ASSUME_ROLE_DURATION]",
        "   --terragrunt-iam-assume-role-session-name value   Name for the IAM Assumed Role session. Can also be set via TERRAGRUNT_IAM_ASSUME_ROLE_SESSION_NAME environment variable. [$TERRAGRUNT_IAM_ASSUME_ROLE_SESSION_NAME]",
        "   --terragrunt-iam-role value                       Assume the specified IAM role before executing OpenTofu/Terraform. Can also be set via the TERRAGRUNT_IAM_ROLE environment variable. [$TERRAGRUNT_IAM_ROLE]",
        "   --terragrunt-iam-web-identity-token value         For AssumeRoleWithWebIdentity, the WebIdentity token. Can also be set via TERRAGRUNT_IAM_ASSUME_ROLE_WEB_IDENTITY_TOKEN environment variable [$TERRAGRUNT_IAM_ASSUME_ROLE_WEB_IDENTITY_TOKEN]",
        "   --terragrunt-ignore-dependency-errors             *-all commands continue processing components even if a dependency fails. [$TERRAGRUNT_IGNORE_DEPENDENCY_ERRORS]",
        "   --terragrunt-ignore-dependency-order              *-all commands will be run disregarding the dependencies [$TERRAGRUNT_IGNORE_DEPENDENCY_ORDER]",
        "   --terragrunt-ignore-external-dependencies         *-all commands will not attempt to include external dependencies [$TERRAGRUNT_IGNORE_EXTERNAL_DEPENDENCIES]",
        "   --terragrunt-include-dir value                    Unix-style glob of directories to include when running *-all commands [$TERRAGRUNT_INCLUDE_DIR]",
        "   --terragrunt-include-external-dependencies        *-all commands will include external dependencies [$TERRAGRUNT_INCLUDE_EXTERNAL_DEPENDENCIES]",
        "   --terragrunt-log-custom-format value              Set the custom log formatting [$TERRAGRUNT_LOG_CUSTOM_FORMAT]",
        "   --terragrunt-log-disable                          Disable logging [$TERRAGRUNT_LOG_DISABLE]",
        "   --terragrunt-log-disable-error-summary            Skip error summary at the end of the command. [$TERRAGRUNT_LOG_DISABLE_ERROR_SUMMARY]",
        "   --terragrunt-log-format value                     Set the log format [$TERRAGRUNT_LOG_FORMAT]",
        "   --terragrunt-log-level value                      Sets the logging level for Terragrunt. Supported levels: stderr, stdout, error, warn, info, debug, trace (default: info) [$TERRAGRUNT_LOG_LEVEL]",
        "   --terragrunt-log-show-abs-paths                   Show absolute paths in logs [$TERRAGRUNT_LOG_SHOW_ABS_PATHS]",
        "   --terragrunt-modules-that-include value           If flag is set, 'run-all' will only run the command against Terragrunt modules that include the specified file. [$TERRAGRUNT_MODULES_THAT_INCLUDE]",
        "   --terragrunt-no-auto-approve -auto-approve        Don't automatically append -auto-approve to the underlying OpenTofu/Terraform commands run with 'run-all'. (default: true) [$TERRAGRUNT_NO_AUTO_APPROVE]",
        "   --terragrunt-no-auto-init                         Don't automatically run 'terraform/tofu init' during other terragrunt commands. You must run 'terragrunt init' manually. (default: true) [$TERRAGRUNT_NO_AUTO_INIT]",
        "   --terragrunt-no-auto-retry                        Don't automatically re-run command in case of transient errors. (default: true) [$TERRAGRUNT_NO_AUTO_RETRY]",
        "   --terragrunt-no-color                             If specified, Terragrunt output won't contain any color. [$TERRAGRUNT_NO_COLOR]",
        "   --terragrunt-no-destroy-dependencies-check        When this flag is set, Terragrunt will not check for dependent modules when destroying. [$TERRAGRUNT_NO_DESTROY_DEPENDENCIES_CHECK]",
        "   --terragrunt-non-interactive                      Assume \"yes\" for all prompts. [$TERRAGRUNT_NON_INTERACTIVE]",
        "   --terragrunt-parallelism value                    *-all commands parallelism set to at most N modules (default: 2147483647) [$TERRAGRUNT_PARALLELISM]",
        "   --terragrunt-provider-cache                       Enables Terragrunt's provider caching. [$TERRAGRUNT_PROVIDER_CACHE]",
        "   --terragrunt-provider-cache-dir value             The path to the Terragrunt provider cache directory. By default, 'terragrunt/providers' folder in the user cache directory. [$TERRAGRUNT_PROVIDER_CACHE_DIR]",
        "   --terragrunt-provider-cache-hostname value        The hostname of the Terragrunt Provider Cache server. By default, 'localhost'. [$TERRAGRUNT_PROVIDER_CACHE_HOSTNAME]",
        "   --terragrunt-provider-cache-port value            The port of the Terragrunt Provider Cache server. By default, assigned automatically. [$TERRAGRUNT_PROVIDER_CACHE_PORT]",
        "   --terragrunt-provider-cache-registry-names value  The list of remote registries to cached by Terragrunt Provider Cache server. By default, 'registry.terraform.io', 'registry.opentofu.org'. (default: registry.terraform.io,registry.opentofu.org) [$TERRAGRUNT_PROVIDER_CACHE_REGISTRY_NAMES]",
        "   --terragrunt-provider-cache-token value           The Token for authentication to the Terragrunt Provider Cache server. By default, assigned automatically. [$TERRAGRUNT_PROVIDER_CACHE_TOKEN]",
        "   --terragrunt-queue-include-units-reading value    If flag is set, 'run-all' will only run the command against Terragrunt units that read the specified file via an HCL function. [$TERRAGRUNT_QUEUE_INCLUDE_UNITS_READING]",
        "   --terragrunt-source value                         Download OpenTofu/Terraform configurations from the specified source into a temporary folder, and run Terraform in that temporary folder. [$TERRAGRUNT_SOURCE]",
        "   --terragrunt-source-map value                     Replace any source URL (including the source URL of a config pulled in with dependency blocks) that has root source with dest. [$TERRAGRUNT_SOURCE_MAP]",
        "   --terragrunt-source-update                        Delete the contents of the temporary folder to clear out any old, cached source code before downloading new source code into it. [$TERRAGRUNT_SOURCE_UPDATE]",
        "   --terragrunt-strict-include                       If flag is set, only modules under the directories passed in with '--terragrunt-include-dir' will be included. [$TERRAGRUNT_STRICT_INCLUDE]",
        "   --terragrunt-tfpath value                         Path to the Terraform binary. Default is tofu (on PATH). (default: terraform) [$TERRAGRUNT_TFPATH]",
        "   --terragrunt-use-partial-parse-config-cache       Enables caching of includes during partial parsing operations. Will also be used for the --terragrunt-iam-role option if provided. [$TERRAGRUNT_USE_PARTIAL_PARSE_CONFIG_CACHE]",
        "   --terragrunt-working-dir value                    The path to the directory of Terragrunt configurations. Default is current directory. [$TERRAGRUNT_WORKING_DIR]",
        "   --help, -h                                        Show help",
        "   --version, -v                                     Show terragrunt version",
        "",
        "VERSION: v0.71.1",
        "",
        "AUTHOR: Gruntwork <www.gruntwork.io>"
    ],
    "terrascan": [
        "Terrascan",
        "",
        "Detect compliance and security violations across Infrastructure as Code to mitigate risk before provisioning cloud native infrastructure.",
        "For more information, please visit https://runterrascan.io/",
        "",
        "Usage:",
        "  terrascan [command]",
        "",
        "Available Commands:",
        "  init        Initializes Terrascan and clones policies from the Terrascan GitHub repository.",
        "  scan        Detect compliance and security violations across Infrastructure as Code.",
        "  server      Run Terrascan as an API server",
        "  version     Terrascan version",
        "",
        "Flags:",
        "  -c, --config-path string      config file path",
        "  -l, --log-level string        log level (debug, info, warn, error, panic, fatal) (default \"info\")",
        "      --log-output-dir string   directory path to write the log and output files",
        "  -x, --log-type string         log output type (console, json) (default \"console\")",
        "  -o, --output string           output type (human, json, yaml, xml, junit-xml, sarif, github-sarif) (default \"human\")",
        "      --temp-dir string         temporary directory path to download remote repository,module and templates",
        "",
        "Use \"terrascan [command] --help\" for more information about a command."
    ],
    "tflint": [
        "Usage:",
        "  tflint --chdir=DIR/--recursive [OPTIONS]",
        "",
        "Application Options:",
        "  -v, --version                                                 Print TFLint",
        "                                                                version",
        "      --init                                                    Install plugins",
        "      --langserver                                              Start language",
        "                                                                server",
        "  -f, --format=[default|json|checkstyle|junit|compact|sarif]    Output format",
        "  -c, --config=FILE                                             Config file",
        "                                                                name (default:",
        "                                                                .tflint.hcl)",
        "      --ignore-module=SOURCE                                    Ignore module",
        "                                                                sources",
        "      --enable-rule=RULE_NAME                                   Enable rules",
        "                                                                from the",
        "                                                                command line",
        "      --disable-rule=RULE_NAME                                  Disable rules",
        "                                                                from the",
        "                                                                command line",
        "      --only=RULE_NAME                                          Enable only",
        "                                                                this rule,",
        "                                                                disabling all",
        "                                                                other defaults.",
        "                                                                Can be",
        "                                                                specified",
        "                                                                multiple times",
        "      --enable-plugin=PLUGIN_NAME                               Enable plugins",
        "                                                                from the",
        "                                                                command line",
        "      --var-file=FILE                                           Terraform",
        "                                                                variable file",
        "                                                                name",
        "      --var='foo=bar'                                           Set a Terraform",
        "                                                                variable",
        "      --call-module-type=[all|local|none]                       Types of module",
        "                                                                to call",
        "                                                                (default: local)",
        "      --chdir=DIR                                               Switch to a",
        "                                                                different",
        "                                                                working",
        "                                                                directory",
        "                                                                before",
        "                                                                executing the",
        "                                                                command",
        "      --recursive                                               Run command in",
        "                                                                each directory",
        "                                                                recursively",
        "      --filter=FILE                                             Filter issues",
        "                                                                by file names",
        "                                                                or globs",
        "      --force                                                   Return zero",
        "                                                                exit status",
        "                                                                even if issues",
        "                                                                found",
        "      --minimum-failure-severity=[error|warning|notice]         Sets minimum",
        "                                                                severity level",
        "                                                                for exiting",
        "                                                                with a non-zero",
        "                                                                error code",
        "      --color                                                   Enable",
        "                                                                colorized output",
        "      --no-color                                                Disable",
        "                                                                colorized output",
        "      --fix                                                     Fix issues",
        "                                                                automatically",
        "      --no-parallel-runners                                     Disable",
        "                                                                per-runner",
        "                                                                parallelism",
        "      --max-workers=N                                           Set maximum",
        "                                                                number of",
        "                                                                workers in",
        "                                                                recursive",
        "                                                                inspection",
        "                                                                (default:",
        "                                                                number of CPUs)",
        "",
        "Help Options:",
        "  -h, --help                                                    Show this help",
        "                                                                message",
        ""
    ],
    "trivy": [
        "Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues and hard-coded secrets",
        "",
        "Usage:",
        "  trivy [global flags] command [flags] target",
        "  trivy [command]",
        "",
        "Examples:",
        "  # Scan a container image",
        "  $ trivy image python:3.4-alpine",
        "",
        "  # Scan a container image from a tar archive",
        "  $ trivy image --input ruby-3.1.tar",
        "",
        "  # Scan local filesystem",
        "  $ trivy fs .",
        "",
        "  # Run in server mode",
        "  $ trivy server",
        "",
        "Scanning Commands",
        "  config      Scan config files for misconfigurations",
        "  filesystem  Scan local filesystem",
        "  image       Scan a container image",
        "  kubernetes  [EXPERIMENTAL] Scan kubernetes cluster",
        "  repository  Scan a repository",
        "  rootfs      Scan rootfs",
        "  sbom        Scan SBOM for vulnerabilities and licenses",
        "  vm          [EXPERIMENTAL] Scan a virtual machine image",
        "",
        "Management Commands",
        "  module      Manage modules",
        "  plugin      Manage plugins",
        "  vex         [EXPERIMENTAL] VEX utilities",
        "",
        "Utility Commands",
        "  clean       Remove cached files",
        "  completion  Generate the autocompletion script for the specified shell",
        "  convert     Convert Trivy JSON report into a different format",
        "  help        Help about any command",
        "  registry    Manage registry authentication",
        "  server      Server mode",
        "  version     Print the version",
        "",
        "Flags:",
        "      --cache-dir string          cache directory (default \"/root/.cache/trivy\")",
        "  -c, --config string             config path (default \"trivy.yaml\")",
        "  -d, --debug                     debug mode",
        "  -f, --format string             version format (json)",
        "      --generate-default-config   write the default config to trivy-default.yaml",
        "  -h, --help                      help for trivy",
        "      --insecure                  allow insecure server connections",
        "  -q, --quiet                     suppress progress bar and log output",
        "      --timeout duration          timeout (default 5m0s)",
        "  -v, --version                   show version",
        "",
        "Use \"trivy [command] --help\" for more information about a command."
    ],
    "trivy-sbom": [
        "Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues and hard-coded secrets",
        "",
        "Usage:",
        "  trivy [global flags] command [flags] target",
        "  trivy [command]",
        "",
        "Examples:",
        "  # Scan a container image",
        "  $ trivy image python:3.4-alpine",
        "",
        "  # Scan a container image from a tar archive",
        "  $ trivy image --input ruby-3.1.tar",
        "",
        "  # Scan local filesystem",
        "  $ trivy fs .",
        "",
        "  # Run in server mode",
        "  $ trivy server",
        "",
        "Scanning Commands",
        "  config      Scan config files for misconfigurations",
        "  filesystem  Scan local filesystem",
        "  image       Scan a container image",
        "  kubernetes  [EXPERIMENTAL] Scan kubernetes cluster",
        "  repository  Scan a repository",
        "  rootfs      Scan rootfs",
        "  sbom        Scan SBOM for vulnerabilities and licenses",
        "  vm          [EXPERIMENTAL] Scan a virtual machine image",
        "",
        "Management Commands",
        "  module      Manage modules",
        "  plugin      Manage plugins",
        "  vex         [EXPERIMENTAL] VEX utilities",
        "",
        "Utility Commands",
        "  clean       Remove cached files",
        "  completion  Generate the autocompletion script for the specified shell",
        "  convert     Convert Trivy JSON report into a different format",
        "  help        Help about any command",
        "  registry    Manage registry authentication",
        "  server      Server mode",
        "  version     Print the version",
        "",
        "Flags:",
        "      --cache-dir string          cache directory (default \"/root/.cache/trivy\")",
        "  -c, --config string             config path (default \"trivy.yaml\")",
        "  -d, --debug                     debug mode",
        "  -f, --format string             version format (json)",
        "      --generate-default-config   write the default config to trivy-default.yaml",
        "  -h, --help                      help for trivy",
        "      --insecure                  allow insecure server connections",
        "  -q, --quiet                     suppress progress bar and log output",
        "      --timeout duration          timeout (default 5m0s)",
        "  -v, --version                   show version",
        "",
        "Use \"trivy [command] --help\" for more information about a command."
    ],
    "trufflehog": [
        "usage: TruffleHog [<flags>] <command> [<args> ...]",
        "",
        "TruffleHog is a tool for finding credentials.",
        "",
        "",
        "Flags:",
        "  -h, --[no-]help                Show context-sensitive help (also try",
        "                                 --help-long and --help-man).",
        "      --log-level=0              Logging verbosity on a scale of 0 (info) to 5",
        "                                 (trace). Can be disabled with \"-1\".",
        "      --[no-]profile             Enables profiling and sets a pprof and fgprof",
        "                                 server on :18066.",
        "  -j, --[no-]json                Output in JSON format.",
        "      --[no-]json-legacy         Use the pre-v3.0 JSON format. Only works with",
        "                                 git, gitlab, and github sources.",
        "      --[no-]github-actions      Output in GitHub Actions format.",
        "      --concurrency=4            Number of concurrent workers.",
        "      --[no-]no-verification     Don't verify the results.",
        "      --results=RESULTS          Specifies which type(s) of results to",
        "                                 output: verified, unknown, unverified,",
        "                                 filtered_unverified. Defaults to all types.",
        "      --[no-]allow-verification-overlap",
        "                                 Allow verification of similar credentials",
        "                                 across detectors",
        "      --[no-]filter-unverified   Only output first unverified result per",
        "                                 chunk per detector if there are more than one",
        "                                 results.",
        "      --filter-entropy=FILTER-ENTROPY",
        "                                 Filter unverified results with Shannon entropy.",
        "                                 Start with 3.0.",
        "      --config=CONFIG            Path to configuration file.",
        "      --[no-]print-avg-detector-time",
        "                                 Print the average time spent on each detector.",
        "      --[no-]no-update           Don't check for updates.",
        "      --[no-]fail                Exit with code 183 if results are found.",
        "      --verifier=VERIFIER ...    Set custom verification endpoints.",
        "      --[no-]custom-verifiers-only",
        "                                 Only use custom verification endpoints.",
        "      --detector-timeout=DETECTOR-TIMEOUT",
        "                                 Maximum time to spend scanning chunks per",
        "                                 detector (e.g., 30s).",
        "      --archive-max-size=ARCHIVE-MAX-SIZE",
        "                                 Maximum size of archive to scan. (Byte units",
        "                                 eg. 512B, 2KB, 4MB)",
        "      --archive-max-depth=ARCHIVE-MAX-DEPTH",
        "                                 Maximum depth of archive to scan.",
        "      --archive-timeout=ARCHIVE-TIMEOUT",
        "                                 Maximum time to spend extracting an archive.",
        "      --include-detectors=\"all\"  Comma separated list of detector types to",
        "                                 include. Protobuf name or IDs may be used,",
        "                                 as well as ranges.",
        "      --exclude-detectors=EXCLUDE-DETECTORS",
        "                                 Comma separated list of detector types to",
        "                                 exclude. Protobuf name or IDs may be used,",
        "                                 as well as ranges. IDs defined here take",
        "                                 precedence over the include list.",
        "      --[no-]no-verification-cache",
        "                                 Disable verification caching",
        "      --[no-]force-skip-binaries",
        "                                 Force skipping binaries.",
        "      --[no-]force-skip-archives",
        "                                 Force skipping archives.",
        "      --[no-]skip-additional-refs",
        "                                 Skip additional references.",
        "      --user-agent-suffix=USER-AGENT-SUFFIX",
        "                                 Suffix to add to User-Agent.",
        "      --[no-]version             Show application version.",
        "",
        "Commands:",
        "help [<command>...]",
        "    Show help.",
        "",
        "git [<flags>] <uri>",
        "    Find credentials in git repositories.",
        "",
        "github [<flags>]",
        "    Find credentials in GitHub repositories.",
        "",
        "github-experimental --repo=REPO [<flags>]",
        "    Run an experimental GitHub scan. Must specify at least one experimental",
        "    sub-module to run: object-discovery.",
        "",
        "gitlab --token=TOKEN [<flags>]",
        "    Find credentials in GitLab repositories.",
        "",
        "filesystem [<flags>] [<path>...]",
        "    Find credentials in a filesystem.",
        "",
        "s3 [<flags>]",
        "    Find credentials in S3 buckets.",
        "",
        "gcs [<flags>]",
        "    Find credentials in GCS buckets.",
        "",
        "syslog [<flags>]",
        "    Scan syslog",
        "",
        "circleci --token=TOKEN",
        "    Scan CircleCI",
        "",
        "docker --image=IMAGE [<flags>]",
        "    Scan Docker Image",
        "",
        "travisci --token=TOKEN",
        "    Scan TravisCI",
        "",
        "postman [<flags>]",
        "    Scan Postman",
        "",
        "elasticsearch [<flags>]",
        "    Scan Elasticsearch",
        "",
        "jenkins --url=URL [<flags>]",
        "    Scan Jenkins",
        "",
        "huggingface [<flags>]",
        "    Find credentials in HuggingFace datasets, models and spaces.",
        "",
        "analyze",
        "    Analyze API keys for fine-grained permissions information.",
        "",
        ""
    ],
    "ts-standard": [
        "ts-standard - Standard for TypeScript! (https://github.com/standard/ts-standard)",
        "",
        "Usage:",
        "  ts-standard <flags> [FILES...]",
        "",
        "  If FILES is omitted, all JavaScript/TypeScript source files (*.js, *.jsx, *.mjs, *.cjs, *.ts, *.tsx)",
        "  in the current working directory are checked, recursively.",
        "",
        "  Certain paths (node_modules/, coverage/, vendor/, *.min.js, and",
        "  files/folders that begin with '.' like .git/) are automatically ignored.",
        "",
        "  Paths in a project's root .gitignore file are also automatically ignored.",
        "",
        "Flags:",
        "      --fix       Automatically fix problems",
        "  -p, --project   Specify ts-config location (default: ./tsconfig.eslint.json or ./tsconfig.json)",
        "      --version   Show current version",
        "  -h, --help      Show usage information",
        "",
        "Flags (advanced):",
        "      --stdin     Read file text from stdin",
        "      --ext       Specify JavaScript/TypeScript file extensions",
        "      --global    Declare global variable",
        "      --plugin    Use custom eslint plugin",
        "      --env       Use custom eslint environment",
        "      --parser    Use custom ts/js parser (default: @typescript-eslint/parser)",
        ""
    ],
    "tsqllint": [
        "running tsqllint",
        "",
        "tsqllint [options] [file.sql] | [dir] | [file.sql | dir]",
        "",
        "  -c, --config          Used to specify a .tsqllintrc file path other than the",
        "                        default",
        "  -g, --ignorelist      Used to specify a .tsqllintignore file path other than",
        "                        the default",
        "  -f, --force           Used to force generation of default config file when",
        "                        one already exists",
        "  -x, --fix             Used to fix some of the common linting errors if",
        "                        possible",
        "  -i, --init            Generate default .tsqllintrc config file",
        "  -p, --print-config    Print path to config file",
        "  -l, --list-plugins    List the loaded plugins",
        "  -v, --version         Display tsqllint version",
        "  -h, --help            Display this help dialog",
        ""
    ],
    "v8r": [
        "\u2139 No config file found",
        "v8r <patterns..>",
        "",
        "Validate local json/json5/toml/yaml files against schema(s)",
        "",
        "Positionals:",
        "  patterns  One or more filenames or glob patterns describing local file or file",
        "            s to validate",
        "",
        "Options:",
        "      --help           Show help                                       [boolean]",
        "      --version        Show version number                             [boolean]",
        "  -v, --verbose        Run with verbose logging. Can be stacked e.g: -vv -vvv",
        "                                                                         [count]",
        "  -s, --schema         Local path or URL of a schema to validate against. If not",
        "                        supplied, we will attempt to find an appropriate schema",
        "                       on schemastore.org using the filename. If passed with glo",
        "                       b pattern(s) matching multiple files, all matching files",
        "                       will be validated against this schema            [string]",
        "  -c, --catalogs       Local path or URL of custom catalogs to use prior to sche",
        "                       mastore.org                                       [array]",
        "      --ignore-errors  Exit with code 0 even if an error was encountered. Passin",
        "                       g this flag means a non-zero exit code is only issued if",
        "                       validation could be completed successfully and one or mor",
        "                       e files were invalid           [boolean] [default: false]",
        "      --cache-ttl      Remove cached HTTP responses older than <cache-ttl> secon",
        "                       ds old. Passing 0 clears and disables cache completely",
        "                                                         [number] [default: 600]",
        "      --format         Output format for validation results",
        "                            [string] [choices: \"text\", \"json\"] [default: \"text\"]",
        "",
        "Examples:",
        "  v8r file.json                 Validate a single file",
        "  v8r file1.json file2.json     Validate multiple files",
        "  v8r 'dir/*.yml' 'dir/*.yaml'  Specify files to validate with glob patterns"
    ],
    "vale": [
        "vale - A command-line linter for prose.",
        "",
        "Usage:  vale [options] [input...]",
        "  vale myfile.md myfile1.md mydir1",
        "  vale --output=JSON [input...]",
        "",
        "Vale is a syntax-aware linter for prose built with speed and extensibility in",
        "mind. It supports Markdown, AsciiDoc, reStructuredText, HTML, and more.",
        "",
        "To get started, you'll need a configuration file (.vale.ini):",
        "",
        "Example:",
        "",
        "  MinAlertLevel = suggestion",
        "",
        "  [*]",
        "  BasedOnStyles = Vale",
        "",
        "See https://vale.sh for more setup information.",
        "",
        "Flags:",
        "",
        " --config         A file path (--config='some/file/path/.vale.ini').",
        " --ext            An extension to associate with stdin (--ext=.md).",
        " --filter         An expression to filter rules by.",
        " --glob           A glob pattern (--glob='*.{md,txt}.')",
        " -h, --help       Print this help message.",
        " --ignore-syntax  Lint all files line-by-line.",
        " --minAlertLevel  The minimum level to display (--minAlertLevel=error).",
        " --no-exit        Don't return a nonzero exit code on errors.",
        " --no-global      Don't load the global configuration.",
        " --no-wrap        Don't wrap CLI output.",
        " --output         An output style (\"line\", \"JSON\", or a template file).",
        " -v, --version    Print the current version.",
        "",
        "Commands:",
        "",
        " ls-config        Print the current configuration to stdout.",
        " ls-dirs          Print the default configuration directories to stdout.",
        " ls-metrics       Print the given file's internal metrics to stdout.",
        " ls-vars          Print the supported environment variables to stdout.",
        " sync             Download and install external configuration sources.",
        ""
    ],
    "xmllint": [
        "Unknown option --help",
        "Usage : xmllint [options] XMLfiles ...",
        "  Parse the XML files and output the result of the parsing",
        "  --version : display the version of the XML library used",
        "  --debug : dump a debug tree of the in-memory document",
        "  --shell : run a navigating shell",
        "  --debugent : debug the entities defined in the document",
        "  --copy : used to test the internal copy implementation",
        "  --recover : output what was parsable on broken XML documents",
        "  --huge : remove any internal arbitrary parser limits",
        "  --noent : substitute entity references by their value",
        "  --noenc : ignore any encoding specified inside the document",
        "  --noout : don't output the result tree",
        "  --path 'paths': provide a set of paths for resources",
        "  --load-trace : print trace of all external entities loaded",
        "  --nonet : refuse to fetch DTDs or entities over network",
        "  --nocompact : do not generate compact text nodes",
        "  --htmlout : output results as HTML",
        "  --nowrap : do not put HTML doc wrapper",
        "  --valid : validate the document in addition to std well-formed check",
        "  --postvalid : do a posteriori validation, i.e after parsing",
        "  --dtdvalid URL : do a posteriori validation against a given DTD",
        "  --dtdvalidfpi FPI : same but name the DTD with a Public Identifier",
        "  --insert : ad-hoc test for valid insertions",
        "  --quiet : be quiet when succeeded",
        "  --timing : print some timings",
        "  --repeat : repeat 100 times, for timing or profiling",
        "  --dropdtd : remove the DOCTYPE of the input docs",
        "  --html : use the HTML parser",
        "  --xmlout : force to use the XML serializer when using --html",
        "  --nodefdtd : do not default HTML doctype",
        "  --push : use the push mode of the parser",
        "  --pushsmall : use the push mode of the parser using tiny increments",
        "  --memory : parse from memory",
        "  --maxmem nbbytes : limits memory allocation to nbbytes bytes",
        "  --nowarning : do not emit warnings from parser/validator",
        "  --noblanks : drop (ignorable?) blanks spaces",
        "  --nocdata : replace cdata section with text nodes",
        "  --output file or -o file: save to a given file",
        "  --format : reformat/reindent the output",
        "  --encode encoding : output in the given encoding",
        "  --pretty STYLE : pretty-print in a particular style",
        "                   0 Do not pretty print",
        "                   1 Format the XML content, as --format",
        "                   2 Add whitespace inside tags, preserving content",
        "  --compress : turn on gzip compression of output",
        "  --c14n : save in W3C canonical format v1.0 (with comments)",
        "  --c14n11 : save in W3C canonical format v1.1 (with comments)",
        "  --exc-c14n : save in W3C exclusive canonical format (with comments)",
        "  --nsclean : remove redundant namespace declarations",
        "  --testIO : test user I/O support",
        "  --catalogs : use SGML catalogs from $SGML_CATALOG_FILES",
        "               otherwise XML Catalogs starting from",
        "           file:///etc/xml/catalog are activated by default",
        "  --nocatalogs: deactivate all catalogs",
        "  --auto : generate a small doc on the fly",
        "  --xinclude : do XInclude processing",
        "  --noxincludenode : same but do not generate XInclude nodes",
        "  --nofixup-base-uris : do not fixup xml:base uris",
        "  --loaddtd : fetch external DTD",
        "  --dtdattr : loaddtd + populate the tree with inherited attributes",
        "  --stream : use the streaming interface to process very large files",
        "  --walker : create a reader and walk though the resulting doc",
        "  --pattern pattern_value : test the pattern support",
        "  --relaxng schema : do RelaxNG validation against the schema",
        "  --schema schema : do validation against the WXS schema",
        "  --schematron schema : do validation against a schematron",
        "  --sax1: use the old SAX1 interfaces for processing",
        "  --sax: do not build a tree but work just at the SAX level",
        "  --oldxml10: use XML-1.0 parsing rules before the 5th edition",
        "  --xpath expr: evaluate the XPath expression, imply --noout",
        "  --max-ampl value: set maximum amplification factor",
        "",
        "Libxml project home page: https://gitlab.gnome.org/GNOME/libxml2"
    ],
    "yamllint": [
        "usage: yamllint [-h] [-] [-c CONFIG_FILE | -d CONFIG_DATA] [--list-files]",
        "                [-f {parsable,standard,colored,github,auto}] [-s]",
        "                [--no-warnings] [-v]",
        "                [FILE_OR_DIR ...]",
        "",
        "A linter for YAML files. yamllint does not only check for syntax validity, but",
        "for weirdnesses like key repetition and cosmetic problems such as lines",
        "length, trailing spaces, indentation, etc.",
        "",
        "positional arguments:",
        "  FILE_OR_DIR           files to check",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -                     read from standard input",
        "  -c CONFIG_FILE, --config-file CONFIG_FILE",
        "                        path to a custom configuration",
        "  -d CONFIG_DATA, --config-data CONFIG_DATA",
        "                        custom configuration (as YAML source)",
        "  --list-files          list files to lint and exit",
        "  -f {parsable,standard,colored,github,auto}, --format {parsable,standard,colored,github,auto}",
        "                        format for parsing output",
        "  -s, --strict          return non-zero exit code on warnings as well as",
        "                        errors",
        "  --no-warnings         output only error level problems",
        "  -v, --version         show program's version number and exit"
    ]
}