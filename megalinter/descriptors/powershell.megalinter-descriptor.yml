descriptor_id: POWERSHELL
descriptor_type: language
descriptor_flavors:
  - dotnet
  - dotnetweb
  - formatters
file_extensions:
  - ".ps1"
  - ".psm1"
  - ".psd1"
  - ".ps1xml"
  - ".pssc"
  - ".psrc"
  - ".cdxml"
# Reference: https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-linux
# Slightly modified to always retrieve latest stable Powershell version
# If changing PWSH_VERSION='latest' to a specific version, use format PWSH_VERSION='tags/v7.0.2'
install:
  apk:
    - icu-libs
  dockerfile:
    - |
      # renovate: datasource=github-tags depName=PowerShell/PowerShell
      ARG POWERSHELL_VERSION=7.5.2
    - |
      RUN curl -L https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-musl-x64.tar.gz -o /tmp/powershell.tar.gz \
          && mkdir -p /opt/microsoft/powershell/7 \
          && tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7 \
          && chmod +x /opt/microsoft/powershell/7/pwsh \
          && ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh
linters:
  # Internal powershell linter
  - class: PowershellLinter
    linter_name: powershell
    linter_text: |
      **PSScriptAnalyzer** is a static code checker for PowerShell modules and scripts that analyzes code quality by running a comprehensive set of rules based on PowerShell best practices identified by the PowerShell Team and community. It detects various aspects such as uninitialized variables, improper use of PSCredential type, dangerous use of Invoke-Expression, and many other potential code defects. The tool generates DiagnosticResults (errors and warnings) to inform users about issues and suggests possible solutions for improvements, supporting both built-in rules and custom rule creation.
    linter_url: https://github.com/PowerShell/PSScriptAnalyzer
    linter_repo: https://github.com/PowerShell/PSScriptAnalyzer
    linter_image_url: https://raw.githubusercontent.com/PowerShell/PSScriptAnalyzer/refs/heads/main/logo.png
    linter_rules_url: https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/rules/readme?view=ps-modules
    linter_rules_configuration_url: https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/using-scriptanalyzer?view=ps-modules#explicit
    linter_rules_inline_disable_url: https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/using-scriptanalyzer?view=ps-modules#suppressing-rules
    linter_spdx_license: MIT
    config_file_name: .powershell-psscriptanalyzer.psd1
    cli_lint_errors_regex: "(?m)^\\s*(Information|Warning|Error|ParseError)\\s"
    cli_lint_errors_count: regex_count
    cli_lint_fix_arg_name: "-Fix"
    version_extract_regex: "(\\d+) *(\\d+) *(\\d+)"
    examples:
      - 'pwsh -NoProfile -NoLogo -Command "Invoke-ScriptAnalyzer -EnableExit -Path myfile.ps1"'
      - 'pwsh -NoProfile -NoLogo -Command "Invoke-ScriptAnalyzer -EnableExit -Settings .powershell-psscriptanalyzer.psd1 -Path myfile.ps1"'
    # If changing PWSH_VERSION='latest' to a specific version, use format PWSH_VERSION='tags/v7.0.2'
    install:
      dockerfile:
        - |
          # renovate: datasource=nuget depName=PSScriptAnalyzer registryUrl=https://www.powershellgallery.com/api/v2/
          ARG PSSA_VERSION='1.24.0'
        - RUN pwsh -c 'Install-Module -Name PSScriptAnalyzer -RequiredVersion ${PSSA_VERSION} -Scope AllUsers -Force'
    ide:
      vscode:
        - name: VSCode PowerShell extension
          url: https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell
  # Internal powershell formatter
  - class: PowershellLinter
    linter_name: powershell_formatter
    linter_text: |
      **PowerShell Formatter** (via PSScriptAnalyzer) provides automatic code formatting for PowerShell scripts and modules using the Invoke-Formatter cmdlet. It applies consistent formatting rules to improve code readability and maintainability, including proper indentation, spacing, and code structure. The formatter supports configurable settings through .psd1 configuration files and can be integrated into development workflows to ensure consistent PowerShell code style across projects.
    variables:
      - name: POWERSHELL_POWERSHELL_FORMATTER_OUTPUT_ENCODING
        default_value: "utf8"
        description: "`-Encoding` to be used when writing content to the file"
    is_formatter: true
    linter_url: https://github.com/PowerShell/PSScriptAnalyzer
    linter_repo: https://github.com/PowerShell/PSScriptAnalyzer
    linter_image_url: https://raw.githubusercontent.com/PowerShell/PSScriptAnalyzer/refs/heads/main/logo.png
    linter_rules_url: https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/rules/readme?view=ps-modules
    linter_rules_configuration_url: https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/using-scriptanalyzer?view=ps-modules#explicit
    linter_rules_inline_disable_url: https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/using-scriptanalyzer?view=ps-modules#suppressing-rules
    linter_spdx_license: MIT
    config_file_name: .powershell-formatter.psd1
    test_folder: powershell_formatter
    cli_lint_fix_arg_name: "--megalinter-fix-flag" # Workaround for PowershellLinter class behavior
    version_extract_regex: "(\\d+) *(\\d+) *(\\d+)"
    examples:
      - 'pwsh -NoProfile -NoLogo -Command "Invoke-Formatter -ScriptDefinition ''write-host Hello World''"'
      - 'pwsh -NoProfile -NoLogo -Command "Invoke-Formatter -Settings .powershell-psscriptanalyzer.psd1 -ScriptDefinition ''write-host Hello World''"'
    # If changing PWSH_VERSION='latest' to a specific version, use format PWSH_VERSION='tags/v7.0.2'
    install:
      dockerfile:
        - |
          # renovate: datasource=nuget depName=PSScriptAnalyzer registryUrl=https://www.powershellgallery.com/api/v2/
          ARG PSSA_VERSION='1.24.0'
        - RUN pwsh -c 'Install-Module -Name PSScriptAnalyzer -RequiredVersion ${PSSA_VERSION} -Scope AllUsers -Force'
    ide:
      vscode:
        - name: VSCode PowerShell extension
          url: https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell
