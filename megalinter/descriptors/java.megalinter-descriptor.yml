descriptor_id: JAVA
descriptor_type: language
descriptor_flavors:
  - cupcake
  - java
file_extensions:
  - ".java"
install:
  apk:
    - openjdk21
  dockerfile:
    - ENV JAVA_HOME=/usr/lib/jvm/java-21-openjdk
    - ENV PATH="$JAVA_HOME/bin:${PATH}"
linters:
  # Java Checkstyle
  - linter_name: checkstyle
    can_output_sarif: true
    linter_url: https://checkstyle.org/
    linter_repo: https://github.com/checkstyle/checkstyle
    linter_spdx_license: LGPL-2.1
    linter_rules_url: https://checkstyle.org/checks.html
    linter_banner_image_url: https://checkstyle.org/images/header-checkstyle-logo.png
    linter_rules_configuration_url: https://checkstyle.org/config.html
    linter_rules_inline_disable_url: https://checkstyle.org/checks/annotation/suppresswarnings.html#SuppressWarnings
    linter_megalinter_ref_url: https://checkstyle.org/index.html#Related_Tools_Active_Tools
    config_file_name: sun_checks.xml
    cli_executable: java
    cli_lint_mode: list_of_files
    cli_lint_extra_args:
      - "-jar"
      - "/usr/bin/checkstyle"
    cli_sarif_args:
      - -f
      - sarif
      - -o
      - "{{SARIF_OUTPUT_FILE}}"
    cli_lint_errors_count: "regex_number"
    cli_lint_errors_regex: "Checkstyle ends with ([0-9]+) errors"
    cli_version_extra_args:
      - "-jar"
      - "/usr/bin/checkstyle"
    examples:
      - "java -jar /usr/bin/checkstyle myfile.java"
      - "java -jar /usr/bin/checkstyle -c sun_checks.xml myfile.java"
    install:
      dockerfile:
        - |
          RUN CHECKSTYLE_LATEST=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $(cat /run/secrets/GITHUB_TOKEN)" \
              https://api.github.com/repos/checkstyle/checkstyle/releases/latest \
                  | grep browser_download_url \
                  | grep ".jar" \
                  | cut -d '"' -f 4) \
              && curl --retry 5 --retry-delay 5 -sSL $CHECKSTYLE_LATEST \
                  --output /usr/bin/checkstyle
    ide:
      eclipse:
        - name: eclipse-cs
          url: https://checkstyle.org/eclipse-cs/#!/
      idea:
        - name: checkstyle-idea
          url: https://plugins.jetbrains.com/plugin/1065-checkstyle-idea
          id: CheckStyle-IDEA
      vscode:
        - name: vscode-checkstyle
          url: https://marketplace.visualstudio.com/items?itemName=shengchen.vscode-checkstyle
  # PMD for java
  - class: JavaPmdLinter
    can_output_sarif: true
    linter_name: pmd
    linter_repo: https://github.com/pmd/pmd
    linter_url: https://pmd.github.io/
    linter_spdx_license: Apache-2.0
    linter_rules_url: https://docs.pmd-code.org/pmd-doc-6.55.0/pmd_rules_java.html
    linter_rules_configuration_url: https://docs.pmd-code.org/pmd-doc-6.55.0/pmd_userdocs_configuring_rules.html
    linter_rules_inline_disable_url: https://docs.pmd-code.org/pmd-doc-6.55.0/pmd_userdocs_suppressing_warnings.html
    linter_image_url: https://github.com/pmd/pmd/raw/master/docs/images/logo/PMD.svg
    linter_megalinter_ref_url: https://pmd.sourceforge.io/pmd-6.55.0/pmd_userdocs_tools_ci.html
    cli_lint_mode: list_of_files
    cli_executable: /usr/bin/pmd/bin/pmd
    config_file_name: java-pmd-ruleset.xml
    cli_config_arg_name: "--rulesets"
    cli_sarif_args:
      - --format
      - sarif
      - --report-file
      - "{{SARIF_OUTPUT_FILE}}"
    examples:
      - "pmd --rulesets java-pmd-ruleset.xml --dir myfile.java"
      - "pmd --rulesets java-pmd-ruleset.xml --file-list /tmp/list-off-files-generated-by-megalinter.txt"
      - "pmd --rulesets java-pmd-ruleset.xml --dir /path/to/sources"
    install:
      dockerfile:
        - |
          # renovate: datasource=github-tags depName=pmd/pmd extractVersion=^pmd_releases/(?<version>.*)$
          ARG PMD_VERSION=7.11.0
        - |
          RUN wget --quiet https://github.com/pmd/pmd/releases/download/pmd_releases%2F${PMD_VERSION}/pmd-dist-${PMD_VERSION}-bin.zip && \
              unzip pmd-dist-${PMD_VERSION}-bin.zip || echo "Error unzipping" && \
              rm pmd-dist-${PMD_VERSION}-bin.zip || echo "Error rm" && \
              mv pmd-bin-${PMD_VERSION} /usr/bin/pmd || echo "Error mv" && \
              chmod +x /usr/bin/pmd/bin/pmd || echo "Error chmod"
