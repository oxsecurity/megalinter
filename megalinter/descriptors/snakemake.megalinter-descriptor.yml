descriptor_id: SNAKEMAKE
descriptor_type: tooling_format
descriptor_flavors:
  - all_flavors # Applicable to CI in any language project
  - formatters
file_extensions:
  - ".smk"
file_names_regex:
  - "Snakefile"
linters:
  # Internal snakemake linter
  - linter_name: snakemake
    linter_text: |
      **Snakemake** is a workflow management system with built-in linting capabilities that checks Snakefile syntax and workflow definitions. The `--lint` flag validates workflow structure, rule definitions, input/output specifications, and configuration correctness without executing the workflow. It ensures Snakemake workflows are syntactically correct and follow best practices for reproducible computational workflows. The linter helps catch errors early in workflow development for scientific computing, bioinformatics, and data analysis pipelines.
    name: SNAKEMAKE_LINT
    linter_url: https://snakemake.github.io/
    linter_repo: https://github.com/snakemake/snakemake
    linter_rules_configuration_url: https://snakemake.readthedocs.io/en/stable/snakefiles/configuration.html
    linter_banner_image_url: https://github.com/snakemake/snakemake/raw/6fcdc8a22db5522e232638bff16da9b50996eb45/images/biglogo.png
    linter_spdx_license: MIT
    cli_lint_extra_args:
      - "--lint"
      - "-s"
    examples:
      - "snakemake --lint -s Snakefile"
    install:
      dockerfile:
        - |-
          # renovate: datasource=pypi depName=snakemake
          ARG PIP_SNAKEMAKE_VERSION=9.6.2
      pip:
        - snakemake==${PIP_SNAKEMAKE_VERSION}
    ide:
      idea:
        - name: SnakeCharm
          url: https://plugins.jetbrains.com/plugin/11947-snakecharm
          id: SnakeCharm
      vscode:
        - name: VSCode SnakeMake
          url: https://marketplace.visualstudio.com/items?itemName=alping.vscode-snakemake
  # Snake Fmt
  - linter_name: snakefmt
    linter_text: |
      **snakefmt** is a formatter for Snakemake files that applies consistent styling and formatting to Snakefiles and .smk files. It standardizes indentation, spacing, line breaks, and overall code structure while preserving the semantic meaning of Snakemake workflows. The tool can check formatting compliance (--check mode) or automatically apply formatting fixes, helping maintain readable and consistent Snakemake workflow code across projects and teams.
    is_formatter: true
    name: SNAKEMAKE_SNAKEFMT
    linter_url: https://github.com/snakemake/snakefmt
    linter_repo: https://github.com/snakemake/snakefmt
    linter_rules_configuration_url: https://github.com/snakemake/snakefmt#configuration
    linter_spdx_license: MIT
    config_file_name: .snakefmt.toml
    cli_lint_extra_args:
      - "--check"
      - "--compact-diff"
    cli_config_arg_name: "--config"
    cli_lint_fix_arg_name: "--megalinter-fix-flag" # MegaLinter workaround
    cli_lint_fix_remove_args:
      - "--check"
      - "--compact-diff"
    examples:
      - "snakefmt --check --compact-diff Snakefile"
      - "snakefmt --check --compact-diff --config .snakefmt.toml Snakefile"
      - "snakefmt --config .snakefmt.toml Snakefile" # Fix
    install:
      dockerfile:
        - |-
          # renovate: datasource=pypi depName=snakefmt
          ARG PIP_SNAKEFMT_VERSION=0.11.0
      pip:
        - snakefmt==${PIP_SNAKEFMT_VERSION}
