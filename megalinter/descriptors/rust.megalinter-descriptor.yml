descriptor_id: RUST
descriptor_type: language
descriptor_flavors:
  - cupcake
  - rust
file_extensions:
  - ".rs"
linters:
  # CLIPPY
  - class: ClippyLinter
    linter_name: clippy
    linter_text: |
      **Clippy** is Rust's official linter that serves as an essential code quality tool, providing comprehensive analysis to catch common mistakes and improve code quality. It's maintained by the Rust team and integrated into the standard Rust toolchain.

      **Key Features:**

      - **Extensive Rule Coverage**: Over 750+ categorized lints covering correctness, performance, style, complexity, and pedantic guidelines
      - **Intelligent Categorization**: Organizes lints by severity - correctness (bugs), performance (optimizations), style (idiomatic patterns), complexity (simplification), and pedantic (strict standards)
      - **Automatic Fixes**: Machine-applicable suggestions that can automatically fix many issues with `cargo clippy --fix`
      - **MSRV Support**: Respects Minimum Supported Rust Version (MSRV) to ensure compatibility with older Rust versions
      - **Cargo Integration**: Seamlessly integrates with Cargo build system for zero-configuration usage
      - **Configurable Rules**: Extensive configuration options through `clippy.toml` for project-specific requirements
      - **Performance Focus**: Identifies optimization opportunities and suggests more efficient Rust patterns
      - **Safety Enforcement**: Helps prevent common programming errors and promotes memory-safe, thread-safe code
    linter_url: https://github.com/rust-lang/rust-clippy
    linter_repo: https://github.com/rust-lang/rust-clippy
    linter_spdx_license: Apache-2.0
    linter_rules_url: https://rust-lang.github.io/rust-clippy/stable/index.html
    linter_rules_configuration_url: https://github.com/rust-lang/rust-clippy#configuration
    linter_rules_inline_disable_url: https://github.com/rust-lang/rust-clippy#allowingdenying-lints
    config_file_name: .clippy.toml
    cli_config_arg_name: ""
    cli_executable: cargo-clippy
    cli_lint_mode: project
    examples:
      - "cargo-clippy"
    install:
      cargo:
        - clippy
    ide:
      vscode:
        - name: rust-analyzer
          url: https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer
