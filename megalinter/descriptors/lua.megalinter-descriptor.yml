descriptor_id: LUA
descriptor_type: language
file_extensions:
  - ".lua"
install:
  apk:
    - readline-dev
  dockerfile:
    - |
      RUN wget --tries=5 https://www.lua.org/ftp/lua-5.3.5.tar.gz -O - -q | tar -xzf - \
          && cd lua-5.3.5 \
          && make linux \
          && make install \
          && cd .. && rm -r lua-5.3.5/
linters:
  # LUACHECK
  - linter_name: luacheck
    linter_text: |
      **luacheck** is a static analyzer and linter for Lua code that detects various issues such as usage of undefined global variables, unused variables and values, accessing uninitialized variables, and unreachable code. It provides comprehensive code quality analysis for Lua projects.

      **Key Features:**

      - **Multi-version Lua support** for Lua 5.1-5.4 and LuaJIT syntax checking
      - **Undefined global variable detection** to catch common runtime errors
      - **Unused variable and value analysis** to improve code cleanliness
      - **Uninitialized variable access detection** for safer code
      - **Unreachable code identification** to optimize program flow
      - **Custom project globals** configuration for specific environments
      - **Standard library version selection** matching your Lua version
      - **Warning filtering** by type and variable name patterns
      - **Inline configuration comments** for granular control
      - **Project-wide config files** using `.luacheckrc`
      - **Detailed error reporting** with line numbers and suggestions
    linter_url: https://luacheck.readthedocs.io
    linter_repo: https://github.com/lunarmodules/luacheck
    linter_spdx_license: MIT
    linter_rules_url: https://luacheck.readthedocs.io/en/stable/warnings.html
    linter_rules_configuration_url: https://luacheck.readthedocs.io/en/stable/config.html
    linter_rules_inline_disable_url: https://luacheck.readthedocs.io/en/stable/inline.html
    linter_megalinter_ref_url: "no"
    config_file_name: .luacheckrc
    cli_config_arg_name: "--config"
    examples:
      - "luacheck myfile.lua"
      - "luacheck --config .chktexrc myfile.lua"
    install:
      apk:
        - openssl
      dockerfile:
        - |
          # renovate: datasource=github-tags depName=cvega/luarocks
          ARG LUA_LUACHECK_VERSION=3.3.1
        - |
          RUN wget --tries=5 https://github.com/cvega/luarocks/archive/v${LUA_LUACHECK_VERSION}-super-linter.tar.gz -O - -q | tar -xzf - \
              && cd luarocks-${LUA_LUACHECK_VERSION}-super-linter \
              && ./configure --with-lua-include=/usr/local/include \
              && make \
              && make -b install \
              && cd .. && rm -r luarocks-${LUA_LUACHECK_VERSION}-super-linter/ \
              && luarocks install luacheck \
              && cd /
    ide:
      brackets:
        - name: brackets-luacheck
          url: https://github.com/Malcolm3141/brackets-luacheck
      emacs:
        - name: flycheck
          url: http://www.flycheck.org/en/latest/languages.html#lua
      sublime:
        - name: SublimeLinter-luacheck
          url: https://packagecontrol.io/packages/SublimeLinter-luacheck
      vim:
        - name: Syntastic
          url: https://github.com/vim-syntastic/syntastic/wiki/Lua%3A---luacheck
      vscode:
        - name: vscode-luacheck
          url: https://marketplace.visualstudio.com/items?itemName=dwenegar.vscode-luacheck

  # SELENE
  - linter_name: selene
    linter_text: |
      **Selene** is a blazing-fast modern Lua linter written in Rust that provides comprehensive static analysis for Lua code. It offers extensive configurability and can be tailored to specific Lua environments like Roblox, World of Warcraft addons, or standard Lua.

      **Key Features:**

      - **Rust-powered performance** for extremely fast static analysis
      - **Environment-specific configurations** for Roblox, WoW addons, and standard Lua
      - **Comprehensive lint rules** covering code quality, style, and correctness
      - **Custom rule creation** for project-specific requirements
      - **TOML configuration files** for easy project setup and sharing
      - **Detailed error messages** with context and suggestions for fixes
      - **Multiple output formats** including JSON for tool integration
      - **Incremental analysis** for fast checking of large codebases
      - **Standard library definitions** for accurate global variable validation
      - **Inline rule filtering** using comments to disable specific checks
      - **Performance suggestions** to optimize Lua code execution
    linter_url: https://kampfkarren.github.io/selene/
    linter_repo: https://github.com/Kampfkarren/selene
    linter_rules_url: https://kampfkarren.github.io/selene/lints/index.html
    linter_rules_configuration_url: https://kampfkarren.github.io/selene/usage/configuration.html
    linter_rules_inline_disable_url: https://kampfkarren.github.io/selene/usage/filtering.html
    linter_megalinter_ref_url: "no"
    config_file_name: selene.toml
    cli_config_arg_name: "--config"
    examples:
      - "selene myfile.lua"
      - "selene --config chktexrc.toml myfile.lua"
    install:
      cargo:
        - selene@${CARGO_SELENE_VERSION}
      dockerfile:
        - |-
          # renovate: datasource=crate depName=selene
          ARG CARGO_SELENE_VERSION=0.28.0
    ide:
      neovim:
        - name:
            - nvim-lint
            - none-ls
          url:
            - https://github.com/mfussenegger/nvim-lint
            - https://github.com/nvimtools/none-ls.nvim
      sublime:
        - name: SublimeLinter-contrib-selene
          url: https://packagecontrol.io/packages/SublimeLinter-contrib-selene
      vscode:
        - name: selene-vscode
          url: https://marketplace.visualstudio.com/items?itemName=Kampfkarren.selene-vscode
  # STYLUA
  - linter_name: stylua
    linter_text: |
      **StyLua** is an opinionated code formatter for Lua that automatically formats Lua code to enforce consistent style. It removes the need for debates about formatting by providing sensible defaults while still allowing some configuration.

      **Key Features:**

      - **Opinionated formatting** with sensible defaults for consistent Lua code style
      - **Automatic indentation** and spacing management
      - **Line break optimization** for improved code readability
      - **Configurable options** via `stylua.toml` for project-specific needs
      - **Lua 5.1-5.4 support** covering all modern Lua versions
      - **LuaJIT compatibility** for Just-In-Time compiled Lua code
      - **Roblox Luau support** with specialized formatting rules
      - **Fast performance** for formatting large codebases quickly
      - **Ignore comments** to exclude specific code sections from formatting
      - **Range formatting** to format only selected portions of files
    linter_url: https://github.com/JohnnyMorganz/StyLua
    linter_repo: https://github.com/JohnnyMorganz/StyLua
    linter_rules_url: https://roblox.github.io/lua-style-guide/
    linter_rules_configuration_url: https://github.com/JohnnyMorganz/StyLua?tab=readme-ov-file#configuration
    linter_rules_inline_disable_url: https://github.com/JohnnyMorganz/StyLua?tab=readme-ov-file#ignoring-parts-of-a-file
    linter_megalinter_ref_url: "no"
    config_file_name: stylua.toml
    cli_config_arg_name: "--config-path"
    cli_version_arg_name: "-V"
    cli_lint_extra_args:
      - "--check"
    examples:
      - "stylua --check myfile.lua"
      - "stylua --config-path chktexrc.toml --check myfile.lua"
    install:
      cargo:
        - stylua@${CARGO_STYLUA_VERSION}
      dockerfile:
        - |-
          # renovate: datasource=crate depName=stylua
          ARG CARGO_STYLUA_VERSION=2.0.0
    ide:
      neovim:
        - name:
            - nvim-lint
            - none-ls
            - stylua-nvim
            - stylua.nvim
          url:
            - https://github.com/mfussenegger/nvim-lint
            - https://github.com/nvimtools/none-ls.nvim
            - https://github.com/ckipp01/stylua-nvim
            - https://github.com/wesleimp/stylua.nvim
      vscode:
        - name: Stylua
          url: https://marketplace.visualstudio.com/items?itemName=JohnnyMorganz.stylua
      sublime:
        - name: Sublime-Pretty-Lua
          url: https://packagecontrol.io/packages/Pretty%20Lua
