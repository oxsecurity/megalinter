descriptor_id: DOCKERFILE
descriptor_type: tooling_format
descriptor_flavors:
  - all_flavors # Applicable to CI in any language project
  - ci_light
  - cupcake
file_names_regex:
  - "Containerfile"
  - "Dockerfile"
test_folder: docker
linters:
  # Hadolint
  - linter_name: hadolint
    linter_text: |
      **Hadolint** is a smarter Dockerfile linter that helps you build best practice Docker images. The linter parses the Dockerfile into an AST and performs rules on top of the AST. It stands on the shoulders of **ShellCheck** to lint the Bash code inside `RUN` instructions.

      **Key Features:**

      - **AST-based Analysis**: Parses Dockerfile into Abstract Syntax Tree for comprehensive analysis
      - **ShellCheck Integration**: Automatically lints Bash/shell code within RUN instructions using ShellCheck
      - **Best Practice Enforcement**: Validates against Docker best practices and security guidelines
      - **Extensive Rule Set**: 60+ rules covering security, performance, maintainability, and style
      - **Multiple Output Formats**: Supports TTY, JSON, CheckStyle, CodeClimate, SARIF, and more
      - **Label Schema Validation**: Validates Docker labels against predefined schemas (semver, RFC3339, SPDX, etc.)
      - **Flexible Configuration**: Highly configurable via YAML config files or command-line options
      - **Trusted Registry Support**: Warns when using images from untrusted registries
      - **Multi-shell Support**: Handles non-POSIX shells (e.g., PowerShell for Windows containers)

      **Common checks include:**

      - **Security**: Non-root user requirements, sudo usage, trusted base images
      - **Performance**: Layer optimization, package manager best practices, caching strategies
      - **Maintainability**: Explicit versioning, proper instruction order, WORKDIR usage
      - **Style**: Consistent formatting, proper JSON notation for CMD/ENTRYPOINT
      - **Shell Safety**: Proper quoting, pipefail options, variable handling

      **Advanced features:**

      - Inline and global ignore pragmas for rule exceptions
      - Custom severity levels (error, warning, info, style)
      - Support for both Dockerfile and Containerfile formats

      Hadolint ensures your Dockerfiles are secure, efficient, and maintainable while following industry best practices.
    name: DOCKERFILE_HADOLINT
    can_output_sarif: true
    descriptor_flavors:
      - all_flavors # Applicable to CI in any language project
      - ci_light
      - cupcake
      - security
    linter_url: https://github.com/hadolint/hadolint
    linter_repo: https://github.com/hadolint/hadolint
    linter_spdx_license: GPL-3.0-only
    linter_rules_url: https://github.com/hadolint/hadolint#rules
    linter_image_url: https://hadolint.github.io/hadolint/img/cat_container.png
    linter_icon_png_url: https://raw.githubusercontent.com/oxsecurity/megalinter/main/docs/assets/icons/linters/hadolint.png
    linter_rules_configuration_url: https://github.com/hadolint/hadolint#configure
    linter_rules_inline_disable_url: https://github.com/hadolint/hadolint#inline-ignores
    linter_megalinter_ref_url: https://github.com/hadolint/hadolint/blob/master/docs/INTEGRATION.md#mega-linter
    cli_lint_mode: list_of_files
    cli_config_arg_name: "--config"
    config_file_name: .hadolint.yaml
    cli_sarif_args:
      - --format
      - sarif
    examples:
      - "hadolint Dockerfile"
      - "hadolint --config .hadolint.yml Dockerfile"
    install:
      dockerfile:
        - |-
          # renovate: datasource=docker depName=hadolint/hadolint
          ARG DOCKERFILE_HADOLINT_VERSION=v2.12.0-alpine
        - FROM hadolint/hadolint:${DOCKERFILE_HADOLINT_VERSION} AS hadolint
        - COPY --link --from=hadolint /bin/hadolint /usr/bin/hadolint
    ide:
      vscode:
        - name: hadolint
          url: https://marketplace.visualstudio.com/items?itemName=exiasr.hadolint
