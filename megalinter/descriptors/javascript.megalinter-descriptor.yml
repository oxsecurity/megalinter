descriptor_id: JAVASCRIPT
descriptor_type: language
descriptor_flavors:
  - cupcake
  - dotnetweb
  - formatters
  - javascript
file_extensions:
  - ".js"
linters:
  # ESLINT
  - class: EslintLinter
    linter_name: eslint
    name: JAVASCRIPT_ES
    can_output_sarif: true
    linter_spdx_license: MIT
    file_extensions:
      - ".js"
      - ".vue"
    linter_text: |
      **ESLint** is the #1 JavaScript linter by downloads on npm (over 77M weekly downloads) and the most widely adopted pluggable linting utility for JavaScript and JSX. It helps you find and fix problems with your JavaScript code through static analysis.

      **Key features:**

      - **Static Code Analysis**: Quickly finds problems in JavaScript code without executing it
      - **Automatic Fixing**: Many problems can be automatically fixed with syntax-aware corrections
      - **Highly Configurable**: Completely customizable rules, parsers, and plugins ecosystem
      - **Built-in Editor Integration**: Works seamlessly with most text editors and IDEs
      - **Extensible Plugin System**: Thousands of community plugins for frameworks like React, Vue, Node.js
      - **Multiple Output Formats**: Supports various output formats including SARIF for security tools
      - **Custom Rules**: Write your own rules that work alongside ESLint's built-in rules

      **Common code quality checks:**

      - **Syntax Errors**: Catches JavaScript syntax issues and typos
      - **Code Style**: Enforces consistent formatting, naming conventions, and code structure
      - **Best Practices**: Identifies problematic patterns and suggests improvements
      - **Security Issues**: Detects potential security vulnerabilities (with security plugins)
      - **Performance**: Identifies performance anti-patterns and optimizations

      **Popular configurations:**
      
      - **Airbnb Style Guide**: Industry-standard JavaScript style guide
      - **Standard**: Minimal, opinionated code style with no configuration
      - **Prettier Integration**: Seamless integration with Prettier for code formatting

      ESLint requires a custom configuration file applicable to your project. You can create it by typing `npx eslint --init` in the root of your repository.

      Used by companies like Microsoft, Airbnb, Netflix, and Facebook, ESLint helps maintain code quality and consistency across JavaScript projects of all sizes.
    linter_url: https://eslint.org
    linter_repo: https://github.com/eslint/eslint
    linter_rules_url: https://eslint.org/docs/latest/rules/
    linter_banner_image_url: https://d33wubrfki0l68.cloudfront.net/3b5ac7586466159bb6f237b633bfc4f5a8d5acf8/ee0a1/assets/img/posts/eslint-collective.png
    linter_rules_configuration_url: https://eslint.org/docs/latest/use/configure
    linter_rules_inline_disable_url: https://eslint.org/docs/latest/use/configure/rules#disabling-rules
    linter_rules_ignore_config_url: https://eslint.org/docs/latest/use/configure/ignore#the-eslintignore-file
    linter_megalinter_ref_url: https://eslint.org/docs/latest/use/integrations#source-control
    active_only_if_file_found:
      - ".eslintrc.json"
      - ".eslintrc.yml"
      - ".eslintrc.yaml"
      - ".eslintrc.js"
      - ".eslintrc.cjs"
      - "package.json:eslintConfig"
    cli_lint_mode: list_of_files
    config_file_name: .eslintrc.json
    cli_config_extra_args:
      - "--no-eslintrc"
    ignore_file_name: .eslintignore
    cli_lint_ignore_arg_name: --ignore-path
    cli_lint_extra_args:
      - "--no-ignore"
    cli_lint_fix_arg_name: "--fix"
    cli_sarif_args:
      - --format
      - "@microsoft/eslint-formatter-sarif"
      - -o
      - "{{SARIF_OUTPUT_FILE}}"
    cli_lint_errors_count: regex_sum
    cli_lint_errors_regex: "âœ– ([0-9]+) problem"
    examples:
      - "eslint myfile.js"
      - "eslint -c .eslintrc.json --no-eslintrc --no-ignore myfile.js"
      - "eslint --fix -c .eslintrc.json --no-eslintrc --no-ignore myfile.js"
    install:
      dockerfile:
        - |-
          # renovate: datasource=npm depName=eslint
          ARG NPM_ESLINT_VERSION=8.57.1
        - |-
          # renovate: datasource=npm depName=eslint-config-airbnb
          ARG NPM_ESLINT_CONFIG_AIRBNB_VERSION=19.0.4
        - |-
          # renovate: datasource=npm depName=eslint-config-prettier
          ARG NPM_ESLINT_CONFIG_PRETTIER_VERSION=10.1.5
        - |-
          # renovate: datasource=npm depName=eslint-config-standard
          ARG NPM_ESLINT_CONFIG_STANDARD_VERSION=17.1.0
        - |-
          # renovate: datasource=npm depName=eslint-plugin-import
          ARG NPM_ESLINT_PLUGIN_IMPORT_VERSION=2.32.0
        - |-
          # renovate: datasource=npm depName=eslint-plugin-jest
          ARG NPM_ESLINT_PLUGIN_JEST_VERSION=29.0.1
        - |-
          # renovate: datasource=npm depName=eslint-plugin-n
          ARG NPM_ESLINT_PLUGIN_N_VERSION=16.6.2
        - |-
          # renovate: datasource=npm depName=eslint-plugin-prettier
          ARG NPM_ESLINT_PLUGIN_PRETTIER_VERSION=5.5.1
        - |-
          # renovate: datasource=npm depName=eslint-plugin-promise
          ARG NPM_ESLINT_PLUGIN_PROMISE_VERSION=6.6.0
        - |-
          # renovate: datasource=npm depName=eslint-plugin-vue
          ARG NPM_ESLINT_PLUGIN_VUE_VERSION=10.2.0
        - |-
          # renovate: datasource=npm depName=@babel/core
          ARG NPM_BABEL_CORE_VERSION=7.27.7
        - |-
          # renovate: datasource=npm depName=@babel/eslint-parser
          ARG NPM_BABEL_ESLINT_PARSER_VERSION=7.27.5
        - |-
          # renovate: datasource=npm depName=@microsoft/eslint-formatter-sarif
          ARG NPM_MICROSOFT_ESLINT_FORMATTER_SARIF_VERSION=3.1.0
      npm:
        - eslint@${NPM_ESLINT_VERSION}
        - eslint-config-airbnb@${NPM_ESLINT_CONFIG_AIRBNB_VERSION}
        - eslint-config-prettier@${NPM_ESLINT_CONFIG_PRETTIER_VERSION}
        - eslint-config-standard@${NPM_ESLINT_CONFIG_STANDARD_VERSION}
        - eslint-plugin-import@${NPM_ESLINT_PLUGIN_IMPORT_VERSION}
        - eslint-plugin-jest@${NPM_ESLINT_PLUGIN_JEST_VERSION}
        - eslint-plugin-n@${NPM_ESLINT_PLUGIN_N_VERSION}
        - eslint-plugin-prettier@${NPM_ESLINT_PLUGIN_PRETTIER_VERSION}
        - eslint-plugin-promise@${NPM_ESLINT_PLUGIN_PROMISE_VERSION}
        - eslint-plugin-vue@${NPM_ESLINT_PLUGIN_VUE_VERSION}
        - "@babel/core@${NPM_BABEL_CORE_VERSION}"
        - "@babel/eslint-parser@${NPM_BABEL_ESLINT_PARSER_VERSION}"
        - "@microsoft/eslint-formatter-sarif@${NPM_MICROSOFT_ESLINT_FORMATTER_SARIF_VERSION}"
    ide:
      brackets:
        - name: brackets-eslint
          url: https://github.com/brackets-userland/brackets-eslint
      eclipse:
        - name: Tern-Linter-ESLint
          url: https://github.com/angelozerr/tern.java/wiki/Tern-Linter-ESLint
      emacs:
        - name: flycheck
          url: http://www.flycheck.org/en/latest/languages.html#javascript
      idea:
        - name: ESLint Plugin
          url: https://plugins.jetbrains.com/plugin/7494-eslint
          id: com.wix.eslint
      sublime:
        - name: SublimeLinter-eslint
          url: https://github.com/roadhump/SublimeLinter-eslint
      vim:
        - name: ale
          url: https://github.com/w0rp/ale
        - name: Syntastic
          url: https://github.com/vim-syntastic/syntastic/tree/master/syntax_checkers/javascript
      vscode:
        - name: vscode-eslint
          url: https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint
  # STANDARD
  - class: JavaScriptStandardLinter
    linter_name: standard
    linter_text: |
      **JavaScript Standard Style** is a JavaScript style guide, linter, and automatic code fixer that aims to eliminate bike-shedding around code style. It provides a zero-configuration approach to JavaScript linting with a predefined set of rules that promote readability and consistency. Standard Style enforces 2-space indentation, single quotes, no semicolons, and many other conventions to keep JavaScript code clean and consistent across projects.
    linter_spdx_license: MIT
    activation_rules:
      - type: variable
        variable: JAVASCRIPT_DEFAULT_STYLE
        expected_value: standard
        default_value: standard
    linter_url: https://standardjs.com/
    linter_repo: https://github.com/standard/standard
    linter_rules_url: https://standardjs.com/rules.html
    linter_rules_configuration_url: https://standardjs.com/#how-do-i-ignore-files
    linter_rules_inline_disable_url: https://standardjs.com/#how-do-i-disable-a-rule
    linter_banner_image_url: https://github.com/standard/standard/raw/master/sticker.png
    name: JAVASCRIPT_STANDARD
    cli_lint_mode: list_of_files
    cli_lint_fix_arg_name: "--fix"
    test_folder: javascript_standard
    examples:
      - "standard myfile.js"
      - "standard --fix myfile.js"
    install:
      dockerfile:
        - |-
          # renovate: datasource=npm depName=standard
          ARG NPM_STANDARD_VERSION=17.1.2
      npm:
        - standard@${NPM_STANDARD_VERSION}
    ide:
      brackets:
        - name: brackets-standard
          url: https://github.com/ishamf/brackets-standard/
      idea:
        - name: native support
          url: https://blog.jetbrains.com/webstorm/2017/01/webstorm-2017-1-eap-171-2272/
      sublime:
        - name: SublimeLinter-contrib-standard
          url: https://packagecontrol.io/packages/SublimeLinter-contrib-standard
        - name: StandardFormat
          url: https://packagecontrol.io/packages/StandardFormat
      vscode:
        - name: vscode-standard
          url: https://marketplace.visualstudio.com/items?itemName=standard.vscode-standard
  # PRETTIER
  - linter_name: prettier
    linter_text: |
      **Prettier** is an opinionated code formatter that supports many languages including JavaScript, TypeScript, CSS, HTML, JSON, and more. It removes all original styling and ensures that all outputted code conforms to a consistent style by parsing your code and re-printing it according to its own rules. Prettier enforces a consistent code style across your entire codebase by automatically formatting code, eliminating debates about formatting in code reviews.
    is_formatter: true
    linter_spdx_license: MIT
    activation_rules:
      - type: variable
        variable: JAVASCRIPT_DEFAULT_STYLE
        expected_value: prettier
        default_value: standard
    linter_url: https://prettier.io/
    linter_repo: https://github.com/prettier/prettier
    linter_rules_url: https://prettier.io/docs/en/options.html
    linter_rules_configuration_url: https://prettier.io/docs/en/configuration.html
    linter_rules_inline_disable_url: https://prettier.io/docs/en/ignore.html#javascript
    linter_banner_image_url: https://unpkg.com/prettier-logo@1.0.3/images/prettier-banner-light.svg
    config_file_name: ".prettierrc.json"
    cli_lint_mode: list_of_files
    cli_config_arg_name: "--config"
    cli_lint_extra_args:
      - "--check"
    cli_lint_fix_arg_name: "--write" # Workaround for MegaLinter
    cli_lint_fix_remove_args:
      - "--check"
    test_folder: javascript_prettier
    test_variables:
      JAVASCRIPT_DEFAULT_STYLE: prettier
    examples:
      - "prettier --check myfile.js"
      - "prettier --config .prettierrc.json --check myfile.js"
      - "prettier --config .prettierrc.json --write myfile.js" # format
    install:
      dockerfile:
        - |-
          # renovate: datasource=npm depName=prettier
          ARG NPM_PRETTIER_VERSION=3.6.2
      npm:
        - "prettier@${NPM_PRETTIER_VERSION}"
    ide:
      emacs:
        - name: prettier-emacs
          url: https://github.com/prettier/prettier-emacs
        - name: prettier.el
          url: https://github.com/jscheid/prettier.el
        - name: apheleia
          url: https://github.com/raxod502/apheleia
      idea:
        - name: Prettier
          url: https://plugins.jetbrains.com/plugin/10456-prettier
          id: intellij.prettierJS
      sublime:
        - name: JsPrettier
          url: https://packagecontrol.io/packages/JsPrettier
      vim:
        - name: vim-prettier
          url: https://github.com/prettier/vim-prettier
      visual_studio:
        - name: JavaScriptPrettier
          url: https://github.com/madskristensen/JavaScriptPrettier
      vscode:
        - name: prettier-vscode
          url: https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode
