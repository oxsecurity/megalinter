descriptor_id: KOTLIN
descriptor_type: language
descriptor_flavors:
  - all_flavors # As TeamCity uses Kotlin, any project can contain KOTLIN for its CI
  - cupcake
file_extensions:
  - ".kt"
  - ".kts"
install:
  apk:
    - openjdk21
  dockerfile:
    - ENV JAVA_HOME=/usr/lib/jvm/java-21-openjdk
    - ENV PATH="$JAVA_HOME/bin:${PATH}"
linters:
  # KTLINT
  - linter_name: ktlint
    can_output_sarif: true
    linter_url: https://ktlint.github.io
    linter_repo: https://github.com/pinterest/ktlint
    linter_rules_url: https://ktlint.github.io/#rules
    linter_banner_image_url: https://miro.medium.com/max/655/1*sLboL6JnC9yUodFsdSMB-w.png
    linter_megalinter_ref_url: https://github.com/pinterest/ktlint#-with-continuous-integration
    cli_lint_fix_arg_name: "--format"
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_sum
    cli_lint_errors_regex: '\s+[\w\-_]+:[\w\-_]+: ([0-9]+)'
    cli_sarif_args:
      - --reporter=sarif,output={{SARIF_OUTPUT_FILE}}
    examples:
      - "ktlint myfile.kt"
      - "ktlint --format myfile.kt"
    install:
      dockerfile:
        - |
          # renovate: datasource=github-tags depName=pinterest/ktlint
          ARG KTLINT_VERSION=1.5.0
        - |
          RUN curl --retry 5 --retry-delay 5 -sSLO https://github.com/pinterest/ktlint/releases/download/${KTLINT_VERSION}/ktlint && \
              chmod a+x ktlint && \
              mv "ktlint" /usr/bin/
    ide:
      emacs:
        - name: flycheck-kotlin
          url: https://github.com/whirm/flycheck-kotlin
      vim:
        - name: ale
          url: https://github.com/w0rp/ale
  # DETEKT
  - linter_name: detekt
    can_output_sarif: true
    linter_url: https://detekt.dev/
    linter_repo: https://github.com/detekt/detekt
    linter_rules_url: https://detekt.dev/docs/rules/comments
    linter_banner_image_url: https://repository-images.githubusercontent.com/71729669/8b793230-5d85-4c36-b72e-6911dd7bf6d3
    linter_megalinter_ref_url: https://detekt.dev/docs/intro
    cli_executable: detekt-cli
    cli_lint_mode: project
    cli_lint_errors_count: total_lines
    cli_sarif_args:
      - --report
      - "sarif:{{SARIF_OUTPUT_FILE}}"
    examples:
      - "detekt-cli"
      - "detekt-cli --report html:folder/kotlin_detekt_result.html"
    test_folder: kotlin_detekt
    install:
      dockerfile:
        - |
          # renovate: datasource=github-tags depName=detekt/detekt
          ARG DETEKT_VERSION=1.23.8
        - |
          RUN curl --retry 5 --retry-delay 5 -sSLO https://github.com/detekt/detekt/releases/download/v${DETEKT_VERSION}/detekt-cli-${DETEKT_VERSION}.zip && \
              unzip detekt-cli-${DETEKT_VERSION}.zip && \
              chmod a+x detekt-cli-${DETEKT_VERSION}/bin/* && \
              chmod a+x detekt-cli-${DETEKT_VERSION}/lib/* && \
              mv -n detekt-cli-${DETEKT_VERSION}/bin/* usr/bin && \
              mv -n detekt-cli-${DETEKT_VERSION}/lib/* usr/lib
    ide:
      emacs:
        - name: flycheck-kotlin
          url: https://github.com/whirm/flycheck-kotlin
      vim:
        - name: ale
          url: https://github.com/w0rp/ale
