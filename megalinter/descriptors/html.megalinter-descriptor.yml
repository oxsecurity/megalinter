descriptor_id: HTML
descriptor_type: format
descriptor_flavors:
  - all_flavors # Any project can contain HTML
  - cupcake
file_extensions:
  - ".html"
  - ".htm"
linters:
  # DJLINT
  - linter_name: djlint
    linter_text: |
      **djLint** is a comprehensive linter and formatter for HTML templates that supports multiple template languages. Originally created for use in the Atlas projects, it helps you find common syntax errors and reformat your HTML templates to make them shine.

      **Key Features:**

      - **Multi-Language Support**: Supports Django, Jinja, Nunjucks, Twig, Handlebars, Mustache, Golang templates, and Angular
      - **Comprehensive Rule Set**: 60+ built-in rules covering HTML standards, accessibility, security, and template-specific best practices
      - **Language-Specific Rules**: Specialized rules for Django (D-codes), Jinja (J-codes), HTML (H-codes), and general templates (T-codes)
      - **Auto-Formatting**: Automatically formats and beautifies HTML templates with consistent indentation and structure
      - **Configurable Profiles**: Pre-configured profiles for different template languages with appropriate rule sets
      - **Custom Rules**: Support for custom pattern-based and Python module rules for project-specific requirements
      - **Flexible Configuration**: Enable/disable rules via command line, configuration files, or inline comments

      For example, define `HTML_DJLINT_ARGUMENTS: ["--profile", "django"]` to select django format
    linter_url: https://djlint.com/
    linter_repo: https://github.com/Riverside-Healthcare/djlint
    linter_spdx_license: GPL-3.0-only
    linter_rules_url: https://djlint.com/docs/linter/
    linter_banner_image_url: https://raw.githubusercontent.com/Riverside-Healthcare/djLint/master/docs/src/static/img/icon.png
    linter_rules_configuration_url: https://djlint.com/docs/configuration/
    linter_rules_inline_disable_url: https://djlint.com/docs/ignoring-code/
    linter_megalinter_ref_url: https://djlint.com/docs/integrations/#megalinter
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "found ([0-9]+) errors"
    examples:
      - "djlint myfile1.html myfile2.html"
    install:
      dockerfile:
        - |-
          # renovate: datasource=pypi depName=djlint
          ARG PIP_DJLINT_VERSION=1.36.4
      pip:
        - djlint==${PIP_DJLINT_VERSION}
    ide:
      sublime:
        - name: SublimeLinter-contrib-djlint
          url: https://packagecontrol.io/packages/SublimeLinter-contrib-djlint
      vscode:
        - name: djlint-vscode
          url: https://marketplace.visualstudio.com/items?itemName=monosans.djlint
  # HTML HINT
  - linter_name: htmlhint
    linter_text: |
      **HTMLHint** is a static code analysis tool for HTML that helps developers write better HTML code by detecting errors, enforcing best practices, and ensuring compliance with HTML standards. It provides fast, configurable HTML validation with comprehensive rule coverage.

      **Key Features:**

      - **Comprehensive rule set** covering common HTML issues and best practices
      - **Unclosed tag detection** preventing malformed HTML structure
      - **Invalid attribute validation** ensuring proper HTML5 compliance
      - **Accessibility checking** helping meet WCAG and accessibility standards
      - **Performance optimization** detecting performance-impacting HTML patterns
      - **Configurable rules** via `.htmlhintrc` for project-specific requirements
      - **Fast processing** optimized for large HTML files and projects
      - **Multiple output formats** including JSON and XML for tool integration
      - **Inline rule configuration** for granular control over validation
      - **Template support** working with various HTML template engines
    linter_url: https://htmlhint.com/
    linter_repo: https://github.com/htmlhint/HTMLHint
    linter_spdx_license: MIT
    linter_rules_url: https://htmlhint.com/docs/user-guide/list-rules
    linter_image_url: https://htmlhint.com/_astro/htmlhint.DIRCoA_t_Z1czEXa.webp
    linter_rules_configuration_url: https://htmlhint.com/configuration/
    linter_rules_inline_disable_url: https://htmlhint.com/configuration/
    linter_megalinter_ref_url: https://htmlhint.com/integrations/task-runner/
    cli_lint_mode: list_of_files
    config_file_name: .htmlhintrc
    cli_config_arg_name: "--config"
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "found ([0-9]+) errors in"
    examples:
      - "htmlhint myfile.html"
      - "htmlhint --config .htmlhintrc myfile.html"
    install:
      dockerfile:
        - |-
          # renovate: datasource=npm depName=htmlhint
          ARG NPM_HTMLHINT_VERSION=1.6.3
      npm:
        - htmlhint@${NPM_HTMLHINT_VERSION}
    ide:
      brackets:
        - name: brackets-htmlhint
          url: https://github.com/htmlhint/brackets-htmlhint
      sublime:
        - name: SublimeLinter-contrib-htmlhint
          url: https://github.com/htmlhint/SublimeLinter-contrib-htmlhint
      vscode:
        - name: vscode-htmlhint
          url: https://marketplace.visualstudio.com/items?itemName=HTMLHint.vscode-htmlhint
