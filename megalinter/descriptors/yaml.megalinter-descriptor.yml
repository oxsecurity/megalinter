descriptor_id: YAML
descriptor_type: format
descriptor_flavors:
  - all_flavors # Any project can contain YAML
  - ci_light
  - cupcake
file_extensions:
  - ".yml"
  - ".yaml"
linters:
  # PRETTIER
  - linter_name: prettier
    is_formatter: true
    linter_url: https://prettier.io/
    linter_repo: https://github.com/prettier/prettier
    linter_rules_url: https://prettier.io/docs/en/options.html
    linter_rules_configuration_url: https://prettier.io/docs/en/configuration.html
    linter_rules_inline_disable_url: https://prettier.io/docs/en/ignore.html#yaml
    linter_banner_image_url: https://github.com/standard/standard/raw/master/sticker.png
    config_file_name: ".prettierrc.json"
    cli_config_arg_name: "--config"
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_count
    cli_lint_errors_regex: "\\[error\\]"
    cli_lint_warnings_count: regex_count
    cli_lint_warnings_regex: "\\[warn\\]"
    cli_lint_extra_args:
      - "--check"
    cli_lint_fix_arg_name: "--write"
    cli_lint_fix_remove_args:
      - "--check"
    examples:
      - "prettier --check myfile.yml"
      - "prettier --config .prettierrc.json --check myfile.yml"
      - "prettier --config .prettierrc.json --write myfile.yml" # format
    install:
      dockerfile:
        - |-
          # renovate: datasource=npm depName=prettier
          ARG NPM_PRETTIER_VERSION=3.5.3
      npm:
        - "prettier@${NPM_PRETTIER_VERSION}"
    ide:
      atom:
        - name: prettier-atom
          url: https://github.com/prettier/prettier-atom
        - name: atom-mprettier
          url: https://github.com/t9md/atom-mprettier
        - name: atom-miniprettier
          url: https://github.com/duailibe/atom-miniprettier
      emacs:
        - name: prettier-emacs
          url: https://github.com/prettier/prettier-emacs
        - name: prettier.el
          url: https://github.com/jscheid/prettier.el
        - name: apheleia
          url: https://github.com/raxod502/apheleia
      idea:
        - name: Prettier
          url: https://plugins.jetbrains.com/plugin/10456-prettier
          id: intellij.prettierJS
      sublime:
        - name: JsPrettier
          url: https://packagecontrol.io/packages/JsPrettier
      vim:
        - name: vim-prettier
          url: https://github.com/prettier/vim-prettier
      visual_studio:
        - name: JavaScriptPrettier
          url: https://github.com/madskristensen/JavaScriptPrettier
      vscode:
        - name: prettier-vscode
          url: https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode
  # YAMLLINT
  - linter_name: yamllint
    linter_url: https://yamllint.readthedocs.io/
    linter_repo: https://github.com/adrienverge/yamllint
    linter_speed: 3
    linter_rules_url: https://yamllint.readthedocs.io/en/stable/rules.html
    linter_rules_configuration_url: https://yamllint.readthedocs.io/en/stable/configuration.html#configuration
    linter_megalinter_ref_url: "no"
    config_file_name: ".yamllint.yml"
    cli_lint_mode: list_of_files
    cli_lint_extra_args:
      - --format
      - standard
    cli_lint_errors_count: regex_count
    cli_lint_errors_regex: "[0-9]+:[0-9]+:?\\s*(?:\\[?warning\\]?|\\[?error\\]?)|(?:::warning file=|::error file=)"
    examples:
      - "yamllint myfile.yaml"
      - "yamllint -c .yamllint.yml myfile.yaml"
      - "yamllint --strict"
      - "yamllint --no-warnings"
    install:
      dockerfile:
        - |-
          # renovate: datasource=pypi depName=yamllint
          ARG PIP_YAMLLINT_VERSION=1.37.0
      pip:
        - yamllint==${PIP_YAMLLINT_VERSION}
    ide:
      emacs:
        - name: flycheck
          url: https://github.com/krzysztof-magosa/flycheck-yamllint
      vim:
        - name: ale
          url: https://github.com/w0rp/ale
  # V8R
  - linter_name: v8r
    linter_url: https://github.com/chris48s/v8r
    linter_repo: https://github.com/chris48s/v8r
    linter_speed: 1
    linter_text: v8r checks the validity of JSON/YAML files if they have a matching schema defined on [schemastore.org](https://www.schemastore.org/json/)
    linter_rules_url: https://www.schemastore.org/json/
    linter_megalinter_ref_url: "no"
    config_file_name: ".v8rrc.yml"
    cli_config_arg_name: ""
    cli_lint_mode: list_of_files
    cli_lint_extra_args:
      - "--ignore-errors"
    cli_help_arg_name: "--help"
    test_folder: yaml_schema
    examples:
      - "v8r --ignore-errors myfile.yml"
      - "v8r --ignore-errors myfile.yaml"
    install:
      dockerfile:
        - |-
          # renovate: datasource=npm depName=v8r
          ARG NPM_V8R_VERSION=4.3.0
      npm:
        - v8r@${NPM_V8R_VERSION}
    ide:
      eclipse:
        - name: native support
          url: https://www.eclipse.org/
      idea:
        - name: native support
          url: https://www.jetbrains.com/products/#type=ide
      vim:
        - name: vison
          url: https://github.com/Quramy/vison
      vscode:
        - name: native support
          url: https://code.visualstudio.com/
