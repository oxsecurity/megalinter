descriptor_id: SQL
descriptor_type: language
descriptor_flavors:
  - all_flavors # SQL can be found in any project type
  - cupcake
file_extensions:
  - ".sql"
linters:
  # SQLFLUFF
  - linter_name: sqlfluff
    linter_text: |
      **SQLFluff** is a dialect-flexible and configurable SQL linter designed for ELT applications that works with Jinja templating and dbt. It provides comprehensive SQL code analysis including syntax checking, style validation, and formatting with support for multiple SQL dialects.

      **Key Features:**

      - **Multi-Dialect Support**: Compatible with ANSI SQL, BigQuery, Snowflake, Postgres, MySQL, SparkSQL, and more SQL dialects
      - **Jinja Templating**: Native support for Jinja templating commonly used in dbt and other ELT frameworks
      - **Auto-Fix Capability**: Automatically repairs most linting errors and formatting issues with --fix option
      - **Configurable Rules**: Extensive rule set with granular configuration options for team-specific standards
      - **dbt Integration**: Seamless integration with dbt projects including macro and model analysis
      - **Detailed Reporting**: Comprehensive error reporting with line numbers, positions, and fix suggestions
      - **Custom Rules**: Extensible architecture allowing custom rule development for specific requirements
      - **Performance Optimized**: Fast parsing and analysis even for large SQL codebases
    linter_url: https://www.sqlfluff.com/
    linter_repo: https://github.com/sqlfluff/sqlfluff
    linter_spdx_license: MIT
    linter_banner_image_url: https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/images/sqlfluff-wide.png
    linter_image_url: https://docs.sqlfluff.com/en/stable/_static/images/sqlfluff-lrg.png
    linter_rules_url: https://docs.sqlfluff.com/en/stable/rules.html
    linter_rules_configuration_url: https://docs.sqlfluff.com/en/stable/configuration/index.html
    config_file_name: .sqlfluff
    active_only_if_file_found:
      - .sqlfluff
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_count
    cli_lint_errors_regex: "L:(.*)P:(.*)"
    cli_lint_extra_args:
      - lint
    cli_config_arg_name: "--config"
    cli_help_arg_name: "--help"
    cli_version_arg_name: "--version"
    examples:
      - "sqlfluff myfile.sql"
      - "sqlfluff --config .sqlfluff myfile.sql myfile2.sql"
    install:
      dockerfile:
        - |-
          # renovate: datasource=pypi depName=sqlfluff
          ARG PIP_SQLFLUFF_VERSION=3.4.1
      pip:
        - sqlfluff==${PIP_SQLFLUFF_VERSION}
  # TSQL
  - linter_name: tsqllint
    linter_text: |
      **tsqllint** is a specialized linter for T-SQL (Transact-SQL) code used with Microsoft SQL Server. It analyzes T-SQL scripts for syntax errors, style violations, and adherence to best practices with configurable rules, helping ensure T-SQL code quality and consistency in SQL Server database development projects.

      **Key Features:**

      - **T-SQL Specialized**: Purpose-built for Microsoft SQL Server T-SQL syntax and features
      - **Comprehensive Rule Set**: Extensive collection of rules covering syntax, style, and best practices
      - **Configurable Analysis**: Customizable rule configuration to match team coding standards
      - **Inline Rule Control**: Support for comment-based rule disabling and configuration within scripts
      - **Detailed Error Reporting**: Clear error messages with line numbers and rule explanations
      - **Performance Optimized**: Fast analysis suitable for large T-SQL codebases and stored procedures
      - **Cross-Platform**: Runs on Windows, macOS, and Linux environments
      - **Extensible Architecture**: Plugin system for custom rule development and organizational standards
    linter_spdx_license: MIT
    descriptor_flavors:
      - dotnet
      - dotnetweb
    linter_url: https://github.com/tsqllint/tsqllint
    linter_repo: https://github.com/tsqllint/tsqllint
    linter_image_url: https://tsqllint.gallerycdn.vsassets.io/extensions/tsqllint/tsqllint/1.2.0/1528922982751/Microsoft.VisualStudio.Services.Icons.Default
    linter_rules_url: https://github.com/tsqllint/tsqllint#rule-configuration
    linter_rules_configuration_url: https://github.com/tsqllint/tsqllint#rule-configuration
    linter_rules_inline_disable_url: https://github.com/tsqllint/tsqllint#disabling-rules-with-inline-comments
    config_file_name: ".tsqllintrc"
    cli_lint_mode: list_of_files
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "([0-9]+) Errors"
    cli_lint_warnings_count: regex_number
    cli_lint_warnings_regex: "([0-9]+) Warnings"
    cli_config_arg_name: "--config"
    cli_help_arg_name: "--help"
    cli_version_arg_name: "--version"
    test_folder: sql_tsql
    examples:
      - "tsqllint myfile.sql"
      - "tsqllint myfile.sql myfile2.sql"
    install:
      dockerfile:
        - |-
          # renovate: datasource=nuget depName=TSQLLint
          ARG SQL_TSQLLINT_VERSION=1.16.0
        - RUN apk add --no-cache dotnet9-sdk
        - ENV PATH="${PATH}:/root/.dotnet/tools"
        - RUN dotnet tool install --allow-roll-forward --global TSQLLint --version ${SQL_TSQLLINT_VERSION}
    ide:
      vscode:
        - name: TSQL Lint
          url: https://marketplace.visualstudio.com/items?itemName=tsqllint.tsqllint
